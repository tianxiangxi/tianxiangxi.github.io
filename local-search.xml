<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>第十一周作业</title>
    <link href="/2022/12/18/%E7%AC%AC%E5%8D%81%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/12/18/%E7%AC%AC%E5%8D%81%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="一、ansible-常用指令总结，并附有相关示例。"><a href="#一、ansible-常用指令总结，并附有相关示例。" class="headerlink" title="一、ansible 常用指令总结，并附有相关示例。"></a>一、ansible 常用指令总结，并附有相关示例。</h3><h3 id="二、总结ansible-playbook目录结构及文件用途。"><a href="#二、总结ansible-playbook目录结构及文件用途。" class="headerlink" title="二、总结ansible playbook目录结构及文件用途。"></a>二、总结ansible playbook目录结构及文件用途。</h3><h3 id="三、使用ansible-playbook实现一个mysql角色。"><a href="#三、使用ansible-playbook实现一个mysql角色。" class="headerlink" title="三、使用ansible playbook实现一个mysql角色。"></a>三、使用ansible playbook实现一个mysql角色。</h3><h3 id="四、基于角色完成部署LNMP架构，并支持一键发布，回滚应用。同时基于zabbix角色批量部署zabbix。"><a href="#四、基于角色完成部署LNMP架构，并支持一键发布，回滚应用。同时基于zabbix角色批量部署zabbix。" class="headerlink" title="四、基于角色完成部署LNMP架构，并支持一键发布，回滚应用。同时基于zabbix角色批量部署zabbix。"></a>四、基于角色完成部署LNMP架构，并支持一键发布，回滚应用。同时基于zabbix角色批量部署zabbix。</h3><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Typora的使用</title>
    <link href="/2022/12/09/Typora%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/12/09/Typora%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="一、Typora-中如何打小黑点，空心圆，实心方框"><a href="#一、Typora-中如何打小黑点，空心圆，实心方框" class="headerlink" title="一、Typora 中如何打小黑点，空心圆，实心方框"></a>一、Typora 中如何打小黑点，空心圆，实心方框</h1><p>这三个图标类似1、2、3级标题</p><ul><li><ul><li></li><li></li></ul></li></ul><p>第一步先快捷键：ctrl+shift+]即可输出小黑点，输出小黑点后回车，会再出现第二个</p><ul><li></li><li></li></ul><p>第二步：在小黑点后面输入内容或者直接空格，然后点击tab键，此行的小黑点会变成空心圆，再次回车会出现第二个空心圆</p><ul><li><ul><li>我</li><li></li></ul></li></ul><p>第三步：在第二个空心圆后面输入内容或者直接空格，然后点击tab键，此行的空心圆会变成实心方框，再次回车会出现第二个实心方框</p><ul><li><ul><li>我<ul><li>们</li><li></li></ul></li></ul></li></ul><h1 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h1><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>zabbix练习</title>
    <link href="/2022/12/04/zabbix%E7%BB%83%E4%B9%A0/"/>
    <url>/2022/12/04/zabbix%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="一、zabbix的规划及部署"><a href="#一、zabbix的规划及部署" class="headerlink" title="一、zabbix的规划及部署"></a>一、zabbix的规划及部署</h1><h2 id="1-1、部署环境"><a href="#1-1、部署环境" class="headerlink" title="1.1、部署环境"></a>1.1、部署环境</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs ABAP">主机类型                        IP地址<br>zabbix server                10.0.0.150<br>zabbix 主动代理               10.0.0.151<br>zabbix 被动代理               10.0.0.152<br>mysql master                 10.0.0.153<br>mysql slave                  10.0.0.154<br>web server1                  10.0.0.155<br>web server2                  10.0.0.156<br></code></pre></td></tr></table></figure><h2 id="1-2、yum安装zabbix"><a href="#1-2、yum安装zabbix" class="headerlink" title="1.2、yum安装zabbix"></a>1.2、yum安装zabbix</h2><p>产品手册：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://www.zabbix.com/documentation/4.0/zh/manual <br></code></pre></td></tr></table></figure><h3 id="1-2-1、安装zabbix-server"><a href="#1-2-1、安装zabbix-server" class="headerlink" title="1.2.1、安装zabbix-server"></a>1.2.1、安装zabbix-server</h3><p>官方网站：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://www.zabbix.com/cn/download<br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#环境rocky8+apache+mysql</span><br><br>[root@server ~]<span class="hljs-comment">#rpm -Uvh https://repo.zabbix.com/zabbix/4.0/rhel/8/x86_64/zabbix-release-4.0-2.el8.noarch.rpm</span><br>**********************************************************************************<br><span class="hljs-comment">#注意此时下载后，repo库里的下载地址是官网地址，下载速度会比国内的镜像网站慢，可以将其更改为国内镜像网站</span><br>[root@server ~]<span class="hljs-comment">#rpm -ql zabbix-release</span><br>/etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX<br>/etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591<br>/etc/yum.repos.d/zabbix.repo<br>/usr/share/doc/zabbix-release<br>/usr/share/doc/zabbix-release/GPL<br>[root@server ~]<span class="hljs-comment">#cat /etc/yum.repos.d/zabbix.repo</span><br>[zabbix]<br>name=Zabbix Official Repository - <span class="hljs-variable">$basearch</span><br>baseurl=http://repo.zabbix.com/zabbix/4.0/rhel/8/<span class="hljs-variable">$basearch</span>/<br><br>[zabbix-non-supported]<br>name=Zabbix Official Repository non-supported - <span class="hljs-variable">$basearch</span><br>baseurl=http://repo.zabbix.com/non-supported/rhel/8/<span class="hljs-variable">$basearch</span>/<br>[root@server ~]<span class="hljs-comment">#sed -i &#x27;s#http://repo.zabbix.com#https://mirrors.tuna.tsinghua.edu.cn/zabbix#&#x27; /etc/yum.repos.d/zabbix.repo</span><br>[root@server ~]<span class="hljs-comment">#cat /etc/yum.repos.d/zabbix.repo</span><br>[zabbix]<br>name=Zabbix Official Repository - <span class="hljs-variable">$basearch</span><br>baseurl=https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/4.0/rhel/8/<span class="hljs-variable">$basearch</span>/<br><br>[zabbix-non-supported]<br>name=Zabbix Official Repository non-supported - <span class="hljs-variable">$basearch</span><br>baseurl=https://mirrors.tuna.tsinghua.edu.cn/zabbix/non-supported/rhel/8/<span class="hljs-variable">$basearch</span>/<br>************************************************************************************<br>[root@server ~]<span class="hljs-comment">#dnf clean all</span><br><br><br><span class="hljs-comment">#安装Zabbix server，Web前端，agent</span><br>[root@server ~]<span class="hljs-comment">#dnf install zabbix-server-mysql zabbix-web-mysql zabbix-agent</span><br><span class="hljs-comment">#从5版本开始zabbix-agent更改为zabbix-agent2</span><br><br><span class="hljs-comment">#安装mysql客户端</span><br>[root@server ~]<span class="hljs-comment">#yum -y install mysql</span><br></code></pre></td></tr></table></figure><h3 id="1-2-2、准备数据库"><a href="#1-2-2、准备数据库" class="headerlink" title="1.2.2、准备数据库"></a>1.2.2、准备数据库</h3><p>在mysql maser安装数据库并授权zabbix使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@mysql_master ~]<span class="hljs-comment">#yum -y install mysql-server</span><br><span class="hljs-comment">#查看mysql的监听端口，如果是127.0.0.0，需要将其更改为0.0.0.0</span><br>[root@mysql_master ~]<span class="hljs-comment">#systemctl enable --now mysqld</span><br>[root@mysql_master ~]<span class="hljs-comment">#mysql</span><br>mysql&gt; create database zabbixtest  character <span class="hljs-built_in">set</span> utf8 collate utf8_bin;<br>mysql&gt; create user zabbix@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br>mysql&gt; grant all privileges on zabbixtest.* to zabbix@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span>;<br><span class="hljs-comment">#或者可以直接重定向</span><br>[root@server ~]<span class="hljs-comment">#cat &lt;&lt; EOF | mysql</span><br>create database zabbixtest  character <span class="hljs-built_in">set</span> utf8 collate utf8_bin;<br>create user zabbix@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br>grant all privileges on zabbixtest.* to zabbix@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span>;<br>EOF<br><br><span class="hljs-comment">#通过mysql客户端查看mysql服务器的数据库是否创建完成</span><br>[root@proxy_active ~]<span class="hljs-comment">#mysql -uzabbix -p123456 -h10.0.0.153</span><br>mysql&gt; show databases;<br>+--------------------+<br>| Database           |<br>+--------------------+<br>| information_schema |<br>| zabbix             |<br>+--------------------+<br><br><br><br><br></code></pre></td></tr></table></figure><h3 id="1-2-3、zabbix连接mysql服务器"><a href="#1-2-3、zabbix连接mysql服务器" class="headerlink" title="1.2.3、zabbix连接mysql服务器"></a>1.2.3、zabbix连接mysql服务器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@proxy_active ~]<span class="hljs-comment">#vim etc/zabbix/zabbix_server.conf</span><br>DBHost=10.0.0.153 <br>DBName=zabbixtest<br>DBUser=zabbix<br>DBPassword=123456                   <span class="hljs-comment">#修改此四项</span><br>:wq<br><br><span class="hljs-comment">#需要执行导入初始架构和数据</span><br>[root@proxy_active ~]<span class="hljs-comment">#zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p123456 -h10.0.0.153  zabbixtest</span><br>mysql:[Warning] Using a password on the <span class="hljs-built_in">command</span> line interface can be insecure            <span class="hljs-comment">#报警说密码直接写在命令行不安全，不影响操作，可忽略</span><br><span class="hljs-comment">#现在zabbix数据库了有许多表了</span><br><br>[root@server ~]<span class="hljs-comment">#find / -name zabbix.conf</span><br>/etc/httpd/conf.d/zabbix.conf<br>/etc/php-fpm.d/zabbix.conf<br>[root@server ~]<span class="hljs-comment">#vim /etc/php-fpm.d/zabbix.conf</span><br>php_value[date.timezone] = Asia/Shanghai      <span class="hljs-comment">#取消注释，且更改时区</span><br><br>启动Zabbix server和agent进程<br>[root@server ~]<span class="hljs-comment">#systemctl restart zabbix-server zabbix-agent httpd php-fpm</span><br></code></pre></td></tr></table></figure><p>#此时输入网址：10.0.0.150/zabbix即可进入设置页面</p><p><a href=""><img src="image-20221204175320081.png" alt="image-20221204175320081"></a></p><p>下一步，如果全部显示OK即可进行下一步</p><p><a href=""><img src="image-20221204182318194.png" alt="image-20221204182318194"></a></p><p>下一步输入数据库的信息</p><p><a href=""><img src="image-20221204182509921.png" alt="image-20221204182509921"></a></p><p>下一步设置zabbix</p><p><a href=""><img src="image-20221204182711945.png" alt="image-20221204182711945"></a></p><p>下一步显示输入的所有信息</p><p><a href=""><img src="image-20221204182739001.png" alt="image-20221204182739001"></a></p><p>下一步显示创建完成，并提示信息放在的目录，如果更改可以去此路径下修改</p><p><a href=""><img src="image-20221204182857166.png" alt="image-20221204182857166"></a></p><p>登录界面：初始账号：Admin  初始密码：zabbix</p><p><a href=""><img src="image-20221204183011552.png" alt="image-20221204183011552"></a></p><p><a href=""><img src="image-20221204183036646.png" alt="image-20221204183036646"></a></p><h1 id="二、安装zabbix5-0（server、agent2"><a href="#二、安装zabbix5-0（server、agent2" class="headerlink" title="二、安装zabbix5.0（server、agent2)"></a>二、安装zabbix5.0（server、agent2)</h1><p><a href=""><img src="image-20221209143941907.png" alt="image-20221209143941907"></a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#安装server机器</span><br><span class="hljs-comment">#环境：rocky8+mysql+nginx+zabbix安装在一台机器上（生产环境中，mysql单独安装在一台机器）</span><br><br><span class="hljs-comment">#注意：因采用网址登录，所以需提前进行DNS域名解析</span><br>[root@Rocky ~]<span class="hljs-comment">#vim install_zabbix5.0_for_nginx_mysql.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br>rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/8/x86_64/zabbix-release-5.0-1.el8.noarch.rpm<br>sed -i <span class="hljs-string">&#x27;s#http://repo.zabbix.com#https://mirrors.tuna.tsinghua.edu.cn/zabbix#&#x27;</span> /etc/yum.repos.d/zabbix.repo<br>dnf clean all<br>dnf -y install zabbix-server-mysql zabbix-web-mysql zabbix-nginx-conf zabbix-agent2<br>yum -y install mysql-server<br>systemctl <span class="hljs-built_in">enable</span> --now mysqld<br><span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">EOF | mysql</span><br><span class="hljs-string">create database zabbix character set utf8 collate utf8_bin;</span><br><span class="hljs-string">create user zabbix@localhost identified by &#x27;123456&#x27;;</span><br><span class="hljs-string">grant all privileges on zabbix.* to zabbix@localhost;</span><br><span class="hljs-string">EOF</span><br>zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p123456  zabbix<br>sed -i.bak <span class="hljs-string">&#x27;/# DBPassword/a DBPassword=123456&#x27;</span> /etc/zabbix/zabbix_server.conf<br>systemctl start nginx<br>sed -i.bak <span class="hljs-string">&#x27;/^server/a\        listen 80;\n        server_name     zabbix.magedu.org; &#x27;</span> /etc/nginx/conf.d/zabbix.conf<br>sed -i.bak <span class="hljs-string">&#x27;/date.timezone/c php_value[date.timezone] = Asia/Shanghai&#x27;</span> /etc/php-fpm.d/zabbix.conf<br>systemctl restart zabbix-server zabbix-agent2 nginx php-fpm<br>systemctl <span class="hljs-built_in">enable</span> zabbix-server zabbix-agent2 nginx php-fpm<br>:wq<br><span class="hljs-comment">#以上就创建好了简单的安装脚本</span><br><br><span class="hljs-comment">#此时网站是英文环境，需提前安装中文包，才能设置为中文环境</span><br>[root@Rocky ~]<span class="hljs-comment">#yum -y install langpacks-zh_CN</span><br><span class="hljs-comment">#但图形里面会有一些乱码</span><br><br><span class="hljs-comment">#将Windows里的字体文件放入到zabbix-server主机里会解决此问题，Windows字体路径：控制面板\外观和个性化\字体</span><br><br><span class="hljs-comment">#将中文字体上传到 Zabbix Server 的目录 /usr/share/zabbix/assets/fonts 下</span><br>[root@Rocky ~]<span class="hljs-comment">#cd /usr/share/zabbix/assets/fonts</span><br>[root@Rocky fonts]<span class="hljs-comment">#ll</span><br>total 0<br>lrwxrwxrwx 1 root root 33 Dec  9 09:17 graphfont.ttf -&gt; /etc/alternatives/zabbix-web-font<br>[root@Rocky fonts]<span class="hljs-comment">#mv graphfont.ttf graphfont.ttf.bak</span><br>[root@Rocky fonts]<span class="hljs-comment">#ls</span><br>graphfont.ttf.bak<br>[root@Rocky fonts]<span class="hljs-comment">#rz -E</span><br>rz waiting to receive.<br>[root@Rocky fonts]<span class="hljs-comment">#ls</span><br>graphfont.ttf.bak  simsun.ttc<br>[root@Rocky fonts]<span class="hljs-comment">#cp simsun.ttc graphfont.ttf   #将上传的字体设置为linux的字体</span><br>[root@Rocky fonts]<span class="hljs-comment">#ls</span><br>graphfont.ttf  graphfont.ttf.bak  simsun.ttc<br><br>**********************************************************************************<br><br><span class="hljs-comment">#安装agent2</span><br><span class="hljs-comment">#Rocky8.6系统,简单脚本如下</span><br>[root@Rocky ~]<span class="hljs-comment">#vim install_zabbix5.0_agent2_for_rocky8</span><br>rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/8/x86_64/zabbix-release-5.0-1.el8.noarch.rpm<br>sed -i <span class="hljs-string">&#x27;s#http://repo.zabbix.com#https://mirrors.tuna.tsinghua.edu.cn/zabbix#&#x27;</span> /etc/yum.repos.d/zabbix.repo<br>dnf clean all<br>dnf -y install zabbix-agent2<br>sed -i.bak <span class="hljs-string">&#x27;/^Server=/c Server=10.0.0.190&#x27;</span> /etc/zabbix/zabbix_agent2.conf  <span class="hljs-comment">#zabbix_server安装在10.0.0.190(ip地址也可以写成网址，相对应的需要在本机上解析此网址)</span><br> <span class="hljs-comment">#其中两种方法</span><br> <span class="hljs-comment">#①在/etc/hosts里面添加 10.0.0.190  网址</span><br> <span class="hljs-comment">#②在/etc/sysconfig/network-scripts/ifcfg-eth0里面将DNS指向10.0.0.128（此ip是自己设置的DNS解析服务器，里面有10.0.0.190所对应的网址）</span><br>systemctl start zabbix-agent2<br>systemctl <span class="hljs-built_in">enable</span> zabbix-agent2<br>:wq<br><br><br>**********************************************************************************<br><br><span class="hljs-comment">#此时需要在zabbix_server进行设置，允许监视zabbix_agent2</span><br><span class="hljs-comment">#操作步骤如下图</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221209114517537.png" alt="image-20221209114517537"></a></p><p>创建主机</p><p><a href=""><img src="image-20221209115037183.png" alt="image-20221209115037183"></a></p><p>添加完成后（红框里面的是上面设置的可见名称）</p><p><a href=""><img src="image-20221209115137286.png" alt="image-20221209115137286"></a></p><p>此时需要设置检测agent2哪些参数</p><p><a href=""><img src="image-20221209115427819.png" alt="image-20221209115427819"></a></p><p>创建监控项，更快捷的方法是使用模板</p><p><a href=""><img src="image-20221209115729329.png" alt="image-20221209115729329"></a></p><p>模板选择（系统提供的制式监控参数选项）</p><p><a href=""><img src="image-20221209115936460.png" alt="image-20221209115936460"></a></p><p><a href=""><img src="image-20221209120030408.png" alt="image-20221209120030408"></a></p><p>#注意此时是被动模式（server问一个参数，agent2回复一个参数），被动模式是默认模式（后期可以更改为主动模式）</p><h1 id="三、Windows安装zabbix"><a href="#三、Windows安装zabbix" class="headerlink" title="三、Windows安装zabbix"></a>三、Windows安装zabbix</h1><p><a href=""><img src="image-20221209144621308.png" alt="image-20221209144621308"></a></p><p>点击下载的包进行安装</p><p><a href=""><img src="image-20221209150106786.png" alt="image-20221209150106786"></a></p><p>其他默认下一步进行安装</p><p>安装完成后，可以查看10050端口是否启动</p><p><a href=""><img src="image-20221209150225540.png" alt="image-20221209150225540"></a></p><p>另外可以在服务里查看运行的程序</p><p><a href=""><img src="image-20221209150503972.png" alt="image-20221209150503972"></a></p><p>zabbix的配置文件路径：C:\Program Files\Zabbix Agent 2</p><p><a href=""><img src="image-20221209150656813.png" alt="image-20221209150656813"></a></p><p>下一步需要在zabbix-server创建主机</p><p><a href=""><img src="image-20221209151004099.png" alt="image-20221209151004099"></a></p><p>下一步添加模板</p><p><a href=""><img src="image-20221209151140381.png" alt="image-20221209151140381"></a></p><h1 id="四、迁移mysql到独立服务器"><a href="#四、迁移mysql到独立服务器" class="headerlink" title="四、迁移mysql到独立服务器"></a>四、迁移mysql到独立服务器</h1><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span>将zabbix-server服务停止（最好在无人访问的时候停止）<br><span class="hljs-symbol">1 </span>将mysql上的所有数据备份出来，但如果不先停止服务，则一直在采集数据到mysql<br><span class="hljs-symbol">2 </span>恢复到独立同一版本同一配置的mysql服务器<br><span class="hljs-symbol">3 </span>修改zabbix server指向新的mysql服务器地址<br><span class="hljs-symbol">4 </span>修改PHP指向新的mysql服务器地址<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221209153551420.png" alt="image-20221209153551420"></a></p><h2 id="4-1、备份数据到独立mysql服务器上"><a href="#4-1、备份数据到独立mysql服务器上" class="headerlink" title="4.1、备份数据到独立mysql服务器上"></a>4.1、备份数据到独立mysql服务器上</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#在10.0.0.188上安装mysql服务器</span><br>[root@mysql-server ~]<span class="hljs-comment">#yum -y install mysql-server</span><br>[root@mysql-server ~]<span class="hljs-comment">#systemctl enable --now mysqld</span><br><br><span class="hljs-comment">#在zabbix-server上备份数据，并传至10.0.0.188</span><br>[root@zabbix_server ~]<span class="hljs-comment">#systemctl stop zabbix-server.service </span><br>[root@zabbix_server ~]<span class="hljs-comment">#mysqldump -uroot -A --single-transaction --default-character-set=utf8 &gt; all.sql             #备份数据</span><br>[root@zabbix_server ~]<span class="hljs-comment">#ll</span><br>total 10260<br>-rw-r--r--  1 root root 10496967 Dec  9 15:51 all.sql<br>-rw-------. 1 root root     1264 Aug 25 16:39 anaconda-ks.cfg<br>-rw-r--r--  1 root root     1077 Dec  9 09:40 install_zabbix5.0_for_nginx_mysql.sh<br>[root@zabbix_server ~]<span class="hljs-comment">#scp all.sql 10.0.0.188:</span><br><br><span class="hljs-comment">#将数据导入数据库</span><br>[root@mysql-server ~]<span class="hljs-comment">#mysql &lt; all.sql</span><br>[root@mysql-server ~]<span class="hljs-comment">#mysql</span><br>mysql&gt; show databases;            <span class="hljs-comment">#查看zabbix数据库已导入</span><br>+--------------------+<br>| Database           |<br>+--------------------+<br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| sys                |<br>| zabbix             |<br>+--------------------+<br>mysql&gt; select user,host from mysql.user;     <span class="hljs-comment">#查看zabbix用户已导入，但账号只能本地使用</span><br>+------------------+-----------+<br>| user             | host      |<br>+------------------+-----------+<br>| mysql.infoschema | localhost |<br>| mysql.session    | localhost |<br>| mysql.sys        | localhost |<br>| root             | localhost |<br>| zabbix           | localhost |<br>+------------------+-----------+<br><span class="hljs-comment">#查看数据库的字符集</span><br>mysql&gt; show create database zabbix;<br>+----------+---------------------------------------------------------------------------------------------------------------------+<br>| Database | Create Database                                                                                                     |<br>+----------+---------------------------------------------------------------------------------------------------------------------+<br>| zabbix   | CREATE DATABASE `zabbix` /*!40100 DEFAULT CHARACTER SET utf8 COLLATE utf8_bin */ /*!80016 DEFAULT ENCRYPTION=<span class="hljs-string">&#x27;N&#x27;</span> */ |<br>+----------+---------------------------------------------------------------------------------------------------------------------+<br><br><span class="hljs-comment">#创建账号和授权</span><br>mysql&gt; create user zabbix@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br>mysql&gt; grant all privileges on zabbix.* to zabbix@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span>;<br><br></code></pre></td></tr></table></figure><h2 id="4-2、修改zabbix-server和PHP配置"><a href="#4-2、修改zabbix-server和PHP配置" class="headerlink" title="4.2、修改zabbix server和PHP配置"></a>4.2、修改zabbix server和PHP配置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@zabbix_server ~]<span class="hljs-comment">#vim /etc/zabbix/zabbix_server.conf</span><br>DBHost=10.0.0.188                <span class="hljs-comment">#将localhost更改为10.0.0.188</span><br>:wq<br>[root@zabbix_server ~]<span class="hljs-comment">#systemctl restart zabbix-server.service</span><br><br>[root@zabbix_server ~]<span class="hljs-comment">#systemctl stop mysqld</span><br>[root@zabbix_server ~]<span class="hljs-comment">#systemctl disable mysqld</span><br><span class="hljs-comment">#关闭旧数据库后PHP页面无法打开</span><br><br><span class="hljs-comment">#修改PHP配置文件</span><br>[root@zabbix_server ~]<span class="hljs-comment">#vim /etc/zabbix/web/zabbix.conf.php </span><br><span class="hljs-variable">$DB</span>[<span class="hljs-string">&#x27;SERVER&#x27;</span>]                   = <span class="hljs-string">&#x27;10.0.0.188&#x27;</span>;   <span class="hljs-comment">#将localhost更改为10.0.0.188</span><br>:wq<br><span class="hljs-comment">#此时就可以正常访问了</span><br><br></code></pre></td></tr></table></figure><h1 id="五、创建自定义监控项"><a href="#五、创建自定义监控项" class="headerlink" title="五、创建自定义监控项"></a>五、创建自定义监控项</h1><p><a href=""><img src="image-20221210102215196.png" alt="image-20221210102215196"></a></p><h2 id="5-1、在agent主机上创建监控项"><a href="#5-1、在agent主机上创建监控项" class="headerlink" title="5.1、在agent主机上创建监控项"></a>5.1、在agent主机上创建监控项</h2><ul><li><p>在配置文件里添加监控项（/etc/zabbix/zabbix_agent2.conf），或者在/etc/zabbix/zabbix_agent2.d/下创建*.conf文件</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">内容格式：UserParameter=<span class="hljs-symbol">&lt;key&gt;</span>,&lt;<span class="hljs-keyword">shell</span> <span class="hljs-keyword">command</span>&gt;<br></code></pre></td></tr></table></figure></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#例如：</span><br>[root@Rocky ~]<span class="hljs-comment">#cd /etc/zabbix/zabbix_agent2.d/</span><br>[root@Rocky zabbix_agent2.d]<span class="hljs-comment">#ls</span><br>[root@Rocky zabbix_agent2.d]<span class="hljs-comment">#vim user_login_count.conf</span><br>UserParameter=user_login_count，<span class="hljs-built_in">who</span>|<span class="hljs-built_in">wc</span> -l<br><span class="hljs-comment">#(user_login_count是监控项名称，who|wc -l是获取监控项的命令）</span><br>:wq<br><br><span class="hljs-comment">#在agent的机器上可以使用命令检测设置的监控项是否正确</span><br>[root@Rocky zabbix_agent2.d]<span class="hljs-comment">#zabbix_agent2 -t user_login_count</span><br>user_login_count                              [s|3]<br><span class="hljs-comment">#但此时zabbix-server检测不到</span><br>[root@zabbix_server ~]<span class="hljs-comment">#zabbix_get  -s 10.0.0.189 -k   user_login_count</span><br>ZBX_NOTSUPPORTED: Unknown metric user_login_count<br><br><span class="hljs-comment">#重启agent才能在zabbix-server上获取监控项</span><br>[root@Rocky zabbix_agent2.d]<span class="hljs-comment">#systemctl restart zabbix-agent2</span><br>[root@zabbix_server ~]<span class="hljs-comment">#zabbix_get  -s 10.0.0.189 -k   user_login_count</span><br>4<br><span class="hljs-comment">#zabbix_get  -s  ip(agent的地址） -k   user_login_count (注意：zabbix_get需要提前安装zabbix-get包</span><br></code></pre></td></tr></table></figure><h2 id="5-2、在zabbix-server增加监控项"><a href="#5-2、在zabbix-server增加监控项" class="headerlink" title="5.2、在zabbix-server增加监控项"></a>5.2、在zabbix-server增加监控项</h2><h3 id="5-2-1、单独添加监控项"><a href="#5-2-1、单独添加监控项" class="headerlink" title="5.2.1、单独添加监控项"></a>5.2.1、单独添加监控项</h3><p>内容填写完后，先进行测试，如果测试出结果来，则说明设置正确，然后再点添加</p><p><a href=""><img src="image-20221210103922406.png" alt="image-20221210103922406"></a></p><h3 id="5-2-2、创建新模版，在模板里添加监控项"><a href="#5-2-2、创建新模版，在模板里添加监控项" class="headerlink" title="5.2.2、创建新模版，在模板里添加监控项"></a>5.2.2、创建新模版，在模板里添加监控项</h3><p>先创建模板</p><p><a href=""><img src="image-20221210105107430.png" alt="image-20221210105107430"></a></p><p>添加监控项</p><p><a href=""><img src="image-20221210105510936.png" alt="image-20221210105510936"></a></p><h1 id="六、设置为主动模式"><a href="#六、设置为主动模式" class="headerlink" title="六、设置为主动模式"></a>六、设置为主动模式</h1><p>Zabbix 有两种工作模式: 主动和被动模式</p><p>无论是模式还是被动模式，都是站在zabbix agent 角度来说的工作模式</p><p><strong>主动模式和被动模式都是相对zabbix agent而言的</strong></p><p>Zabbix默认是被动模式，如果有100个监控项，被动模式需要 Zabbix Server找 Zabbix Agent要100次</p><p>主动模式是Zabbix Server给 Zabbix Agent发送一个包括100个监控项的任务清单，Zabbix Agent根据任务清单，采集好100个监控项的值，主动汇报给 Zabbix Server这100个监控项，Zabbix Agent主动模式只需要发送一次数据，大大提高了传输效率。</p><ul><li><p>被动模式: Server 向 Agent 请求获取监控项的数据，Agent返回数据。此为默认模式,如果有100个监控项,则需要100次交互</p></li><li><p>主动模式: Agent 请求 Server 获取主动的监控项列表，并主动将监控项内需要检测的数据提交给server/proxy,如有100个监控项,只需要1次交互即可</p></li></ul><p>注意: 两种模式可以在Zabbix Server上同时存在,可以将一部分监控项设为主动,其它设为被动模式</p><p><strong>被动监测通信过程如下</strong>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">Server打开一个TCP连接<br>Server发送请求agent.ping<br>Agent接收到请求并且响应&lt;HEADER&gt;&lt;DATALEN&gt;<br>Server处理接收到的数据<br>关闭TCP连接<br>被动模式每获取一个监控项都需要打开一个tcp连接，这样当监控项越来越多时，Zabbix Server会打开很<br>多端口,就会出现server端性能瓶颈问题。<br></code></pre></td></tr></table></figure><p><strong>主动模式监测通信过程如下</strong>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">zabbix agent 首先向ServerActive配置的IP请求获取active items，获取并提交active items数<br>据值给server或者proxy。<br>zabbix多久获取一次active items？<br>它会根据agent的配置文件中的RefreshActiveChecks的频率进行，如果获取失败，那么将会在60秒之后<br>重试。<br></code></pre></td></tr></table></figure><h2 id="6-1、主动模式介绍"><a href="#6-1、主动模式介绍" class="headerlink" title="6.1、主动模式介绍"></a>6.1、主动模式介绍</h2><p>主动模式是由每个zabbix agent 打开本机的随机端口, 主动向 Zabbix Server (或者Zabbix Proxy)的10051端口发起tcp连接请求</p><p>主动模式下必须在zabbix agent配置文件中指定zabbix server的IP或者主机名(必须可以被解析为IP地 址)，在连接到zabbix server之前zabbix agent是不知道自己要采集那些数据以及间隔多久采集一次数据的，然后在连接到zabbix server以后获取到自己的监控项和数据采集间隔周期时间，然后再根据监控项采集数据并返回给zabbix server，在主动模式下不再需要zabbix serve向zabbix agent发起连接请求，因此主动模式在一定程度上可减轻zabbix server打开的本地随机端口和进程数，在一定程度就减轻了zabbix server的压力。经过优化后可以轻松监控2000台，甚至5000以上的主机</p><p>以下场景下生产推荐使用主动模式</p><ul><li><p>Zabbix Server 出现性能瓶颈, 监控队列出现大量延迟的监控项,告警不及时</p></li><li><p>监控主机超过 500 台以上</p></li></ul><h2 id="6-2、zabbix-agent2实现主动模式"><a href="#6-2、zabbix-agent2实现主动模式" class="headerlink" title="6.2、zabbix agent2实现主动模式"></a>6.2、zabbix agent2实现主动模式</h2><p>在Zabbix Agent实现主动模式流程</p><ul><li><p>在 Zabbix Agent 配置主机模式相关配置</p></li><li><p>在 Zabbix Server 创建配置有主动模式监控项的模板</p></li><li><p>关联主动模板至支持主动模式的 Agent 主机</p></li></ul><p><strong>注意:基于原被动模板克隆生成的主动模式模板,不是所有监控项都能改为主动模,比如agent.ping监控项如果改为主动模式, ZBX 提示将无法变绿</strong></p><h3 id="6-2-1、在zabbix-agent2配置主动模式"><a href="#6-2-1、在zabbix-agent2配置主动模式" class="headerlink" title="6.2.1、在zabbix agent2配置主动模式"></a>6.2.1、在zabbix agent2配置主动模式</h3><p>Zabbix Server 主动和被动模式无需配置即可支持,还可以支持多个主动和被动模式的Zabbix Agent 同时存在</p><p>Zabbix Agent 默认是被动模式，需要修改配置才能支持主动模式</p><p>Zabbix Agent 的关健配置有下面三项</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">Server=&lt;Zabbix Server&gt;          <span class="hljs-comment">#被动模式指向 Zabbix Server的IP或FQDN,默认模式</span><br>ServerActive=&lt;Zabbix Server&gt;    <span class="hljs-comment">#主动模式指向 Zabbix Server的IP或FQDN</span><br>Hostname=&lt;当前主机IP&gt;            <span class="hljs-comment">#当前主机的IP,此项必须和Zabbix Server中设置的主机名称相同</span><br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@zabbix_agent2 ~]<span class="hljs-comment">#vim /etc/zabbix/zabbix_agent2.conf</span><br>ServerActive=10.0.0.190<br>Hostname=10.0.0.189<br>Timeout=30                       <span class="hljs-comment">#建议修改</span><br>:wq<br>[root@zabbix_agent2 ~]<span class="hljs-comment">#systemctl restart zabbix-agent2.service</span><br></code></pre></td></tr></table></figure><h3 id="6-2-2、基于现有模板将包含的监控项修改为主动模式的监控项"><a href="#6-2-2、基于现有模板将包含的监控项修改为主动模式的监控项" class="headerlink" title="6.2.2、基于现有模板将包含的监控项修改为主动模式的监控项"></a>6.2.2、基于现有模板将包含的监控项修改为主动模式的监控项</h3><p><strong>注意</strong>: Zabbix 5.0 内置了主动模式的模板 Template OS Linux by Zabbix agent active 无需修改</p><p>Zabbix4.0 之前没有主动模式的模板,需要自行修改</p><p>如果自己创建的模板是被动模式，也可以改成主动模式</p><p>模板—&gt;选中监控项—&gt;点击批量更新—&gt;选中类型（主动式）</p><p><a href=""><img src="image-20221212142511784.png" alt="image-20221212142511784"></a></p><p><a href=""><img src="image-20221212142543335.png" alt="image-20221212142543335"></a></p><h1 id="七、监控java程序"><a href="#七、监控java程序" class="headerlink" title="七、监控java程序"></a>七、监控java程序</h1><p><a href=""><img src="image-20221212150021551.png" alt="image-20221212150021551"></a></p><h2 id="7-1、部署tomcat服务并开启JMX功能"><a href="#7-1、部署tomcat服务并开启JMX功能" class="headerlink" title="7.1、部署tomcat服务并开启JMX功能"></a>7.1、部署tomcat服务并开启JMX功能</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@tomcat ~]<span class="hljs-comment">#rz -E</span><br>rz waiting to receive.<br>[root@tomcat ~]<span class="hljs-comment">#rz -E</span><br>rz waiting to receive.<br>[root@tomcat ~]<span class="hljs-comment">#rz -E</span><br>rz waiting to receive.<br>[root@tomcat ~]<span class="hljs-comment">#ls</span><br>install_tomcat.sh apache-tomcat-9.0.59.tar.gz jdk-11.0.14_linux-x64_bin.tar.gz<br>[root@tomcat ~]<span class="hljs-comment">#bash install_tomcat.sh</span><br><span class="hljs-comment">#此时8080端口已打开</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221212151558229.png" alt="image-20221212151558229"></a></p><p><strong>tomcat 开启远程 JMX 环境配置</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">vim /usr/local/tomcat/bin/catalina.sh<br>CATALINA_OPTS=<span class="hljs-string">&quot;<span class="hljs-variable">$CATALINA__OPTS</span></span><br><span class="hljs-string">-Dcom.sun.management.jmxremote                 #启用远程监控JMX </span><br><span class="hljs-string">-Djava.rmi.server.hostname=&lt;JAVA主机IP&gt;   #是tomcat主机自己的IP地址,不是zabbix服务器的地址</span><br><span class="hljs-string">-Dcom.sun.management.jmxremote.port=XXXXX       #默认启动的JMX端口号，要和zabbix添加主机时候的端口一致即可</span><br><span class="hljs-string">-Dcom.sun.management.jmxremote.authenticate=false    #不使用用户名密码</span><br><span class="hljs-string">-Dcom.sun.management.jmxremote.ssl=false&quot;</span>            <span class="hljs-comment">#不使用ssl认证</span><br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#打开jmx功能</span><br>[root@tomcat ~]<span class="hljs-comment">#vim /usr/local/tomcat/bin/catalina.sh</span><br>CATALINA_OPTS=<span class="hljs-string">&quot;<span class="hljs-variable">$CATALINA__OPTS</span> -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=12345 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.0.0.218&quot;</span><br>:wq<br>[root@tomcat ~]<span class="hljs-comment">#systemctl restart tomcat</span><br><span class="hljs-comment">#此时12345端口就开启了</span><br><br></code></pre></td></tr></table></figure><h2 id="7-2、部署Java-gateway服务器"><a href="#7-2、部署Java-gateway服务器" class="headerlink" title="7.2、部署Java gateway服务器"></a>7.2、部署Java gateway服务器</h2><p>Java gateway 是一个独立于zabbix server和 zabbix agent的组件，默认使用端口10052/tcp, 所以java gateway可以是单独的一台服务器，但是也可以和zabbix server或者zabbix agent 共用一台服务器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#将gateway安装在zabbix server服务器上</span><br><span class="hljs-comment">#因zabbix server服务器上已将下载过相关包，所有只需要安装gateway（如果是独立机器，需要从头开始）</span><br>[root@zabbix_server ~]<span class="hljs-comment">#yum -y install zabbix-java-gateway</span><br><span class="hljs-comment">#默认的配置文件可不做修改</span><br>[root@zabbix_server ~]<span class="hljs-comment">#systemctl enable --now zabbix-java-gateway.service</span><br><span class="hljs-comment">#此时10052端口已开启</span><br>[root@zabbix_server ~]<span class="hljs-comment">#ss -ntl</span><br>State  Recv-Q   Send-Q      Local Address:Port       Peer Address:Port   Process     <br>LISTEN    0      50            *:10052                   *:* <br><br></code></pre></td></tr></table></figure><h2 id="7-3、配置Zabbix-Server支持Java-gateway"><a href="#7-3、配置Zabbix-Server支持Java-gateway" class="headerlink" title="7.3、配置Zabbix Server支持Java gateway"></a>7.3、配置Zabbix Server支持Java gateway</h2><h3 id="7-3-1、Zabbix-Server开启Java-gateway功能"><a href="#7-3-1、Zabbix-Server开启Java-gateway功能" class="headerlink" title="7.3.1、Zabbix Server开启Java gateway功能"></a>7.3.1、Zabbix Server开启Java gateway功能</h3><p>默认有关java的监控项是不支持的</p><p>配置下面后,相关监控项会支持</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@zabbix_server ~]<span class="hljs-comment">#vim /etc/zabbix/zabbix_server.conf</span><br>JavaGateway=10.0.0.190                 <span class="hljs-comment">#gateway所在的IP地址</span><br>JavaGatewayPort=10052<br>StartJavaPollers=1                     <span class="hljs-comment">#默认为0表示没有开启java进程，最少为1，根据java数量往上调整数值</span><br>:wq<br>[root@zabbix_server ~]<span class="hljs-comment">#systemctl restart zabbix-server.service</span><br></code></pre></td></tr></table></figure><h3 id="7-3-2、添加主机和模板"><a href="#7-3-2、添加主机和模板" class="headerlink" title="7.3.2、添加主机和模板"></a>7.3.2、添加主机和模板</h3><p>添加主机</p><p><a href=""><img src="image-20221212155626992.png" alt="image-20221212155626992"></a></p><p>添加模板</p><p><a href=""><img src="image-20221212160211250.png" alt="image-20221212160211250"></a></p><h1 id="八、Zabbix分布式实现Proxy"><a href="#八、Zabbix分布式实现Proxy" class="headerlink" title="八、Zabbix分布式实现Proxy"></a>八、Zabbix分布式实现Proxy</h1><p><a href=""><img src="image-20221212174155958.png" alt="image-20221212174155958"></a></p><p>zabbix作为一个分布式监控系统(分布式监控解决方案)，支持通过代理(proxy)收集zabbix agent的监控</p><p>数据,然后由zabbix proxy再把数据发送给zabbix server，也就是zabbix proxy 可以代替zabbix server</p><p>收集监控数据，然后把数据汇报给zabbix server，所以zabbix proxy可以在一定程度上分担了zabbix </p><p>server的数据收集压力，从而降低了数据的采集时间、也相应的增加了zabbix server的监控能力。</p><p><strong>Zabbix Proxy只执行数据收集,不运行触发器,无处理事件,也不发送告警,无Web管理界面所以最终导致告警延时可能会比较长</strong></p><h2 id="8-1、Zabbix-Proxy安装和配置"><a href="#8-1、Zabbix-Proxy安装和配置" class="headerlink" title="8.1、Zabbix Proxy安装和配置"></a>8.1、Zabbix Proxy安装和配置</h2><p>Zabbix Proxy 也分主动模式和被动模式，通信方式与zabbix server主动模式和被动模式一样</p><p>Zabbix Proxy的模式 是从Zabbix Proxy 角度来说的</p><p>zabbix proxy在主动模式下要主动地向zabbix server周期性的申请获取zabbix agent的监控项信息,此模式可以大副降低Zabbix Server的压力,生产推荐使用</p><p>zabbix Proxy在被动模式下要被动地等待zabbix server的连接,并接受zabbix server发送的监控项指令，然后再由zabbix proxy向zabbix agent发起请求获取数据。</p><p><strong>注意</strong>: Zabbix Proxy的大版本必须要和zabbix server版本相同，否则很可能会导致出现 zabbi server与zabbix proxy不兼容问题</p><h3 id="8-1-1、Zabbix-Proxy和mysql安装"><a href="#8-1-1、Zabbix-Proxy和mysql安装" class="headerlink" title="8.1.1、Zabbix Proxy和mysql安装"></a>8.1.1、Zabbix Proxy和mysql安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@zabbix_proxy ~]<span class="hljs-comment">#cat install_zabbix5.0_proxy_for_nginx.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br>rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/8/x86_64/zabbix-release-5.0-1.el8.noarch.rpm<br>sed -i <span class="hljs-string">&#x27;s#http://repo.zabbix.com#https://mirrors.tuna.tsinghua.edu.cn/zabbix#&#x27;</span> /etc/yum.repos.d/zabbix.repo<br>dnf clean all<br>dnf -y install zabbix-proxy-mysql mysql-server zabbix-agent2<br>systemctl <span class="hljs-built_in">enable</span> --now mysqld<br><span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">EOF | mysql</span><br><span class="hljs-string">create database zabbix_proxy character set utf8 collate utf8_bin;</span><br><span class="hljs-string">create user zabbix@&#x27;10.0.0.%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="hljs-string">grant all privileges on zabbix_proxy.* to zabbix@&#x27;10.0.0.%&#x27;;</span><br><span class="hljs-string">set global log_bin_trust_function_creators = 1;</span><br><span class="hljs-string">EOF</span><br>zcat /usr/share/doc/zabbix-proxy-mysql*/schema.sql.gz | mysql -uzabbix -p123456 -h10.0.0.186 zabbix_proxy<br><span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">EOF | mysql</span><br><span class="hljs-string">set global log_bin_trust_function_creators = 0;</span><br><span class="hljs-string">EOF</span><br>sed -i.bak <span class="hljs-string">&#x27;/# DBPassword/a DBPassword=123456&#x27;</span> /etc/zabbix/zabbix_server.conf<br>systemctl restart zabbix-proxy zabbix-agent2<br>systemctl <span class="hljs-built_in">enable</span> zabbix-proxy zabbix-agent2<br>[root@zabbix_proxy ~]<span class="hljs-comment">#bash install_zabbix5.0_proxy_for_nginx.sh</span><br></code></pre></td></tr></table></figure><h3 id="8-1-2、主动模式配置"><a href="#8-1-2、主动模式配置" class="headerlink" title="8.1.2、主动模式配置"></a>8.1.2、主动模式配置</h3><h4 id="8-1-2-1、修改proxy配置文件"><a href="#8-1-2-1、修改proxy配置文件" class="headerlink" title="8.1.2.1、修改proxy配置文件"></a>8.1.2.1、修改proxy配置文件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@zabbix_proxy ~]<span class="hljs-comment">#grep &#x27;^[^#]&#x27; /etc/zabbix/zabbix_proxy.conf</span><br>ProxyMode=0                 <span class="hljs-comment">#主动模式为0，被动模式为1,默认为0即主动模式</span><br>Server=10.0.0.190            <span class="hljs-comment">#指向Zabbix Server</span><br>Hostname=Zabbix_proxy_10.0.0.186   <span class="hljs-comment">#此名称必须和后面Web管理页的agent代理程序名称相同</span><br>ListenPort=10051                   <span class="hljs-comment">#开启监听端口</span><br>LogFile=/var/log/zabbix/zabbix_proxy.log<br>LogFileSize=0<br>EnableRemoteCommands=1             <span class="hljs-comment">#开启远程命令，允许server到proxy上执行命令，在故障自愈时使用</span><br>PidFile=/var/run/zabbix/zabbix_proxy.pid<br>SocketDir=/var/run/zabbix<br>DBHost=10.0.0.186<br>DBName=zabbix_proxy<br>DBUser=zabbix<br>DBPassword=123456<br>ProxyOfflineBuffer=720         <span class="hljs-comment">#当proxy和server无法连接时将数据在本地保存多长时间,默 认1小时</span><br>HeartbeatFrequency=60         <span class="hljs-comment">#server端用来检测proxy可用性的心跳信息的时间间隔,被动模式无效</span><br>ConfigFrequency=60             <span class="hljs-comment">#每间隔多少时间到server获取监控项，在agent更新端监控项，只在主动模式有效,默认3600s</span><br>DataSenderFrequency=60       <span class="hljs-comment">#数据发送的间隔时间，只在主动模式有效,默认1s,建议加长</span><br>SNMPTrapperFile=/var/log/snmptrap/snmptrap.log<br>CacheSize=8M      <span class="hljs-comment">#当主机数量很多时，会将获取的监控项存放在缓存中，生产中设置2G</span><br>StartDBSyncers=4   <span class="hljs-comment">#启动多少个线程和数据库连接</span><br>HistoryCacheSize=16M  <span class="hljs-comment">#保存agent发送过来的监控数据的内存空间大小，生产中设置2G</span><br>HistoryIndexCacheSize=4M    <span class="hljs-comment">#历史数据的索引</span><br>Timeout=30                  <span class="hljs-comment">#获取数据的最长等待时间</span><br>ExternalScripts=/usr/lib/zabbix/externalscripts<br>LogSlowQueries=3000          <span class="hljs-comment">#慢查询时长</span><br>StatsAllowedIP=127.0.0.1<br>[root@zabbix_proxy ~]<span class="hljs-comment">#systemctl restart zabbix-proxy.service</span><br><span class="hljs-comment">#Zabbix Proxy 监听10051端口开启了</span><br></code></pre></td></tr></table></figure><h4 id="8-1-2-2、在Zabbix-Server上添加代理Proxies"><a href="#8-1-2-2、在Zabbix-Server上添加代理Proxies" class="headerlink" title="8.1.2.2、在Zabbix Server上添加代理Proxies"></a>8.1.2.2、在Zabbix Server上添加代理Proxies</h4><p>管理– agent 代理程序(英文环境为Proxies,汉化翻译不准确)</p><p>注意：agent代理程序名称要和proxy 配置文件中Hostname指定的名称相同，否则会现 proxy “zabbixproxy-active” not found的日志提示</p><p><a href=""><img src="image-20221212184603624.png" alt="image-20221212184603624"></a></p><h4 id="8-1-2-3、在Zabbix-Server上配置Zabbix-Agent使用主动代理"><a href="#8-1-2-3、在Zabbix-Server上配置Zabbix-Agent使用主动代理" class="headerlink" title="8.1.2.3、在Zabbix Server上配置Zabbix Agent使用主动代理"></a>8.1.2.3、在Zabbix Server上配置Zabbix Agent使用主动代理</h4><p>添加zabbix agent2主机10.0.0.220</p><p><a href=""><img src="image-20221212185208259.png" alt="image-20221212185208259"></a></p><h4 id="8-1-2-4、修改Zabbix-Agent配置文件为主动模式的-Zabbix-Proxy"><a href="#8-1-2-4、修改Zabbix-Agent配置文件为主动模式的-Zabbix-Proxy" class="headerlink" title="8.1.2.4、修改Zabbix Agent配置文件为主动模式的 Zabbix Proxy"></a>8.1.2.4、修改Zabbix Agent配置文件为主动模式的 Zabbix Proxy</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@zabbix_agent2_centos ~]<span class="hljs-comment">#vim /etc/zabbix/zabbix_agent2.conf</span><br>Server=10.0.0.190,10.0.0.186<br>ServerActive=10.0.0.186<br>Hostname=10.0.0.22<br>:wq<br>[root@zabbix_agent2_centos ~]<span class="hljs-comment">#systemctl restart zabbix-agent2.service</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221212192230574.png" alt="image-20221212192230574"></a></p><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>java的编译安装</title>
    <link href="/2022/12/03/java%E7%9A%84%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/"/>
    <url>/2022/12/03/java%E7%9A%84%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<p><strong>①c语言的编译安装</strong>：（在解压缩的目录里执行）</p><p>三步   ./configure ;  make ; make install</p><p><strong>②java的编译安装：</strong>（在解压缩的目录里执行，即在有pom.xml的目录下）</p><p>一步     mvn  clean  package  -Dmaven.test.skip=true</p><p><strong>注释：</strong>mvn:maven的缩写 ；-Dmaven.test.skip=true：忽略测试代码的编译</p><h3 id="一、java的编译安装"><a href="#一、java的编译安装" class="headerlink" title="一、java的编译安装"></a>一、java的编译安装</h3><h4 id="1-1、maven的安装"><a href="#1-1、maven的安装" class="headerlink" title="1.1、maven的安装"></a>1.1、maven的安装</h4><p>maven 官网</p><figure class="highlight http"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs http">https://maven.apache.org/<br></code></pre></td></tr></table></figure><p>maven 官方仓库 ：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">http://repo.maven.apache.org<br></code></pre></td></tr></table></figure><p>maven 下载</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs http">#官方<br>https://maven.apache.org/download.cgi<br><br>#清华镜像源<br>http://mirrors.tuna.tsinghua.edu.cn/apache/maven<br><br>#官方各版本下载地址，推荐使用次新版本<br>https://archive.apache.org/dist/maven/maven-3<br></code></pre></td></tr></table></figure><p>安装maven前必须安装java 环境：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">Maven 3.3     要求 JDK 1.7 或以上 <br>Maven 3.2     要求 JDK 1.6 或以上 <br>Maven 3.0/3.1 要求 JDK 1.5 或以上<br></code></pre></td></tr></table></figure><h5 id="1-1-1、二进制安装"><a href="#1-1-1、二进制安装" class="headerlink" title="1.1.1、二进制安装"></a>1.1.1、二进制安装</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@ubuntu1804 ~]<span class="hljs-comment">#apt update</span><br>[root@ubuntu1804 ~]<span class="hljs-comment">#apt install openjdk-8-jdk -y</span><br>[root@ubuntu1804 ~]<span class="hljs-comment">#java -version</span><br>openjdk version <span class="hljs-string">&quot;1.8.0_282&quot;</span><br>OpenJDK Runtime Environment (build 1.8.0_282-8u282-b08-0ubuntu1~18.04-b08)<br>OpenJDK 64-Bit Server VM (build 25.282-b08, mixed mode)<br><br>[root@ubuntu1804 ~]<span class="hljs-comment">#wget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache- maven-3.6.3-bin.tar.gz</span><br>[root@ubuntu1804 ~]<span class="hljs-comment">#tar xf apache-maven-3.6.3-bin.tar.gz -C /usr/local/</span><br>[root@ubuntu1804 ~]<span class="hljs-comment">#ln -s /usr/local/apache-maven-3.6.3/ /usr/local/maven</span><br><br>[root@ubuntu1804 ~]<span class="hljs-comment">#echo &#x27;PATH=/usr/local/maven/bin:$PATH&#x27; &gt; /etc/profile.d/maven.sh</span><br>[root@ubuntu1804 ~]<span class="hljs-comment">#echo &#x27;export MAVEN_HOME=/usr/local/maven&#x27; &gt;&gt; /etc/profile.d/maven.sh</span><br><br>[root@ubuntu1804 ~]<span class="hljs-comment">#. /etc/profile.d/maven.sh</span><br>[root@ubuntu1804 ~]<span class="hljs-comment">#mvn -v</span><br>Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)<br>Maven home: /usr/local/maven<br>Java version: 1.8.0_282, vendor: Private Build, runtime: /usr/lib/jvm/java-8- openjdk-amd64/jre<br>Default locale: en_HK, platform encoding: UTF-8<br>OS name: <span class="hljs-string">&quot;linux&quot;</span>, version: <span class="hljs-string">&quot;4.15.0-112-generic&quot;</span>, <span class="hljs-built_in">arch</span>: <span class="hljs-string">&quot;amd64&quot;</span>, family: <span class="hljs-string">&quot;unix&quot;</span><br><br><span class="hljs-comment">#镜像加速</span><br>[root@ubuntu1804 ~]<span class="hljs-comment">#vim /usr/local/maven/conf/settings.xml</span><br>  &lt;mirrors&gt;<br><span class="hljs-comment">#添加下面内容</span><br>    &lt;!--阿里云镜像--&gt;<br>    &lt;mirror&gt;<br>        &lt;<span class="hljs-built_in">id</span>&gt;nexus-aliyun&lt;/id&gt;<br>        &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;<br>        &lt;name&gt;Nexus aliyun&lt;/name&gt;<br>        &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;<br>    &lt;/mirror&gt;<br><span class="hljs-comment">#添加上面内容    </span><br>  &lt;/mirrors&gt;<br>:wq<br></code></pre></td></tr></table></figure><h4 id="1-2、Maven的打包命令说明"><a href="#1-2、Maven的打包命令说明" class="headerlink" title="1.2、Maven的打包命令说明"></a>1.2、Maven的打包命令说明</h4><p>Maven工程构建的各个环节</p><p>​       —clean: 以前编译得到的旧文件class字节码文件删除</p><p>​       —compile:将java源程序编译成class字节码文件</p><p>​       —test:自动测试,例如，自动调用junit程序</p><p>​       —report:报告测试程序执行的结果</p><p>​       —package:应用打包,动态Web工程打成war包,java工程打成jar包</p><p>​       —install: 是指将打包得到的文件复制到仓库中指定的位置</p><p>​       —deploy:将动态Web工程生成的war包复制到Servlet容器下，使其可以运行</p><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第十周作业</title>
    <link href="/2022/12/03/%E7%AC%AC%E5%8D%81%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/12/03/%E7%AC%AC%E5%8D%81%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="一、zabbix-架构原理，及常用组件及用途分析"><a href="#一、zabbix-架构原理，及常用组件及用途分析" class="headerlink" title="一、zabbix 架构原理，及常用组件及用途分析"></a>一、zabbix 架构原理，及常用组件及用途分析</h3><p><a href=""><img src="image-20221211141406905.png" alt="image-20221211141406905"></a></p><ul><li><p>SERVER</p><p>Zabbix server 是 Zabbix 软件的核心组件</p><p>Zabbix Agent 向其报告可用性、系统完整性信息和统计信息。</p><p>Zabbix server也是存储所有配置信息、统计信息和操作信息的核心存储库。</p><p>Zabbix server也是Zabbix监控系统的告警中心。在监控的系统中出现任何异常，将发出通知给管理员。</p><p>基本的 Zabbix Server 的功能分解成为三个不同的组件。他们是：Zabbix server、Web前端和数据库。</p><p>Zabbix 的所有配置信息都存储在 Server和Web前端进行交互的数据库中。例如，当你通过Web前端（或者API）新增一个监控项时，它会被添加到数据库的监控项表里。然后，Zabbix server 以每分钟一次的频率查询监控项表中的有效项，接着将它存储在 Zabbix server 中的缓存里。这就是为什么 Zabbix前端所做的任何更改需要花费两分钟左右才能显示在最新的数据段的原因。</p></li><li><p>数据库</p><p>所有配置信息以及 Zabbix 采集到的数据都被持久存储在数据库中</p><p>可以支持MySQL,PostgreSQL,Oracle 等多种数据库</p></li><li><p>WEB 界面</p><p>WEB 界面是 Zabbix server 的一部分，用于实现展示和配置的界面</p><p>通常（但不一定）和 Zabbix server 运行在同一台物理机器上</p><p>基于 Apache(Nginx)+PHP 实现,早期只支持LAMP架构,从Zabbix5.0开始支持LNMP</p></li><li><p>AGENT</p><p>Zabbix agents 部署在被监控目标上，用于主动监控本地资源和应用程序，并将收集的数据发送给Zabbix server。从Zabbix5.0开始支技Zabbix Agent2</p></li><li><p>PROXY</p><p>Zabbix Proxy 可以代替 Zabbix Server 采集性能和可用性数据</p><p>Zabbix Proxy 在 Zabbix 的部署是可选部分</p><p>Zabbix Proxy 的部署可以很好的分担单个Zabbix server的负载</p></li><li><p>Java 网关</p><p>Zabbix 要监控 tomcat 服务器和其它JAVA程序，需要使用 Java gateway 做为代理,才能从JAVA程序中获取数据</p></li><li><p>内部配置的数据流程</p><p>Zabbix 内部的数据流对Zabbix的使用也很重要。首先，为了创建一个采集数据的监控项，就必须先创建主机。其次，在任务的另外一端，必须要有监控项才能创建触发器（trigger），必须要有触发器来创建动作（action）。因此，如果您想要收到类似“X个server上CPU负载过高”这样的告警，您必须首先为 Server X 创建一个主机条目，其次创建一个用于监控其 CPU的监控项，最后创建一个触发器，用来触发 CPU负载过高这个动作，并将其发送到您的邮箱里。虽然这些步骤看起来很繁琐，但是使用模板的话，实际操作非常简单。也正是由于这种设计，使得 Zabbix 的配置变得更加灵活易用。</p></li></ul><h3 id="二、监控LNMP架构，并配置报警升级，0-5分钟不报警执行重启应用，5-30分钟邮箱通知运维，30-60分钟邮箱通过总监"><a href="#二、监控LNMP架构，并配置报警升级，0-5分钟不报警执行重启应用，5-30分钟邮箱通知运维，30-60分钟邮箱通过总监" class="headerlink" title="二、监控LNMP架构，并配置报警升级，0-5分钟不报警执行重启应用，5-30分钟邮箱通知运维，30-60分钟邮箱通过总监"></a>二、监控LNMP架构，并配置报警升级，0-5分钟不报警执行重启应用，5-30分钟邮箱通知运维，30-60分钟邮箱通过总监</h3><h4 id="2-1、zabbix环境"><a href="#2-1、zabbix环境" class="headerlink" title="2.1、zabbix环境"></a>2.1、zabbix环境</h4><p>rocky8+zabbix5.0</p><p><a href=""><img src="image-20221211143155382.png" alt="image-20221211143155382"></a></p><h4 id="2-2、搭建监控LNMP架构"><a href="#2-2、搭建监控LNMP架构" class="headerlink" title="2.2、搭建监控LNMP架构"></a>2.2、搭建监控LNMP架构</h4><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></div></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#安装server机器</span><br><span class="hljs-comment">#环境：rocky8+mysql+nginx+zabbix安装在一台机器上（生产环境中，mysql单独安装在一台机器）</span><br><br><span class="hljs-comment">#注意：因采用网址登录，所以需提前进行DNS域名解析</span><br>[root@zabbix_server ~]<span class="hljs-comment">#vim install_zabbix5.0_for_nginx_mysql.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br>rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/8/x86_64/zabbix-release-5.0-1.el8.noarch.rpm<br>sed -i <span class="hljs-string">&#x27;s#http://repo.zabbix.com#https://mirrors.tuna.tsinghua.edu.cn/zabbix#&#x27;</span> /etc/yum.repos.d/zabbix.repo<br>dnf clean all<br>dnf -y install zabbix-server-mysql zabbix-web-mysql zabbix-nginx-conf zabbix-agent2<br>yum -y install mysql-server<br>systemctl <span class="hljs-built_in">enable</span> --now mysqld<br><span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">EOF | mysql</span><br><span class="hljs-string">create database zabbix character set utf8 collate utf8_bin;</span><br><span class="hljs-string">create user zabbix@localhost identified by &#x27;123456&#x27;;</span><br><span class="hljs-string">grant all privileges on zabbix.* to zabbix@localhost;</span><br><span class="hljs-string">EOF</span><br>zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p123456  zabbix<br>sed -i.bak <span class="hljs-string">&#x27;/# DBPassword/a DBPassword=123456&#x27;</span> /etc/zabbix/zabbix_server.conf<br>systemctl <span class="hljs-built_in">enable</span> --now nginx<br>sed -i.bak <span class="hljs-string">&#x27;/^server/a\        listen 80;\n        server_name     zabbix.magedu.org; &#x27;</span> /etc/nginx/conf.d/zabbix.conf<br>sed -i.bak <span class="hljs-string">&#x27;/date.timezone/c php_value[date.timezone] = Asia/Shanghai&#x27;</span> /etc/php-fpm.d/zabbix.conf<br>systemctl restart zabbix-server zabbix-agent2 nginx php-fpm<br>systemctl <span class="hljs-built_in">enable</span> zabbix-server zabbix-agent2 nginx php-fpm<br>:wq<br><span class="hljs-comment">#以上就创建好了简单的安装脚本</span><br>[root@zabbix_server ~]<span class="hljs-comment">#bash install_zabbix5.0_for_nginx_mysql.sh</span><br><br><span class="hljs-comment">#此时网站是英文环境，需提前安装中文包，才能设置为中文环境</span><br>[root@zabbix_server ~]<span class="hljs-comment">#yum -y install langpacks-zh_CN</span><br><span class="hljs-comment">#但图形里面会有一些乱码</span><br><br><span class="hljs-comment">#将Windows里的字体文件放入到zabbix-server主机里会解决此问题，Windows字体路径：控制面板\外观和个性化\字体</span><br><br><span class="hljs-comment">#将中文字体上传到 Zabbix Server 的目录 /usr/share/zabbix/assets/fonts 下</span><br>[root@zabbix_server ~]<span class="hljs-comment">#cd /usr/share/zabbix/assets/fonts</span><br>[root@zabbix_server fonts]<span class="hljs-comment">#ll</span><br>total 0<br>lrwxrwxrwx 1 root root 33 Dec  9 09:17 graphfont.ttf -&gt; /etc/alternatives/zabbix-web-font<br>[root@zabbix_server fonts]<span class="hljs-comment">#mv graphfont.ttf graphfont.ttf.bak</span><br>[root@zabbix_server fonts]<span class="hljs-comment">#ls</span><br>graphfont.ttf.bak<br>[root@zabbix_server fonts]<span class="hljs-comment">#rz -E</span><br>rz waiting to receive.<br>[root@zabbix_server fonts]<span class="hljs-comment">#ls</span><br>graphfont.ttf.bak  simsun.ttc<br>[root@zabbix_server fonts]<span class="hljs-comment">#cp simsun.ttc graphfont.ttf   #将上传的字体设置为linux的字体</span><br>[root@zabbix_server fonts]<span class="hljs-comment">#ls</span><br>graphfont.ttf  graphfont.ttf.bak  simsun.ttc<br><br>***********************************************************************************<br><br><span class="hljs-comment">#安装agent2</span><br><span class="hljs-comment">#Rocky8.6系统,简单脚本如下</span><br>[root@zabbix_agent2 ~]<span class="hljs-comment">#vim install_zabbix5.0_agent2_for_rocky8</span><br>rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/8/x86_64/zabbix-release-5.0-1.el8.noarch.rpm<br>sed -i <span class="hljs-string">&#x27;s#http://repo.zabbix.com#https://mirrors.tuna.tsinghua.edu.cn/zabbix#&#x27;</span> /etc/yum.repos.d/zabbix.repo<br>dnf clean all<br>dnf -y install zabbix-agent2<br>sed -i.bak <span class="hljs-string">&#x27;/^Server=/c Server=10.0.0.190&#x27;</span> /etc/zabbix/zabbix_agent2.conf  <span class="hljs-comment">#zabbix_server安装在10.0.0.190(ip地址也可以写成网址，相对应的需要在本机上解析此网址)</span><br> <span class="hljs-comment">#其中两种方法</span><br> <span class="hljs-comment">#①在/etc/hosts里面添加 10.0.0.190  网址</span><br> <span class="hljs-comment">#②在/etc/sysconfig/network-scripts/ifcfg-eth0里面将DNS指向10.0.0.128（此ip是自己设置的DNS解析服务器，里面有10.0.0.190所对应的网址）</span><br>systemctl start zabbix-agent2<br>systemctl <span class="hljs-built_in">enable</span> zabbix-agent2<br>:wq<br>[root@zabbix_agent2 ~]<span class="hljs-comment">#bash install_zabbix5.0_agent2_for_rocky8</span><br><br><span class="hljs-comment">#下一步需要在zabbix_server的web端进行设置，允许监视zabbix_agent2</span><br></code></pre></td></tr></table></figure><h4 id="2-3、配置报警升级"><a href="#2-3、配置报警升级" class="headerlink" title="2.3、配置报警升级"></a>2.3、配置报警升级</h4><h5 id="2-3-1、实现故障自愈功能（检测到Apache关闭时，自动重启）"><a href="#2-3-1、实现故障自愈功能（检测到Apache关闭时，自动重启）" class="headerlink" title="2.3.1、实现故障自愈功能（检测到Apache关闭时，自动重启）"></a>2.3.1、实现故障自愈功能（检测到Apache关闭时，自动重启）</h5><p>配置远程命令的操作类似于发送消息，区别在于一个执行命令，一个发送消息</p><p>远程命令可以直接在ZabbixServer, ZabbixProxy和ZabbixAgent上执行。</p><p>但在Zabbix agent和Zabbix proxy上，远程命令默认是不开启的，它们可以通过以下方式启用：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">在agent配置中添加AllowKey=system.run[*]、UnsafeUserParameters=1参数<br><span class="hljs-comment">#zabbix5.0版本以上,AllowKey=system.run[*]代替EnableRemoteCommands,agent2默认没有此命令手工加入</span><br><span class="hljs-comment">#EnableRemoteCommands=1 #开启远程执行命令,此指令在zabbix5.0版本以上淘汰</span><br>在proxy配置中，将enableremotecomcommands参数设置为1；<br></code></pre></td></tr></table></figure><h6 id="2-3-1-1、zabbix-agent开启远程命令"><a href="#2-3-1-1、zabbix-agent开启远程命令" class="headerlink" title="2.3.1.1、zabbix agent开启远程命令"></a>2.3.1.1、zabbix agent开启远程命令</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@zabbix_agent2 ~]<span class="hljs-comment">#vim /etc/zabbix/zabbix_agent2.conf</span><br>UnsafeUserParameters=1    <span class="hljs-comment">#取消此行注释，并将0改为1.允许远程执行命令的时候使用不安全的参数</span><br>AllowKey=system.run[*]    <span class="hljs-comment">#添加此行，#开启远程执行命令</span><br>:wq<br>[root@zabbix_agent2 ~]<span class="hljs-comment">#systemctl restart zabbix-agent2.service</span><br><br><span class="hljs-comment">#默认zabbix agent是使用zabbix用户启动的，有些特权命令zabbix用户是没有权限执行，会导致定义好的自治愈策略因为权限拒绝为执行失败,所以需要事先对zabbix用户进行授权.</span><br>[root@zabbix_agent2 ~]<span class="hljs-comment">#ll /etc/sudoers</span><br>-r--r-----. 1 root root 4328 Apr 20  2022 /etc/sudoers<br>[root@zabbix_agent2 ~]<span class="hljs-comment">#chmod u+w /etc/sudoers</span><br>[root@zabbix_agent2 ~]<span class="hljs-comment">#ll /etc/sudoers</span><br>-rw-r-----. 1 root root 4328 Apr 20  2022 /etc/sudoers<br>[root@zabbix_agent2 ~]<span class="hljs-comment">#vim /etc/sudoers</span><br><span class="hljs-comment">## Allow root to run any commands anywhere </span><br>root    ALL=(ALL)       ALL<br>zabbix ALL=(ALL)   NOPASSWD: ALL           <span class="hljs-comment">#添加此行</span><br>:wq<br>[root@zabbix_agent2 ~]<span class="hljs-comment">#chmod u-w /etc/sudoers</span><br>[root@zabbix_agent2 ~]<span class="hljs-comment">#ll /etc/sudoers</span><br>-r--r----- 1 root root 4359 Dec 11 15:29 /etc/sudoers<br>[root@zabbix_agent2 ~]<span class="hljs-comment">#visudo -c                #检查语法是否错误</span><br>/etc/sudoers: parsed OK<br></code></pre></td></tr></table></figure><h6 id="2-3-1-2、创建相关动作"><a href="#2-3-1-2、创建相关动作" class="headerlink" title="2.3.1.2、创建相关动作"></a>2.3.1.2、创建相关动作</h6><p>①创建触发器</p><p><a href=""><img src="image-20221211160352740.png" alt="image-20221211160352740"></a></p><p>②创建动作</p><p><a href=""><img src="image-20221211155520092.png" alt="image-20221211155520092"></a></p><p>③创建远程操作细节</p><p><a href=""><img src="image-20221211155824026.png" alt="image-20221211155824026"></a></p><p>④停止apache看是否重新启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@zabbix_agent2 ~]<span class="hljs-comment">#systemctl stop httpd</span><br></code></pre></td></tr></table></figure><p>在监测页面可以看到动作执行</p><p><a href=""><img src="image-20221211160930949.png" alt="image-20221211160930949"></a></p><p>在agent服务器端也可以看到80端口已启动</p><p><a href=""><img src="image-20221211161027470.png" alt="image-20221211161027470"></a></p><h5 id="2-3-2、实现邮件报警通知"><a href="#2-3-2、实现邮件报警通知" class="headerlink" title="2.3.2、实现邮件报警通知"></a>2.3.2、实现邮件报警通知</h5><h6 id="2-3-2-1、创建报警媒介类型实现发信人功能"><a href="#2-3-2-1、创建报警媒介类型实现发信人功能" class="headerlink" title="2.3.2.1、创建报警媒介类型实现发信人功能"></a>2.3.2.1、创建报警媒介类型实现发信人功能</h6><p>管理–&gt;报警媒介类型–&gt;创建报警媒介类型</p><p><a href=""><img src="image-20221211161904592.png" alt="image-20221211161904592"></a></p><p>添加消息模板用于发送信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#可以修改两个消息模板</span><br><span class="hljs-comment"># 问题</span><br>主题: 告警: &#123;EVENT.NAME&#125;<br>告警主机：&#123;HOST.NAME1&#125;<br>告警服务: &#123;ITEM.NAME1&#125;<br>告警Key1: &#123;ITEM.KEY1&#125;：&#123;ITEM.VALUE1&#125;<br>告警Key2: &#123;ITEM.KEY2&#125;：&#123;ITEM.VALUE2&#125;<br>严重级别: &#123;TRIGGER.SEVERITY&#125;<br><span class="hljs-comment"># 恢复 Problem Recovery</span><br>主题: 恢复: &#123;EVENT.DURATION&#125;: &#123;EVENT.NAME&#125;<br>恢复主机：&#123;HOST.NAME1&#125;<br>恢复服务： &#123;ITEM.NAME1&#125;<br>恢复Key1：&#123;ITEM.KEY1&#125;：&#123;ITEM.VALUE1&#125;<br>恢复Key2: &#123;ITEM.KEY2&#125;：&#123;ITEM.VALUE2&#125;<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221211162254882.png" alt="image-20221211162254882"></a></p><h6 id="2-3-2-2、给指定用户添加报警媒介实现收件人功能"><a href="#2-3-2-2、给指定用户添加报警媒介实现收件人功能" class="headerlink" title="2.3.2.2、给指定用户添加报警媒介实现收件人功能"></a>2.3.2.2、给指定用户添加报警媒介实现收件人功能</h6><p><a href=""><img src="image-20221211163011697.png" alt="image-20221211163011697"></a></p><h6 id="2-3-2-3、在动作里面添加邮件报警"><a href="#2-3-2-3、在动作里面添加邮件报警" class="headerlink" title="2.3.2.3、在动作里面添加邮件报警"></a>2.3.2.3、在动作里面添加邮件报警</h6><p><a href=""><img src="image-20221211163652192.png" alt="image-20221211163652192"></a></p><h3 id="三、zabbix-api批量添加多个主机，要求一些不走代理，一些支持走代理"><a href="#三、zabbix-api批量添加多个主机，要求一些不走代理，一些支持走代理" class="headerlink" title="三、zabbix api批量添加多个主机，要求一些不走代理，一些支持走代理"></a>三、zabbix api批量添加多个主机，要求一些不走代理，一些支持走代理</h3><p>API（Application Programming Interface，应用程序编程接口）是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组功能的能力，而又无需直接使用源代码，或理解内部工作机制的细节。</p><p>Zabbix API允许你以编程方式检索和修改Zabbix的配置，并提供对历史数据的访问。它广泛用于:</p><ul><li><p>创建新的应用程序以使用Zabbix</p></li><li><p>将Zabbix与第三方软件集成</p></li><li><p>自动执行常规任务</p></li></ul><p>Zabbix API是基于Web的API，作为Web前端的一部分提供。它使用JSON-RPC 2.0协议，这意味着两件事: </p><ul><li><p>该API包含一组独立的方法</p></li><li><p>客户端和API之间的请求和响应使用JSON格式进行编码</p></li></ul><p>API 采用 JSON-RPC 实现。这意味着调用任何函数，都需要发送 POST 请求，输入输出数据都是以JSON 格式。</p><p><strong>Zabbix API由许多名义上分组的独立API方法组成。每个方法执行一个特定任务</strong>。</p><p>例如，方法 host.create 隶属于 host 这个API分组 ，用于创建新主机。API分组有时被称为“类”。</p><p>大多数API至少包含四种方法: get， create， update 和 delete ，分别是检索，创建，更新和删除数据，但是某些API提供一套完全不同的一组方法。</p><p><strong>Zabbix常用API</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">user.login                                    <span class="hljs-comment">#用户登录</span><br>host.get(create|delete|update)                <span class="hljs-comment">#主机操作</span><br>hostgroup.get(create|delete|update)           <span class="hljs-comment">#主机组操作</span><br>item.get(create|delete|update)                <span class="hljs-comment">#监控项目操作</span><br>history.get                                   <span class="hljs-comment">#历史数据查询</span><br>event.get                                     <span class="hljs-comment">#事件查询</span><br>trigger.get                                   <span class="hljs-comment">#触发器查询</span><br></code></pre></td></tr></table></figure><h4 id="3-1、获取Token"><a href="#3-1、获取Token" class="headerlink" title="3.1、获取Token"></a>3.1、获取Token</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#获取token的脚本，其中的用户密码是登陆zabbix-web页面的账号密码（原始账号：Admin密码：zabbix），此脚本可在任意服务器使用，但需注意域名解析</span><br>[root@zabbix_agent2 ~]<span class="hljs-comment">#cat zabbix-api-token.sh </span><br><span class="hljs-comment">#!/bin/bash</span><br>ZABBIX_SERVER=zabbix.magedu.org<br>curl -s -X POST -H <span class="hljs-string">&#x27;Content-Type:application/json&#x27;</span> -d <span class="hljs-string">&#x27;</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">    &quot;jsonrpc&quot;: &quot;2.0&quot;,</span><br><span class="hljs-string">    &quot;method&quot;: &quot;user.login&quot;,</span><br><span class="hljs-string">    &quot;params&quot;: &#123;</span><br><span class="hljs-string">        &quot;user&quot;: &quot;zhangtianxiang&quot;,</span><br><span class="hljs-string">        &quot;password&quot;: &quot;123456&quot;</span><br><span class="hljs-string">    &#125;,</span><br><span class="hljs-string">    &quot;id&quot;: 1</span><br><span class="hljs-string">&#125;&#x27;</span> http://<span class="hljs-variable">$ZABBIX_SERVER</span>/api_jsonrpc.php<br>[root@zabbix_agent2 ~]<span class="hljs-comment">#vim /etc/hosts</span><br>10.0.0.190  zabbix.magedu.org          <span class="hljs-comment">#添加此行</span><br>:wq<br>[root@zabbix_agent2 ~]<span class="hljs-comment">#bash zabbix-api-token.sh </span><br>&#123;<span class="hljs-string">&quot;jsonrpc&quot;</span>:<span class="hljs-string">&quot;2.0&quot;</span>,<span class="hljs-string">&quot;result&quot;</span>:<span class="hljs-string">&quot;5e5f4cd57c79a24319cffecae0d7261c&quot;</span>,<span class="hljs-string">&quot;id&quot;</span>:1&#125;<br><span class="hljs-comment">#其中5e5f4cd57c79a24319cffecae0d7261c即为获取的token</span><br></code></pre></td></tr></table></figure><p><strong>注意：</strong></p><p>①在通常的测试场景中，直接输出JSON结果的结果很乱，没有换行，没有任何格式，看起来很复杂，如果想要格式化输出，需要花费很多的时间对结果进行处理，使用python的json.tool可以直接将结果以json格式输出，看起来美观易读</p><p>②还可以利jq工具实现类似的效果</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#使用python的json.tool</span><br>[root@zabbix_agent2 ~]<span class="hljs-comment">#yum -y install python3</span><br>[root@zabbix_agent2 ~]<span class="hljs-comment">#bash zabbix-api-token.sh | python3 -m json.tool</span><br>&#123;<br>    <span class="hljs-string">&quot;jsonrpc&quot;</span>: <span class="hljs-string">&quot;2.0&quot;</span>,<br>    <span class="hljs-string">&quot;result&quot;</span>: <span class="hljs-string">&quot;45909ac689943e0761e5e3deaea55a51&quot;</span>,<br>    <span class="hljs-string">&quot;id&quot;</span>: 1<br>&#125;<br><br><span class="hljs-comment">#利jq工具</span><br>[root@zabbix_agent2 ~]<span class="hljs-comment">#bash zabbix-api-token.sh | jq</span><br>&#123;<br>  <span class="hljs-string">&quot;jsonrpc&quot;</span>: <span class="hljs-string">&quot;2.0&quot;</span>,<br>  <span class="hljs-string">&quot;result&quot;</span>: <span class="hljs-string">&quot;05ab62b170e52a584ea4b9c6656782a0&quot;</span>,<br>  <span class="hljs-string">&quot;id&quot;</span>: 1<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-2、通过API批量添加主机"><a href="#3-2、通过API批量添加主机" class="headerlink" title="3.2、通过API批量添加主机"></a>3.2、通过API批量添加主机</h4><p><strong>通过API添加主机命令格式</strong>：API添加主机为预先知道要添加的主机IP、预先安装并配置好zabbix agent、预先知道要关联的模板ID/组ID等信息，然后同API提交请求添加</p><p>例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs sh">curl -s -X POST -H <span class="hljs-string">&#x27;Content-Type:application/json&#x27;</span> -d <span class="hljs-string">&#x27;</span><br><span class="hljs-string"> &#123;</span><br><span class="hljs-string">     &quot;jsonrpc&quot;: &quot;2.0&quot;,</span><br><span class="hljs-string">     &quot;method&quot;: &quot;host.create&quot;, #定义方法，N多种</span><br><span class="hljs-string">     &quot;params&quot;: &#123;</span><br><span class="hljs-string">         &quot;host&quot;: &quot;API Add Host Test&quot;, #自定义添加后的agent的名称</span><br><span class="hljs-string">         &quot;proxy_hostid&quot;: &quot;10273&quot;,#proxy的ID</span><br><span class="hljs-string">         &quot;interfaces&quot;: [</span><br><span class="hljs-string">             &#123;</span><br><span class="hljs-string">                 &quot;type&quot;: 1, #类型为1表示agent，2是SNMP，3是IMPI,4是JMX</span><br><span class="hljs-string">                 &quot;main&quot;: 1, #more接口</span><br><span class="hljs-string">                 &quot;useip&quot;: 1, #0是使用DNS，1是使用IP地址</span><br><span class="hljs-string">                 &quot;ip&quot;: &quot;192.168.0.24&quot;, #添加的zabbix agent的IP地址</span><br><span class="hljs-string">                 &quot;dns&quot;: &quot;&quot;,</span><br><span class="hljs-string">                 &quot;port&quot;: &quot;10050&quot; #agent端口</span><br><span class="hljs-string">             &#125;</span><br><span class="hljs-string">         ],</span><br><span class="hljs-string">         &quot;groups&quot;: [</span><br><span class="hljs-string">             &#123;</span><br><span class="hljs-string">                 &quot;groupid&quot;: &quot;2&quot; #添加到的组的ID</span><br><span class="hljs-string">             &#125;</span><br><span class="hljs-string">         ],</span><br><span class="hljs-string">         &quot;templates&quot;: [</span><br><span class="hljs-string">             &#123;</span><br><span class="hljs-string">                 &quot;templateid&quot;: &quot;10001&quot; #关联的模板的ID</span><br><span class="hljs-string">             &#125;</span><br><span class="hljs-string">         ]</span><br><span class="hljs-string">     &#125;,</span><br><span class="hljs-string">     &quot;auth&quot;: &quot;977781251d1222ebead6f05da1a9ec4d&quot;, </span><br><span class="hljs-string">     &quot;id&quot;: 1</span><br><span class="hljs-string"> &#125;&#x27;</span> http://192.168.7.101/zabbix/api_jsonrpc.php<br></code></pre></td></tr></table></figure><h5 id="3-2-1、获取组的ID"><a href="#3-2-1、获取组的ID" class="headerlink" title="3.2.1、获取组的ID"></a>3.2.1、获取组的ID</h5><p>直接在web界面上点击相应的组就会出现对应的ID</p><p><a href=""><img src="image-20221213105402925.png" alt="image-20221213105402925"></a></p><h5 id="3-2-2、获取关联模板的ID"><a href="#3-2-2、获取关联模板的ID" class="headerlink" title="3.2.2、获取关联模板的ID"></a>3.2.2、获取关联模板的ID</h5><p>直接在web界面上点击相应的模板就会出现对应的ID</p><p><a href=""><img src="image-20221213105254983.png" alt="image-20221213105254983"></a></p><h5 id="3-2-3、获取代理proxy的ID"><a href="#3-2-3、获取代理proxy的ID" class="headerlink" title="3.2.3、获取代理proxy的ID"></a>3.2.3、获取代理proxy的ID</h5><p>直接在web界面上点击相应的代理就会出现对应的ID</p><p><a href=""><img src="image-20221213105208702.png" alt="image-20221213105208702"></a></p><h5 id="3-2-4、使用脚本批量添加主机"><a href="#3-2-4、使用脚本批量添加主机" class="headerlink" title="3.2.4、使用脚本批量添加主机"></a>3.2.4、使用脚本批量添加主机</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@zabbix_agent2 ~]<span class="hljs-comment">#chmod +x zabbix-api-token.sh</span><br><span class="hljs-comment">#因为下方zabbix_api_add.sh调用zabbix-api-token.sh脚本，所以zabbix-api-token.sh需加执行权限</span><br>[root@zabbix_agent2 ~]<span class="hljs-comment">#cat zabbix_api_add.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br>ZABBIX_SERVER=zabbix.magedu.org<br>TOKEN=$(./zabbix-api-token.sh| awk -F<span class="hljs-string">&#x27;&quot;&#x27;</span> <span class="hljs-string">&#x27;&#123;print $8&#125;&#x27;</span>)<br>IPLIST=(10.0.0.184 10.0.0.219 10.0.0.130)<br><br><span class="hljs-keyword">for</span> ((i=0; i&lt;<span class="hljs-variable">$&#123;#IPLIST[@]&#125;</span>; i++ ));<span class="hljs-keyword">do</span><br>add_host=<span class="hljs-string">&#x27;</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">   &quot;jsonrpc&quot;: &quot;2.0&quot;,</span><br><span class="hljs-string">   &quot;method&quot;: &quot;host.create&quot;,</span><br><span class="hljs-string">   &quot;params&quot;: &#123;</span><br><span class="hljs-string">      &quot;host&quot;: &quot;&#x27;</span><span class="hljs-variable">$&#123;IPLIST[$i]&#125;</span><span class="hljs-string">&#x27;&quot;,</span><br><span class="hljs-string">      &quot;name&quot;: &quot;&#x27;</span>web-api-<span class="hljs-variable">$&#123;IPLIST[$i]&#125;</span><span class="hljs-string">&#x27;&quot;,</span><br><span class="hljs-string">      &quot;interfaces&quot;: [</span><br><span class="hljs-string">          &#123;</span><br><span class="hljs-string">          &quot;type&quot;: 1,</span><br><span class="hljs-string">          &quot;main&quot;: 1,</span><br><span class="hljs-string">          &quot;useip&quot;: 1,</span><br><span class="hljs-string">          &quot;ip&quot;: &quot;&#x27;</span><span class="hljs-variable">$&#123;IPLIST[$i]&#125;</span><span class="hljs-string">&#x27;&quot;,</span><br><span class="hljs-string">          &quot;dns&quot;: &quot;&quot;,</span><br><span class="hljs-string">          &quot;port&quot;: &quot;10050&quot;</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">       ],</span><br><span class="hljs-string">       &quot;groups&quot;: [</span><br><span class="hljs-string">          &#123;</span><br><span class="hljs-string">          &quot;groupid&quot;: &quot;18&quot;</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">       ],</span><br><span class="hljs-string">       &quot;templates&quot;: [</span><br><span class="hljs-string">          &#123;</span><br><span class="hljs-string">          &quot;templateid&quot;: &quot;10444&quot;</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">       ]</span><br><span class="hljs-string">   &#125;,</span><br><span class="hljs-string">&quot;id&quot;: 1,</span><br><span class="hljs-string">&quot;auth&quot;: &quot;&#x27;</span><span class="hljs-variable">$TOKEN</span><span class="hljs-string">&#x27;&quot;</span><br><span class="hljs-string">&#125;&#x27;</span><br>add_proxy_host=<span class="hljs-string">&#x27;</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">   &quot;jsonrpc&quot;: &quot;2.0&quot;,</span><br><span class="hljs-string">   &quot;method&quot;: &quot;host.create&quot;,</span><br><span class="hljs-string">   &quot;params&quot;:</span><br><span class="hljs-string">   &#123;</span><br><span class="hljs-string">      &quot;host&quot;: &quot;&#x27;</span><span class="hljs-variable">$&#123;IPLIST[$i]&#125;</span><span class="hljs-string">&#x27;&quot;,</span><br><span class="hljs-string">      &quot;name&quot;: &quot;&#x27;</span>web-proxy-api-<span class="hljs-variable">$&#123;IPLIST[$i]&#125;</span><span class="hljs-string">&#x27;&quot;,</span><br><span class="hljs-string">      &quot;proxy_hostid&quot;: &quot;10446&quot;,</span><br><span class="hljs-string">      &quot;interfaces&quot;:</span><br><span class="hljs-string">      [</span><br><span class="hljs-string">         &#123;</span><br><span class="hljs-string">         &quot;type&quot;: 1,</span><br><span class="hljs-string">         &quot;main&quot;: 1,</span><br><span class="hljs-string">         &quot;useip&quot;: 1,</span><br><span class="hljs-string">         &quot;ip&quot;: &quot;&#x27;</span><span class="hljs-variable">$&#123;IPLIST[$i]&#125;</span><span class="hljs-string">&#x27;&quot;,</span><br><span class="hljs-string">         &quot;dns&quot;: &quot;&quot;,</span><br><span class="hljs-string">         &quot;port&quot;: &quot;10050&quot;</span><br><span class="hljs-string">         &#125;</span><br><span class="hljs-string">      ],</span><br><span class="hljs-string">      &quot;groups&quot;:</span><br><span class="hljs-string">      [</span><br><span class="hljs-string">         &#123;</span><br><span class="hljs-string">         &quot;groupid&quot;: &quot;18&quot;</span><br><span class="hljs-string">         &#125;</span><br><span class="hljs-string">      ],</span><br><span class="hljs-string">      &quot;templates&quot;:</span><br><span class="hljs-string">      [</span><br><span class="hljs-string">         &#123;</span><br><span class="hljs-string">         &quot;templateid&quot;: &quot;10444&quot;</span><br><span class="hljs-string">         &#125;</span><br><span class="hljs-string">      ]</span><br><span class="hljs-string">   &#125;,</span><br><span class="hljs-string">&quot;id&quot;: 1,</span><br><span class="hljs-string">&quot;auth&quot;: &quot;&#x27;</span><span class="hljs-variable">$TOKEN</span><span class="hljs-string">&#x27;&quot;</span><br><span class="hljs-string">&#125;&#x27;</span><br><br>   <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$i</span> -lt 2 ];<span class="hljs-keyword">then</span><br>       curl -s -XPOST -H <span class="hljs-string">&quot;Content-Type: application/json-rpc&quot;</span> -d <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;add_host&#125;</span>&quot;</span> http://<span class="hljs-variable">$&#123;ZABBIX_SERVER&#125;</span>/api_jsonrpc.php<br>   <span class="hljs-keyword">else</span><br>       curl -s -XPOST -H <span class="hljs-string">&quot;Content-Type: application/json-rpc&quot;</span> -d <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;add_proxy_host&#125;</span>&quot;</span> http://<span class="hljs-variable">$&#123;ZABBIX_SERVER&#125;</span>/api_jsonrpc.php<br>   <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br>[root@zabbix_agent2 ~]<span class="hljs-comment">#bash zabbix_api_add.sh</span><br>&#123;<span class="hljs-string">&quot;jsonrpc&quot;</span>:<span class="hljs-string">&quot;2.0&quot;</span>,<span class="hljs-string">&quot;result&quot;</span>:&#123;<span class="hljs-string">&quot;hostids&quot;</span>:[<span class="hljs-string">&quot;10451&quot;</span>]&#125;,<span class="hljs-string">&quot;id&quot;</span>:1&#125;&#123;<span class="hljs-string">&quot;jsonrpc&quot;</span>:<span class="hljs-string">&quot;2.0&quot;</span>,<span class="hljs-string">&quot;result&quot;</span>:&#123;<span class="hljs-string">&quot;hostids&quot;</span>:[<span class="hljs-string">&quot;10452&quot;</span>]&#125;,<span class="hljs-string">&quot;id&quot;</span>:1&#125;&#123;<span class="hljs-string">&quot;jsonrpc&quot;</span>:<span class="hljs-string">&quot;2.0&quot;</span>,<span class="hljs-string">&quot;result&quot;</span>:&#123;<span class="hljs-string">&quot;hostids&quot;</span>:[<span class="hljs-string">&quot;10453&quot;</span>]&#125;,<span class="hljs-string">&quot;id&quot;</span>:1&#125;<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221213120542304.png" alt="image-20221213120542304"></a></p><h3 id="四、总结zabbix自定义监控项，基于自定义监控项监控nginx"><a href="#四、总结zabbix自定义监控项，基于自定义监控项监控nginx" class="headerlink" title="四、总结zabbix自定义监控项，基于自定义监控项监控nginx"></a>四、总结zabbix自定义监控项，基于自定义监控项监控nginx</h3><h4 id="4-1、自定义监控项"><a href="#4-1、自定义监控项" class="headerlink" title="4.1、自定义监控项"></a>4.1、自定义监控项</h4><p>系统内置的监控项：zabbix5.0参考文档</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http">https://www.zabbix.com/documentation/5.0/zh/manual/config/items/itemtypes/zabbix<br>_agent<br></code></pre></td></tr></table></figure><h5 id="4-1-1、自定义监控项配置"><a href="#4-1-1、自定义监控项配置" class="headerlink" title="4.1.1、自定义监控项配置"></a>4.1.1、自定义监控项配置</h5><p>监控项键值的格式</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://www.zabbix.com/documentation/5.0/zh/manual/config/items/item/key<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221213124541429.png" alt="image-20221213124541429"></a></p><p>客户端可以自定义监控项，在Zabbix Agent 配置文件添加内容,格式如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#cat /etc/zabbix/zabbix_agentd.conf</span><br><span class="hljs-comment">#cat /etc/zabbix/zabbix_agent2.conf</span><br>UserParameter=&lt;key&gt;,&lt;shell <span class="hljs-built_in">command</span>&gt;<br>Include=/etc/zabbix/zabbix_agentd.d/*.conf<br><br><span class="hljs-comment">#或者创建独立的自定义文件</span><br><span class="hljs-comment">#cat /etc/zabbix/zabbix_agentd.d/*.conf</span><br><span class="hljs-comment">#cat /etc/zabbix/zabbix_agent2.d/*.conf</span><br>UserParameter=&lt;key&gt;,&lt;shell <span class="hljs-built_in">command</span>&gt;<br></code></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ul><li>key 必须整个系统<strong>唯一</strong>。注意大小写是敏感的, Key名允许的字符如下</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">0-9a-zA-Z_-.<br></code></pre></td></tr></table></figure><p>key使用 [*] 用于定义该key接受括号内的参数。参数需在配置监控项时给出；参数禁止使用下列字符：\ ’ ” ` * ? [ ] { } ~ $ ! &amp; ; ( ) &lt;&gt;</p><ul><li>Command：命令用于生成key对应的值。可以在命令中使用位置引用$1 … $9来引用监控项Key中的相应参数。Zabbix解析监控项Key的[]中包含的参数，并相应地替换$1，…，$9。$0会替换为完整的原始命令（在对$0，…，$9执行替换之前的命令）运行。不管位置参数（$0,…,$9)是用双引号( “ )还是单引号( ’ )括起来，都会解析位置引用</li></ul><p><strong>测试监控项</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#在Zabbix Agent 上执行测试</span><br>zabbix_agent -t <span class="hljs-string">&quot;在客户端定义的key名&quot;</span><br><br><span class="hljs-comment">#在Zabbix Server上可以使用zabbix_get工具获取自定义监控项</span><br>zabbix_get -s 客户端IP -p 10050 -k <span class="hljs-string">&quot;在客户端定义的key名&quot;</span><br></code></pre></td></tr></table></figure><h4 id="4-2、监控Nginx服务"><a href="#4-2、监控Nginx服务" class="headerlink" title="4.2、监控Nginx服务"></a>4.2、监控Nginx服务</h4><h5 id="4-2-1、自定义监控nginx（状态页）"><a href="#4-2-1、自定义监控nginx（状态页）" class="headerlink" title="4.2.1、自定义监控nginx（状态页）"></a>4.2.1、自定义监控nginx（状态页）</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@zabbix_agent2_centos ~]<span class="hljs-comment">#yum -y install nginx</span><br>[root@zabbix_agent2_centos ~]<span class="hljs-comment">#vim /etc/nginx/nginx.conf</span><br>server &#123;<br>        erver_name  10.0.0.220;<br>        ..........                      <span class="hljs-comment">#添加以下内容</span><br>        location /nginx_status &#123;<br>             stub_status;<br>             allow 127.0.0.1;<br>             allow 10.0.0.190;<br>             allow 10.0.0.186;<br>             deny  all;<br>        &#125;<br>        ............<br>&#125;<br>:wq<br>[root@zabbix_agent2_centos ~]<span class="hljs-comment">#nginx -t</span><br>[root@zabbix_agent2_centos ~]<span class="hljs-comment">#systemctl restart nginx.service </span><br>[root@zabbix_agent2_centos ~]<span class="hljs-comment">#curl http://10.0.0.220/nginx_status</span><br>Active connections: 1 <br>server accepts handled requests<br> 1 1 1 <br>Reading: 0 Writing: 1 Waiting: 0<br></code></pre></td></tr></table></figure><h5 id="4-2-2、配置agent2"><a href="#4-2-2、配置agent2" class="headerlink" title="4.2.2、配置agent2"></a>4.2.2、配置agent2</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#在对应目录下创建zabbix监控nginx的监控配置和获取nginx状态页的脚本</span><br>[root@zabbix_agent2_centos ~]<span class="hljs-comment">#cd /etc/zabbix/zabbix_agent2.d/</span><br>[root@zabbix_agent2_centos zabbix_agent2.d]<span class="hljs-comment">#cat nginx_status.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><br>PORT=80<br>HOST=10.0.0.220<br><br><span class="hljs-keyword">case</span> <span class="hljs-variable">$1</span> <span class="hljs-keyword">in</span><br>  active)<br>/usr/bin/curl <span class="hljs-string">&quot;http://<span class="hljs-variable">$HOST</span>:&quot;</span><span class="hljs-variable">$PORT</span><span class="hljs-string">&quot;/nginx_status/&quot;</span> 2&gt;/dev/null| grep <span class="hljs-string">&#x27;Active&#x27;</span> | awk <span class="hljs-string">&#x27;&#123;print $NF&#125;&#x27;</span><br>;;<br>  reading)<br>/usr/bin/curl <span class="hljs-string">&quot;http://<span class="hljs-variable">$HOST</span>:&quot;</span><span class="hljs-variable">$PORT</span><span class="hljs-string">&quot;/nginx_status/&quot;</span> 2&gt;/dev/null| grep <span class="hljs-string">&#x27;Reading&#x27;</span> | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span><br>;;<br>  writing)<br>/usr/bin/curl <span class="hljs-string">&quot;http://<span class="hljs-variable">$HOST</span>:&quot;</span><span class="hljs-variable">$PORT</span><span class="hljs-string">&quot;/nginx_status/&quot;</span> 2&gt;/dev/null| grep <span class="hljs-string">&#x27;Writing&#x27;</span> | awk <span class="hljs-string">&#x27;&#123;print $4&#125;&#x27;</span><br>;;<br>  waiting)<br>/usr/bin/curl <span class="hljs-string">&quot;http://<span class="hljs-variable">$HOST</span>:&quot;</span><span class="hljs-variable">$PORT</span><span class="hljs-string">&quot;/nginx_status/&quot;</span> 2&gt;/dev/null| grep <span class="hljs-string">&#x27;Waiting&#x27;</span> | awk <span class="hljs-string">&#x27;&#123;print $6&#125;&#x27;</span><br>;;<br>  accepts)<br>/usr/bin/curl <span class="hljs-string">&quot;http://<span class="hljs-variable">$HOST</span>:&quot;</span><span class="hljs-variable">$PORT</span><span class="hljs-string">&quot;/nginx_status/&quot;</span> 2&gt;/dev/null| awk NR==3 | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span><br>;;<br>  handled)<br>/usr/bin/curl <span class="hljs-string">&quot;http://<span class="hljs-variable">$HOST</span>:&quot;</span><span class="hljs-variable">$PORT</span><span class="hljs-string">&quot;/nginx_status/&quot;</span> 2&gt;/dev/null| awk NR==3 | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span><br>;;<br>  requests)<br>/usr/bin/curl <span class="hljs-string">&quot;http://<span class="hljs-variable">$HOST</span>:&quot;</span><span class="hljs-variable">$PORT</span><span class="hljs-string">&quot;/nginx_status/&quot;</span> 2&gt;/dev/null| awk NR==3 | awk <span class="hljs-string">&#x27;&#123;print $3&#125;&#x27;</span><br>;;<br>  *)<br>    <span class="hljs-built_in">echo</span> $<span class="hljs-string">&quot;Usage: <span class="hljs-variable">$0</span> &#123; active | reading | writing | waiting | accepts | handled | requests&#125;&quot;</span><br><span class="hljs-keyword">esac</span><br>[root@zabbix_agent2_centos zabbix_agent2.d]<span class="hljs-comment">#chmod +x nginx_status.sh</span><br>[root@zabbix_agent2_centos zabbix_agent2.d]<span class="hljs-comment">#vim nginx_status.conf</span><br>UserParameter=nginx_status[*],/etc/zabbix/zabbix_agent2.d/nginx_status.sh <span class="hljs-variable">$1</span><br>:wq<br>[root@zabbix_agent2_centos zabbix_agent2.d]<span class="hljs-comment">#systemctl restart zabbix-agent2.service</span><br><br><span class="hljs-comment">#agent2测试</span><br>[root@zabbix_agent2_centos zabbix_agent2.d]<span class="hljs-comment">#zabbix_agent2 -t nginx_status[requests]</span><br>nginx_status[requests]                        [s|22]<br><br><span class="hljs-comment">#zabbix server测试</span><br>[root@zabbix_server ~]<span class="hljs-comment">#zabbix_get -s 10.0.0.220 -k nginx_status[requests]</span><br>23<br></code></pre></td></tr></table></figure><h5 id="4-2-3、自定义模板及监控项并添加监控的主机上关联模板"><a href="#4-2-3、自定义模板及监控项并添加监控的主机上关联模板" class="headerlink" title="4.2.3、自定义模板及监控项并添加监控的主机上关联模板"></a>4.2.3、自定义模板及监控项并添加监控的主机上关联模板</h5><p>创建模板</p><p><a href=""><img src="image-20221213180906577.png" alt="image-20221213180906577"></a></p><p>添加监控项</p><p><a href=""><img src="image-20221213181712612.png" alt="image-20221213181712612"></a></p><p>关联主机</p><p><a href=""><img src="image-20221213181809843.png" alt="image-20221213181809843"></a></p><p>查看是否更新数据</p><p><a href=""><img src="image-20221213182129242.png" alt="image-20221213182129242"></a></p><h3 id="五、基于zabbix实现邮件或微信告警"><a href="#五、基于zabbix实现邮件或微信告警" class="headerlink" title="五、基于zabbix实现邮件或微信告警"></a>五、基于zabbix实现邮件或微信告警</h3><h4 id="5-1、注册企业微信"><a href="#5-1、注册企业微信" class="headerlink" title="5.1、注册企业微信"></a>5.1、注册企业微信</h4><p>微信告警首先得注册一个企业微信，然后才能实现微信告警。</p><p>浏览器访问下面链接,注册企业微信</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://work.weixin.qq.com/<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221218093434434.png" alt="image-20221218093434434"></a></p><h4 id="5-2、创建部门和人员"><a href="#5-2、创建部门和人员" class="headerlink" title="5.2、创建部门和人员"></a>5.2、创建部门和人员</h4><h5 id="5-2-1、创建部门"><a href="#5-2-1、创建部门" class="headerlink" title="5.2.1、创建部门"></a>5.2.1、创建部门</h5><p><a href=""><img src="image-20221218093706256.png" alt="image-20221218093706256"></a></p><h5 id="5-2-2、加入人员"><a href="#5-2-2、加入人员" class="headerlink" title="5.2.2、加入人员"></a>5.2.2、加入人员</h5><p>方法1: 直接微信邀请,让相关人员自行扫码加入</p><p><a href=""><img src="image-20221218094259182.png" alt="image-20221218094259182"></a></p><p>方法2：手动添加人员</p><p><a href=""><img src="image-20221218094325434.png" alt="image-20221218094325434"></a></p><h4 id="5-3、将微信应用中添加相关的部门或人员"><a href="#5-3、将微信应用中添加相关的部门或人员" class="headerlink" title="5.3、将微信应用中添加相关的部门或人员"></a>5.3、将微信应用中添加相关的部门或人员</h4><p><a href=""><img src="image-20221218094842011.png" alt="image-20221218094842011"></a></p><p><a href=""><img src="image-20221218095111843.png" alt="image-20221218095111843"></a></p><p>注意记下以下信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">应用的 AgentId值1000002<br>应用的 Secret的值gc-CapCl6aSxmZm9knrTC_IqbwS70I5A8Q3BwywoXpY<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221218095518624.png" alt="image-20221218095518624"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">查看到企业ID的值为 ww488a1e5ba0db2852<br></code></pre></td></tr></table></figure><h4 id="5-4、授权可信ip"><a href="#5-4、授权可信ip" class="headerlink" title="5.4、授权可信ip"></a>5.4、授权可信ip</h4><p><strong>在应用中添加 企业可信IP</strong> (最近添加的功能,必须配置IP白名单才能发微信,否则会出错)</p><div class="code-wrapper"><pre><code class="hljs">106.117.126.69 </code></pre></div><p><a href=""><img src="image-20221218102330483.png" alt="image-20221218102330483"></a></p><p>添加可信ip前还需要添加真实域名（因暂未添加，所以后面只展示步骤，不再展示测试结果）</p><p><a href=""><img src="image-20221218102904870.png" alt="image-20221218102904870"></a></p><h4 id="5-5、测试发送微信消息"><a href="#5-5、测试发送微信消息" class="headerlink" title="5.5、测试发送微信消息"></a>5.5、测试发送微信消息</h4><p><a href=""><img src="image-20221218101302299.png" alt="image-20221218101302299"></a></p><h4 id="5-6、创建发送微信脚本"><a href="#5-6、创建发送微信脚本" class="headerlink" title="5.6、创建发送微信脚本"></a>5.6、创建发送微信脚本</h4><p>官方微信教程</p><p>官方微信API参考文档</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://developer.work.weixin.qq.com/document/path/90664<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221218103217343.png" alt="image-20221218103217343"></a></p><p>官方微信API参考文档</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://developer.work.weixin.qq.com/document/path/91039<br></code></pre></td></tr></table></figure><p>发送微信可以使用各种语言,下面使用shell脚本实现</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#查看zabbix server的配置文件</span><br>[root@zabbix_server ~]<span class="hljs-comment">#grep AlertScriptsPath /etc/zabbix/zabbix_server.conf</span><br><span class="hljs-comment">### Option: AlertScriptsPath</span><br><span class="hljs-comment"># AlertScriptsPath=$&#123;datadir&#125;/zabbix/alertscripts</span><br>AlertScriptsPath=/usr/lib/zabbix/alertscripts<br><br><span class="hljs-comment">#实现发信微信的脚本</span><br>[root@zabbix_server ~]<span class="hljs-comment">#cd /usr/lib/zabbix/alertscripts</span><br>[root@zabbix_server alertscripts]<span class="hljs-comment">#cat wechat.sh </span><br><span class="hljs-comment">#!/bin/bash</span><br><br>CorpID=<span class="hljs-string">&quot;ww488a1e5ba0db2852&quot;</span><br>Secret=<span class="hljs-string">&quot;gc-CapCl6aSxmZm9knrTC_IqbwS70I5A8Q3BwywoXpY&quot;</span><br>GURL=<span class="hljs-string">&quot;https://qyapi.weixin.qq.com/cgi-bin/gettoken?</span><br><span class="hljs-string">corpid=<span class="hljs-variable">$CorpID</span>&amp;corpsecret=<span class="hljs-variable">$Secret</span>&quot;</span><br>Token=$(/usr/bin/curl -s -G <span class="hljs-variable">$GURL</span> |awk -F\&quot;: <span class="hljs-string">&#x27;&#123;print $4&#125;&#x27;</span>|awk -F\&quot; <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br><br>PURL=<span class="hljs-string">&quot;https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=<span class="hljs-variable">$Token</span>&quot;</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">body</span></span>()&#123;<br><span class="hljs-built_in">local</span> int agentid=1000002<br><span class="hljs-built_in">local</span> UserID=<span class="hljs-variable">$1</span><br><span class="hljs-built_in">local</span> PartyID=2<br><span class="hljs-built_in">local</span> Msg=$(<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span> | <span class="hljs-built_in">cut</span> -d<span class="hljs-string">&quot; &quot;</span> -f3-)<br><span class="hljs-built_in">printf</span> <span class="hljs-string">&#x27;&#123;\n&#x27;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&#x27;\t&quot;touser&quot;: &quot;&#x27;</span><span class="hljs-string">&quot;<span class="hljs-variable">$UserID</span>&quot;</span>\&quot;<span class="hljs-string">&quot;,\n&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&#x27;\t&quot;toparty&quot;: &quot;&#x27;</span><span class="hljs-string">&quot;<span class="hljs-variable">$PartyID</span>&quot;</span>\&quot;<span class="hljs-string">&quot;,\n&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&#x27;\t&quot;msgtype&quot;: &quot;text&quot;,\n&#x27;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&#x27;\t&quot;agentid&quot;: &quot;&#x27;</span><span class="hljs-string">&quot;<span class="hljs-variable">$agentid</span>&quot;</span>\&quot;<span class="hljs-string">&quot;,\n&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&#x27;\t&quot;text&quot;: &#123;\n&#x27;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&#x27;\t\t&quot;content&quot;: &quot;&#x27;</span><span class="hljs-string">&quot;<span class="hljs-variable">$Msg</span>&quot;</span>\&quot;<span class="hljs-string">&quot;\n&quot;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&#x27;\t&#125;,\n&#x27;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&#x27;\t&quot;safe&quot;:&quot;0&quot;\n&#x27;</span><br><span class="hljs-built_in">printf</span> <span class="hljs-string">&#x27;&#125;\n&#x27;</span><br>&#125;<br><br>/usr/bin/curl --data-ascii <span class="hljs-string">&quot;<span class="hljs-subst">$(body $1 $2 $3)</span>&quot;</span> <span class="hljs-variable">$PURL</span><br><br>[root@zabbix_server alertscripts]<span class="hljs-comment">#chmod +x wechat.sh</span><br><br><span class="hljs-comment">#发送测试微信，其中wangxiaochun为企业微信的帐号，并且不区分大小写,在通讯录的用户成员详情中可以看到帐号</span><br>[root@zabbix_server alertscripts]<span class="hljs-comment">#./wechat.sh zhangtianxiang 微信告警标题 微信告警信息</span><br>&#123;<span class="hljs-string">&quot;errcode&quot;</span>:60020,<span class="hljs-string">&quot;errmsg&quot;</span>:<span class="hljs-string">&quot;not allow to access from your ip, hint: [1671332081303762937774104], from ip: 106.117.126.69, more info at https://open.work.weixin.qq.com/devtool/query?e=60020&quot;</span>&#125;<br><span class="hljs-comment">#表示106.117.126.69这个IP地址不允许访问，只有上面的可信ip添加后才能使用</span><br></code></pre></td></tr></table></figure><h4 id="5-7、创建微信报警媒介类型"><a href="#5-7、创建微信报警媒介类型" class="headerlink" title="5.7、创建微信报警媒介类型"></a>5.7、创建微信报警媒介类型</h4><p><a href=""><img src="image-20221218105754672.png" alt="image-20221218105754672"></a></p><p>报警媒介类型为脚本,脚本参数为以下三项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">&#123;ALERT.SENDTO&#125;--收件人媒介<br>&#123;ALERT.SUBJECT&#125;--通知主题,因为微信没有主题,此项无效,可以不填写<br>&#123;ALERT.MESSAGE&#125;--通知内容<br></code></pre></td></tr></table></figure><p>官方宏参考:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://www.zabbix.com/documentation/5.0/zh/manual/appendix/macros/supported_by_location<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221218110019612.png" alt="image-20221218110019612"></a></p><p><strong>注意:此处可以只填写{ALERT.SENDTO}和{ALERT.MESSAGE}即可</strong></p><p><a href=""><img src="image-20221218110305045.png" alt="image-20221218110305045"></a></p><p><a href=""><img src="image-20221218110418418.png" alt="image-20221218110418418"></a></p><p>修改消息模板</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#可以添加两个消息类型</span><br><span class="hljs-comment"># 问题</span><br>主题: 告警: &#123;EVENT.NAME&#125;<br>告警主机：&#123;HOST.NAME1&#125;<br>告警服务: &#123;ITEM.NAME1&#125;<br>告警Key1: &#123;ITEM.KEY1&#125;：&#123;ITEM.VALUE1&#125;<br>告警Key2: &#123;ITEM.KEY2&#125;：&#123;ITEM.VALUE2&#125;<br>严重级别: &#123;TRIGGER.SEVERITY&#125;<br><span class="hljs-comment"># 恢复 Problem Recovery</span><br>主题: 恢复: &#123;EVENT.DURATION&#125;: &#123;EVENT.NAME&#125;<br>恢复主机：&#123;HOST.NAME1&#125;<br>恢复服务： &#123;ITEM.NAME1&#125;<br>恢复Key1：&#123;ITEM.KEY1&#125;：&#123;ITEM.VALUE1&#125;<br>恢复Key2: &#123;ITEM.KEY2&#125;：&#123;ITEM.VALUE2&#125;<br></code></pre></td></tr></table></figure><h4 id="5-8、给Zabbix用户添加报警媒介"><a href="#5-8、给Zabbix用户添加报警媒介" class="headerlink" title="5.8、给Zabbix用户添加报警媒介"></a>5.8、给Zabbix用户添加报警媒介</h4><p><a href=""><img src="image-20221218110824993.png" alt="image-20221218110824993"></a></p><h4 id="5-9、创建动作"><a href="#5-9、创建动作" class="headerlink" title="5.9、创建动作"></a>5.9、创建动作</h4><h5 id="5-9-1、编辑已有动作"><a href="#5-9-1、编辑已有动作" class="headerlink" title="5.9.1、编辑已有动作"></a>5.9.1、编辑已有动作</h5><p>如果已经创建动作，可以修改已有动作，如下所示</p><p><a href=""><img src="image-20221218111152744.png" alt="image-20221218111152744"></a></p><h5 id="5-9-2、创建动作"><a href="#5-9-2、创建动作" class="headerlink" title="5.9.2、创建动作"></a>5.9.2、创建动作</h5><p>如果之前没有动作，新创建动作</p><p><a href=""><img src="image-20221218111301406.png" alt="image-20221218111301406"></a></p><h3 id="六、总结zabbix自动发现监控"><a href="#六、总结zabbix自动发现监控" class="headerlink" title="六、总结zabbix自动发现监控"></a>六、总结zabbix自动发现监控</h3><h4 id="6-1、自动发现"><a href="#6-1、自动发现" class="headerlink" title="6.1、自动发现"></a>6.1、自动发现</h4><h5 id="6-1-1、Zabbix网络发现介绍"><a href="#6-1-1、Zabbix网络发现介绍" class="headerlink" title="6.1.1、Zabbix网络发现介绍"></a>6.1.1、Zabbix网络发现介绍</h5><p>之前都是手动一台一台主机的添加到 Zabbix 中进行监控,很是繁琐,可以利用自动发现功能,自动添加被监控的主机</p><p>当众多的服务器都已经安装了agent或者snmp后，利用自动发现功能,Zabbix server 可以自动扫描预先配置好的ip段，自动添加主机，自动关联模板，自动加到主机组里等等。</p><p>网络发现功能更快速的部署zabbix、简化zabbix管理、并且在经常变动的环境里面也不需要花太多的精力，毕竟网络发现也能随时发现变化。</p><p>当然网络发现也不是万能的,虽然网络发现能干很多事情，但是它无法发现网络拓扑的变化。</p><p>由于自动发现效率比较低,严重消耗Zabbix Server资源和网络带宽,大规模环境中较少使用</p><p>自动发现虽然能自动完成发现并添加主机，但仍然存在一些问题</p><ul><li><p>发现时间长，效率较低</p></li><li><p>扫描过程中容易漏扫</p></li><li><p>当IP地址不固定难以实现</p></li><li><p>无法实现不同类型主机关联不同模板</p></li></ul><p>官方文档</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://www.zabbix.com/documentation/5.0/zh/manual/discovery/network_discovery<br></code></pre></td></tr></table></figure><h5 id="6-1-2、实现Zabbix网络发现"><a href="#6-1-2、实现Zabbix网络发现" class="headerlink" title="6.1.2、实现Zabbix网络发现"></a>6.1.2、实现Zabbix网络发现</h5><p>自动发现由两个步骤组成:</p><ul><li><p>发现discovery: Zabbix周期性地扫描在”网络发现规则”中定义的IP段，发现满足规则的主机</p></li><li><p>动作action: 对这些主机完成动作，包括添加主机、添加模板、发送通知等等。</p></li></ul><h6 id="6-1-2-1、创建自动发现指定需要监控的网段"><a href="#6-1-2-1、创建自动发现指定需要监控的网段" class="headerlink" title="6.1.2.1、创建自动发现指定需要监控的网段"></a>6.1.2.1、创建自动发现指定需要监控的网段</h6><p>配置– 自动发现– 创建发现规则</p><p><a href=""><img src="image-20221218112135483.png" alt="image-20221218112135483"></a></p><p>指定名称,IP范围和逢动发现检查等信息</p><p><a href=""><img src="image-20221218112450399.png" alt="image-20221218112450399"></a></p><p>可见名称为IP地址</p><p><a href=""><img src="image-20221218112558972.png" alt="image-20221218112558972"></a></p><h6 id="6-1-2-2、创建添加主机的自动发现动作"><a href="#6-1-2-2、创建添加主机的自动发现动作" class="headerlink" title="6.1.2.2、创建添加主机的自动发现动作"></a>6.1.2.2、创建添加主机的自动发现动作</h6><p>创建新的动作</p><p><a href=""><img src="image-20221218112813468.png" alt="image-20221218112813468"></a></p><p><a href=""><img src="image-20221218113431123.png" alt="image-20221218113431123"></a></p><p>操作增加三个操作: 添加主机,添加群组,添加模板</p><p><a href=""><img src="image-20221218113149142.png" alt="image-20221218113149142"></a></p><p>也可以添加发送消息给Admin等操作</p><p><a href=""><img src="image-20221218113552143.png" alt="image-20221218113552143"></a></p><h6 id="6-1-2-3、创建删除主机的自动发现动作"><a href="#6-1-2-3、创建删除主机的自动发现动作" class="headerlink" title="6.1.2.3、创建删除主机的自动发现动作"></a>6.1.2.3、创建删除主机的自动发现动作</h6><p><a href=""><img src="image-20221218113812972.png" alt="image-20221218113812972"></a></p><p><a href=""><img src="image-20221218113919777.png" alt="image-20221218113919777"></a></p><h4 id="6-2、自动注册"><a href="#6-2、自动注册" class="headerlink" title="6.2、自动注册"></a>6.2、自动注册</h4><h5 id="6-2-1、自动注册介绍"><a href="#6-2-1、自动注册介绍" class="headerlink" title="6.2.1、自动注册介绍"></a>6.2.1、自动注册介绍</h5><p>当客户端众多时,将每台主机手动添加到Zabbix,还手动添加关联模板,无疑是低效的.</p><p>但是利用网络发现实现,Zabbix Server 资源消耗又比较严重</p><p>利用Zabbix的自动注册功能,实现添加主机的自动化,可以大幅减少运维的工作量,减少Zabbix Server 的资源消耗</p><p>此方式和自动发现不同,是由Active agent主动发起请求zabbix server将这些agent加到主机里。</p><p>注意: Agent 必须使用主动模式才支持自动注册</p><p>自动注册由于比自动发现效率更好,Zabbix Server资源消耗更少,更适合大规模及云环境IP地址不固定的场景使用</p><p>官方帮助</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://www.zabbix.com/documentation/5.0/zh/manual/discovery/auto_registration<br></code></pre></td></tr></table></figure><p>在Zabbix agent 端的配置文件修改以下项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">Server=&lt;Zabbix Server IP&gt;<br>ServerActive=&lt;Zabbix Server IP&gt; #客户端主动模式是实现自动注册的前提条件<br>Hostname=&lt;agent IP&gt;<br>#HostnameItem=system.hostname    <br>HostMetadata==&lt;key&gt;           #非必须项,可以做为添加主机的验证标识和分类,或者实现加入主机的验证功能<br>HostMetadataItem=&lt;监控项Item&gt; #非必须项,监控项的值可以做为添加主机的验证标识和分类<br></code></pre></td></tr></table></figure><h5 id="6-2-2、修改Zabbix-agent的配置"><a href="#6-2-2、修改Zabbix-agent的配置" class="headerlink" title="6.2.2、修改Zabbix agent的配置"></a>6.2.2、修改Zabbix agent的配置</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky8 ~]<span class="hljs-comment">#vim /etc/zabbix/zabbix_agentd2.conf</span><br>Server=zabbix.magedu.org              <span class="hljs-comment">#或者写server的IP地址10.0.0.190</span><br>ServerActive=zabbix.magedu.org        <span class="hljs-comment">#或者写server的IP地址10.0.0.190</span><br>Hostname=web-10.0.0.18  <span class="hljs-comment">#指定主机名,如果不指定,则服务器将使用agent的系统主机名</span><br>HostMetadata=web<br>[root@Rocky8 ~]<span class="hljs-comment">#systemctl restart zabbix-agent2.service</span><br></code></pre></td></tr></table></figure><h5 id="6-2-3、在Zabbix-Server配置动作"><a href="#6-2-3、在Zabbix-Server配置动作" class="headerlink" title="6.2.3、在Zabbix Server配置动作"></a>6.2.3、在Zabbix Server配置动作</h5><p>在配置—动作—选择自动注册动作</p><p><a href=""><img src="image-20221218115136642.png" alt="image-20221218115136642"></a></p><p>指定动作中条件的主机名的值</p><p><a href=""><img src="image-20221218115333696.png" alt="image-20221218115333696"></a></p><p>或者使用元数据添加</p><p><a href=""><img src="image-20221218115717334.png" alt="image-20221218115717334"></a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#上图中的主机元数据值web和zabbix-agent2.conf里面的HostMetadata设置有关</span><br>HostMetadata=web<br><span class="hljs-comment">#HostMetadata设置是什么，到时候主机元数据值添对应的值</span><br></code></pre></td></tr></table></figure><p>指定操作</p><p><a href=""><img src="image-20221218115528257.png" alt="image-20221218115528257"></a></p><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>tomcat练习</title>
    <link href="/2022/12/02/tomcat%E7%BB%83%E4%B9%A0/"/>
    <url>/2022/12/02/tomcat%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="一、JDK的安装"><a href="#一、JDK的安装" class="headerlink" title="一、JDK的安装"></a>一、JDK的安装</h3><p>JDK是 Java 语言的软件开发工具包,JDK协议基于 JRL(JavaResearch License)协议</p><p><strong>java程序的源码是.java，需要使用JDK里面的javac将.java转换为字节码（.class），在通过虚拟机将字节码转换为Linux和Windows里的机器码</strong></p><p>JDK分为免费版（openjdk：测试环境使用）和收费版（oraclejdk 8版本以后收费：生产环境使用）</p><p>openjdk的安装，只需要yum或者apt即可安装</p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#yum -y install java-1.8.0-openjdk-devel</span><br><br>[root@ubuntu2204 ~]<span class="hljs-comment">#apt -y install openjdk-11-jdk</span><br></code></pre></td></tr></table></figure><h4 id="1-1、安装oracle官方JDK"><a href="#1-1、安装oracle官方JDK" class="headerlink" title="1.1、安装oracle官方JDK"></a>1.1、安装oracle官方JDK</h4><p>官方下载链接: </p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">#注意需要注册登录后,才能下载JDK https://www.oracle.com/java/technologies/downloads/#java8 https://www.oracle.com/java/technologies/downloads/#java11 https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html<br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#ls</span><br>anaconda-ks.cfg  jdk-8u321-linux-x64.tar.gz<br>[root@Rocky ~]<span class="hljs-comment">#tar xf jdk-8u321-linux-x64.tar.gz -C /usr/local</span><br>[root@Rocky ~]<span class="hljs-comment">#cd /usr/local</span><br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#ls</span><br>bin  etc  games  include  jdk1.8.0_321  lib  lib64  libexec  sbin  share  src<br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#ln -s jdk1.8.0_321/ jdk        #设置软连接</span><br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#ls</span><br>bin  etc  games  include  jdk  jdk1.8.0_321  lib  lib64  libexec  sbin  share  src<br><br><span class="hljs-comment">#初始化环境变量</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /etc/profile.d/jdk.sh</span><br><span class="hljs-built_in">export</span> JAVA_HOME=/usr/local/jdk <span class="hljs-built_in">export</span><br>PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin<br><span class="hljs-comment">#以下两项非必须项</span><br><span class="hljs-built_in">export</span> JRE_HOME=<span class="hljs-variable">$JAVA_HOME</span>/jre<br><span class="hljs-built_in">export</span> CLASSPATH=.:<span class="hljs-variable">$JAVA_HOME</span>/lib/:<span class="hljs-variable">$JRE_HOME</span>/lib/<br>:wq<br>[root@Rocky ~]<span class="hljs-comment">#. /etc/profile.d/jdk.sh</span><br><br><span class="hljs-comment">#注意:JAVA_HOME变量必须设置,否则tomcat启动时会出下面错误</span><br>[root@Rocky ~]<span class="hljs-comment">#catalina.sh                   #安装Tomcat才有这个脚本</span><br>Neither the JAVA_HOME nor the JRE_HOME environment variable is defined At least one of these environment variable is needed to run this program [root@centos8 ~]<span class="hljs-comment">#startup.sh Neither the JAVA_HOME nor the JRE_HOME environment variable is defined At least one of these environment variable is needed to run this program</span><br><br><span class="hljs-comment">#验证安装</span><br>[root@Rocky ~]<span class="hljs-comment">#java -version</span><br>java version <span class="hljs-string">&quot;1.8.0_321&quot;</span><br>Java(TM) SE Runtime Environment (build 1.8.0_321-b07)<br>Java HotSpot(TM) 64-Bit Server VM (build 25.321-b07, mixed mode)<br>[root@Rocky ~]<span class="hljs-comment">#which java</span><br>/usr/local/jdk/bin/java<br></code></pre></td></tr></table></figure><h3 id="二、Tomcat的二进制安装"><a href="#二、Tomcat的二进制安装" class="headerlink" title="二、Tomcat的二进制安装"></a>二、Tomcat的二进制安装</h3><p><strong>注意:安装tomcat前必须先部署JDK</strong></p><p>官方和镜像站点下载: </p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http">https://tomcat.apache.org<br>https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221202110441970.png" alt="image-20221202110441970"></a></p><h4 id="2-1、Tomcat的安装"><a href="#2-1、Tomcat的安装" class="headerlink" title="2.1、Tomcat的安装"></a>2.1、Tomcat的安装</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.59/bin/apache-tomcat-9.0.59.tar.gz</span><br>[root@Rocky ~]<span class="hljs-comment">#ls</span><br>anaconda-ks.cfg  apache-tomcat-9.0.59.tar.gz  jdk-8u321-linux-x64.tar.gz<br>[root@Rocky ~]<span class="hljs-comment">#tar xf apache-tomcat-9.0.59.tar.gz  -C /usr/local</span><br>[root@Rocky ~]<span class="hljs-comment">#cd /usr/local</span><br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#ls</span><br>apache-tomcat-9.0.59  bin  etc  games  include  jdk  jdk1.8.0_321  lib  lib64  libexec  sbin  share  src<br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#ln -s apache-tomcat-9.0.59/ tomcat</span><br><br><span class="hljs-comment">#设置环境变量</span><br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#echo &#x27;PATH=/usr/local/tomcat/bin:$PATH&#x27; &gt; /etc/profile.d/tomcat.sh</span><br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#. /etc/profile.d/tomcat.sh</span><br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#echo $PATH</span><br>/usr/local/tomcat/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/usr/local/jdk/bin<br><br><span class="hljs-comment">#查看当前变量设置和命令用法</span><br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#catalina.sh</span><br>Using CATALINA_BASE:   /usr/local/tomcat<br>Using CATALINA_HOME:   /usr/local/tomcat<br>Using CATALINA_TMPDIR: /usr/local/tomcat/temp<br>Using JRE_HOME:        /usr/local/jdk/jre<br>Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar<br>Using CATALINA_OPTS:   <br>Usage: catalina.sh ( commands ... )<br>commands:<br>  debug             Start Catalina <span class="hljs-keyword">in</span> a debugger<br>  debug -security   Debug Catalina with a security manager<br>  jpda start        Start Catalina under JPDA debugger<br>  run               Start Catalina <span class="hljs-keyword">in</span> the current window<br>  run -security     Start <span class="hljs-keyword">in</span> the current window with security manager<br>  start             Start Catalina <span class="hljs-keyword">in</span> a separate window<br>  start -security   Start <span class="hljs-keyword">in</span> a separate window with security manager<br>  stop              Stop Catalina, waiting up to 5 seconds <span class="hljs-keyword">for</span> the process to end<br>  stop n            Stop Catalina, waiting up to n seconds <span class="hljs-keyword">for</span> the process to end<br>  stop -force       Stop Catalina, <span class="hljs-built_in">wait</span> up to 5 seconds and <span class="hljs-keyword">then</span> use <span class="hljs-built_in">kill</span> -KILL <span class="hljs-keyword">if</span> still running<br>  stop n -force     Stop Catalina, <span class="hljs-built_in">wait</span> up to n seconds and <span class="hljs-keyword">then</span> use <span class="hljs-built_in">kill</span> -KILL <span class="hljs-keyword">if</span> still running<br>  configtest        Run a basic syntax check on server.xml - check <span class="hljs-built_in">exit</span> code <span class="hljs-keyword">for</span> result<br>  version           What version of tomcat are you running?<br>Note: Waiting <span class="hljs-keyword">for</span> the process to end and use of the -force option require that <span class="hljs-variable">$CATALINA_PID</span> is defined<br><br><span class="hljs-comment">#启动tomcat</span><br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#startup.sh           #此脚本等同于catalina.sh + start</span><br>Using CATALINA_BASE:   /usr/local/tomcat<br>Using CATALINA_HOME:   /usr/local/tomcat<br>Using CATALINA_TMPDIR: /usr/local/tomcat/temp<br>Using JRE_HOME:        /usr/local/jdk/jre<br>Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar<br>Using CATALINA_OPTS:   <br>Tomcat started.<br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#ss -ntl     #查看Tomcat的8080端口已开启</span><br>State   Recv-Q    Send-Q      Local Address:Port     Peer Address:Port     Process   <br>LISTEN  0         128         0.0.0.0:22               0.0.0.0:*                    <br>LISTEN  0         1         [::ffff:127.0.0.1]:8005    *:*                    <br>LISTEN  0         100        *:8080                    *:*                    <br>LISTEN  0         128         *:80                     *:*                    <br>LISTEN  0         128         [::]:22                  [::]:* <br><br><span class="hljs-comment">#关闭tomcat</span><br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#shutdown.sh          #此脚本等同于catalina.sh + stop</span><br>Using CATALINA_BASE:   /usr/local/tomcat<br>Using CATALINA_HOME:   /usr/local/tomcat<br>Using CATALINA_TMPDIR: /usr/local/tomcat/temp<br>Using JRE_HOME:        /usr/local/jdk/jre<br>Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar<br>Using CATALINA_OPTS:<br><span class="hljs-comment">#或者以下也可以,指定10s后停止,默认5s </span><br>[root@centos8 ~]<span class="hljs-comment">#catalina.sh stop 10</span><br><br><span class="hljs-comment">#再次用不同方式启动tomcat</span><br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#catalina.sh start</span><br>Using CATALINA_BASE:   /usr/local/tomcat<br>Using CATALINA_HOME:   /usr/local/tomcat<br>Using CATALINA_TMPDIR: /usr/local/tomcat/temp<br>Using JRE_HOME:        /usr/local/jdk/jre<br>Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar<br>Using CATALINA_OPTS:   <br>Tomcat started.<br><span class="hljs-comment">#再次用不同方式关闭tomcat</span><br>[root@Rocky <span class="hljs-built_in">local</span>]<span class="hljs-comment">#catalina.sh stop</span><br>Using CATALINA_BASE:   /usr/local/tomcat<br>Using CATALINA_HOME:   /usr/local/tomcat<br>Using CATALINA_TMPDIR: /usr/local/tomcat/temp<br>Using JRE_HOME:        /usr/local/jdk/jre<br>Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar<br>Using CATALINA_OPTS: <br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221202112918035.png" alt="image-20221202112918035"></a></p><p>注意：为了后期更方便管理，需添加service文件</p><h4 id="2-2、配置tomcat自启动的service文件"><a href="#2-2、配置tomcat自启动的service文件" class="headerlink" title="2.2、配置tomcat自启动的service文件"></a>2.2、配置tomcat自启动的service文件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#创建tomcat专用帐户</span><br>[root@Rocky ~]<span class="hljs-comment">#useradd -r -s /sbin/nologin tomcat</span><br><br><span class="hljs-comment">#准备service文件中相关环境文件</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /usr/local/tomcat/conf/tomcat.conf</span><br><span class="hljs-comment">#如果不指定上面变量,/var/log/messages文件中会出现下面无法启动错误提示 Mar 15 14:30:09 centos8 startup.sh[1530]: Neither the JAVA_HOME nor the JRE_HOME environment variable is defined Mar 15 14:30:09 centos8 startup.sh[1530]: At least one of these environment variable is needed to run this program</span><br><br>[root@Rocky ~]<span class="hljs-comment">#chown -R tomcat. /usr/local/tomcat/</span><br><br><span class="hljs-comment">#创建tomcat.service文件</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /lib/systemd/system/tomcat.service</span><br>[Unit]<br>Description=Tomcat<br><span class="hljs-comment">#After=syslog.target network.target remote-fs.target nss-lookup.target</span><br>After=syslog.target network.target<br><br>[Service]<br>Type=forking<br>EnvironmentFile=/usr/local/tomcat/conf/tomcat.conf<br>ExecStart=/usr/local/tomcat/bin/startup.sh<br>ExecStop=/usr/local/tomcat/bin/shutdown.sh<br>PrivateTmp=<span class="hljs-literal">true</span><br>User=tomcat<br>Group=tomcat<br><br>[Install]<br>WantedBy=multi-user.target<br>:wq<br>[root@Rocky ~]<span class="hljs-comment">#systemctl daemon-reload      #重新加载</span><br>[root@Rocky ~]<span class="hljs-comment">#systemctl enable --now tomcat</span><br></code></pre></td></tr></table></figure><h3 id="三、tomcat的文件结构和组成"><a href="#三、tomcat的文件结构和组成" class="headerlink" title="三、tomcat的文件结构和组成"></a>三、tomcat的文件结构和组成</h3><table><thead><tr><th><strong>目录</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>bin</td><td>服务启动、停止等相关程序和文件</td></tr><tr><td><strong>conf</strong></td><td>配置文件</td></tr><tr><td>lib</td><td>库目录</td></tr><tr><td>logs</td><td>日志目录</td></tr><tr><td><strong>webapps</strong></td><td>应用程序，应用部署目录</td></tr><tr><td>work</td><td>jsp编译后的结果文件，建议提前预热访问，升级应用后，删除此目录数据才能更新</td></tr></tbody></table><p>注意：当java程序更新时，需要将work目录数据删除（rm -rf   /usr/local/tomcat/work/*)</p><h4 id="3-1、JSP-WebApp目录结构"><a href="#3-1、JSP-WebApp目录结构" class="headerlink" title="3.1、JSP WebApp目录结构"></a>3.1、JSP WebApp目录结构</h4><p><strong>$CATALINA_BASE/webapps</strong>下面的每个目录对应的WebApp,可能有以下子目录,但下面子目录是非必须的</p><p>①主页配置：默认按以下顺序查找主页文件 index.html，index.htm、index.jsp</p><p>②WEB-INF/：当前目录WebApp的私有资源路径，通常存储当前应用使用的web.xml和context.xml配置文件</p><p>③META-INF/：类似于WEB-INF，也是私有资源的配置信息，和WEB-INF/目录一样浏览器无法访问</p><p>④classes/：类文件，当前webapp需要的类</p><p>⑤lib/：当前应用依赖的jar包</p><h4 id="3-2、主页设置"><a href="#3-2、主页设置" class="headerlink" title="3.2、主页设置"></a>3.2、主页设置</h4><h5 id="3-2-1、全局配置实现修改默认主页文件"><a href="#3-2-1、全局配置实现修改默认主页文件" class="headerlink" title="3.2.1、全局配置实现修改默认主页文件"></a>3.2.1、全局配置实现修改默认主页文件</h5><p>默认情况下 tomcat 会在**$CATALINA_BASE**/webapps/ROOT/目录下按以下次序查找文件,找到第一个则进行显示</p><p>​       ——index.html</p><p>​       ——index.htm</p><p>​       ——index.jsp</p><p>可以通过修改 <strong>$CATALINA_BASE</strong>/conf/web.xml 中的下面 <welcome-file-list>标签 内容修改默认页文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#此是修改所有网站的优先级</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /usr/local/tomcat/conf/web.xml</span><br>    &lt;welcome-file-list&gt;<br>        &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;   <span class="hljs-comment">#调整此三行的前后顺序，即可解决其优先级</span><br>        &lt;welcome-file&gt;index.htm&lt;/welcome-file&gt;<br>        &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;<br>    &lt;/welcome-file-list&gt;<br><br>&lt;/web-app&gt;<br>[root@Rocky ~]<span class="hljs-comment">#systemctl restart tomcat</span><br><br><span class="hljs-comment">#单独修改其中一个网站的优先级（比如修改ROOT）</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /usr/local/tomcat/webapps/ROOT/WEB-INF/web.xml</span><br> &lt;display-name&gt;Welcome to Tomcat&lt;/display-name&gt;<br>  &lt;description&gt;<br>     Welcome to Tomcat<br>  &lt;/description&gt;<br>    &lt;welcome-file-list&gt;                           <span class="hljs-comment">#添此5行到此位置</span><br>        &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;   <span class="hljs-comment">#调整此三行的前后顺序，即可解决其优先级</span><br>        &lt;welcome-file&gt;index.htm&lt;/welcome-file&gt;<br>        &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;<br>    &lt;/welcome-file-list&gt;<br>&lt;/web-app&gt;<br>:wq<br><br><br><span class="hljs-comment">#如果是针对特定APP目录设置专用配置文件</span><br>[root@Rocky tomcat]<span class="hljs-comment">#cp -rp webapps/ROOT/WEB-INF/ webapps/magedu/</span><br><br>[root@Rocky tomcat]<span class="hljs-comment">#chown -R tomcat.tomcat webapps/magedu/</span><br></code></pre></td></tr></table></figure><h3 id="四、部署基于JAR包的博客系统Halo"><a href="#四、部署基于JAR包的博客系统Halo" class="headerlink" title="四、部署基于JAR包的博客系统Halo"></a>四、部署基于JAR包的博客系统Halo</h3><p>Halo 是一款现代化的基于JAVA实现的博客/CMS系统</p><p>Halo 官网: <a href="https://halo.run/">https://halo.run/</a></p><p>Halo 部署: <a href="https://docs.halo.run/install/linux">https://docs.halo.run/install/linux</a></p><p>docker 部署: <a href="https://docs.halo.run/install/docker">https://docs.halo.run/install/docker</a></p><p><strong>jar包不依赖于Tomcat</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#注意:运行当前版本Halo的最低依赖要求为 JRE 11，目前介绍两种 Linux 发行版的安装方式，均为 OpenJRE，不推荐 Oracle 版本。</span><br>[root@Rocky opt]<span class="hljs-comment">#ls                       #下载jar包，可以直接执行程序</span><br>halo-1.4.17.jar<br>[root@Rocky opt]<span class="hljs-comment">#java -jar halo-1.4.17.jar</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221202151148398.png" alt="image-20221202151148398"></a></p><h3 id="五、自动的应用部署war包"><a href="#五、自动的应用部署war包" class="headerlink" title="五、自动的应用部署war包"></a>五、自动的应用部署war包</h3><h4 id="5-1、将jsp文件制作成war包"><a href="#5-1、将jsp文件制作成war包" class="headerlink" title="5.1、将jsp文件制作成war包"></a>5.1、将jsp文件制作成war包</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@centos8 ~]<span class="hljs-comment">#ls /data/app2/</span><br>test.jsp<br>[root@centos8 ~]<span class="hljs-comment">#cd /data/app2/</span><br><span class="hljs-comment">#生成war包文件app2.war,此文件的名称决定了tomcat子目录的名称</span><br>[root@centos8 app2]<span class="hljs-comment">#jar cvf /data/app2.war *</span><br>added manifest adding: test.html(<span class="hljs-keyword">in</span> = 28) (out= 27)(deflated 3%)<br>adding: test.jsp(<span class="hljs-keyword">in</span> = 329) (out= 275)(deflated 16%)<br>[root@centos8 app2]<span class="hljs-comment">#cd /data/</span><br>[root@centos8 data]<span class="hljs-comment">#ls app2</span><br>app2.war<br>[root@centos8 data]<span class="hljs-comment">#chown tomcat.tomcat /data/app2.war</span><br></code></pre></td></tr></table></figure><h4 id="5-2、自动应用部署上面的war包"><a href="#5-2、自动应用部署上面的war包" class="headerlink" title="5.2、自动应用部署上面的war包"></a>5.2、自动应用部署上面的war包</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@centos8 data]<span class="hljs-comment">#cd /usr/local/tomcat</span><br>[root@centos8 tomcat]<span class="hljs-comment">#cp -p /data/app2.war webapps/</span><br><br><span class="hljs-comment">#再次查看，tomcat将app2.war自动解压缩</span><br>[root@centos8 tomcat]<span class="hljs-comment">#ll webapps/</span><br>total 8<br>drwxr-x--- 15 tomcat tomcat 4096 Feb 9 11:02 docs<br>drwxr-x--- 6 tomcat tomcat 83 Feb 9 11:02 examples<br>drwxr-x--- 5 tomcat tomcat 87 Feb 9 11:02 host-manager<br>drwxr-x--- 5 tomcat tomcat 103 Feb 9 11:02 manager<br>drwxr-x--- 3 tomcat tomcat 300 Feb 9 19:59 ROOT<br>drwxr-x--- 3 tomcat tomcat 55 Feb 9 20:14 app2<br>-rw-r--r-- 1 tomcat tomcat 862 Feb 9 20:05 app2.war<br>[root@centos8 tomcat]<span class="hljs-comment">#ll webapps/app2</span><br>total 8<br>drwxr-x--- 2 tomcat tomcat 44 Feb 9 20:14 META-INF<br>-rw-r----- 1 tomcat tomcat 329 Aug 30 02:30 test.jsp<br></code></pre></td></tr></table></figure><h3 id="六、基于WEB的管理Server-status和Manager-APP实现应用部署"><a href="#六、基于WEB的管理Server-status和Manager-APP实现应用部署" class="headerlink" title="六、基于WEB的管理Server status和Manager APP实现应用部署"></a>六、基于WEB的管理Server status和Manager APP实现应用部署</h3><p>tomcat 提供了基于WEB的管理页面,默认由 tomcat-admin-webapps.noarch包提供相关文件</p><p>打开浏览器可以访问tomcat管理的默认管理页面，点击下图两个按钮都会出现下面提示403的错误提示</p><p><a href=""><img src="image-20221202154610064.png" alt="image-20221202154610064"></a></p><p><a href=""><img src="image-20221202154807444.png" alt="image-20221202154807444"></a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#修改conf/tomcat-users.xml，我们需要一个角色manager-gui。</span><br>[root@centos8 tomcat]<span class="hljs-comment">#vim conf/tomcat-users.xml</span><br>&lt;tomcat-users xmlns=<span class="hljs-string">&quot;http://tomcat.apache.org/xml&quot;</span><br>              xmlns:xsi=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br>              xsi:schemaLocation=<span class="hljs-string">&quot;http://tomcat.apache.org/xml tomcat-users.xsd&quot;</span><br>              version=<span class="hljs-string">&quot;1.0&quot;</span>&gt;<br><span class="hljs-comment">#加下面两行，指定用户和密码</span><br>  &lt;role rolename=<span class="hljs-string">&quot;manager-gui&quot;</span>/&gt;<br>  &lt;user username=<span class="hljs-string">&quot;admin&quot;</span> password=<span class="hljs-string">&quot;123456&quot;</span> roles=<span class="hljs-string">&quot;manager-gui&quot;</span>/&gt;<br>&lt;/tomcat-users&gt;<br>:wq<br><span class="hljs-comment">#修改全局配置文件需要重启服务生效</span><br>[root@centos8 tomcat]<span class="hljs-comment">#systemctl restart tomcat</span><br><br><span class="hljs-comment">#注意此时只能本地访问，不能远程，所以需修改webapps/manager/META-INF/context.xml</span><br>[root@centos8 tomcat]<span class="hljs-comment">#vim webapps/manager/META-INF/context.xml</span><br>&lt;Context antiResourceLocking=<span class="hljs-string">&quot;false&quot;</span> privileged=<span class="hljs-string">&quot;true&quot;</span> &gt;<br>  &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.valves.RemoteAddrValve&quot;</span><br>         allow=<span class="hljs-string">&quot;127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1|10\.0\.0\.\d+&quot;</span> /&gt;   <span class="hljs-comment">#添加|10\.0\.0\.\d+其中d表示一个数字+表示多个数字</span><br>  &lt;Manager sessionAttributeValueClassNameFilter=<span class="hljs-string">&quot;java\.lang\.</span><br><span class="hljs-string">:wq  </span><br><span class="hljs-string">#修改WebApp的配置无需重启服务即可生效</span><br></code></pre></td></tr></table></figure><h3 id="七、tomcat实现多虚拟主机"><a href="#七、tomcat实现多虚拟主机" class="headerlink" title="七、tomcat实现多虚拟主机"></a>七、tomcat实现多虚拟主机</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#cd /usr/local/tomcat</span><br>[root@Rocky tomcat]<span class="hljs-comment">#vim conf/server.xml</span><br>      &lt;Host name=<span class="hljs-string">&quot;localhost&quot;</span>  appBase=<span class="hljs-string">&quot;webapps&quot;</span><br>            unpackWARs=<span class="hljs-string">&quot;true&quot;</span> autoDeploy=<span class="hljs-string">&quot;true&quot;</span>&gt;<br><br>        &lt;!-- SingleSignOn valve, share authentication between web applications<br>             Documentation at: /docs/config/valve.html --&gt;<br>        &lt;!--<br>        &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.authenticator.SingleSignOn&quot;</span> /&gt;<br>        --&gt;<br><br>        &lt;!-- Access <span class="hljs-built_in">log</span> processes all example.<br>             Documentation at: /docs/config/valve.html<br>             Note: The pattern used is equivalent to using pattern=<span class="hljs-string">&quot;common&quot;</span> --&gt;<br>        &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> directory=<span class="hljs-string">&quot;logs&quot;</span><br>               prefix=<span class="hljs-string">&quot;localhost_access_log&quot;</span> suffix=<span class="hljs-string">&quot;.txt&quot;</span><br>               pattern=<span class="hljs-string">&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot;</span> /&gt;<br><br>      &lt;/Host&gt;<br><span class="hljs-comment">#添加下面内容即可增加另一台虚拟主机</span><br>      &lt;Host name=<span class="hljs-string">&quot;n68.magedu.org&quot;</span>  appBase=<span class="hljs-string">&quot;/data/tomcat/n68&quot;</span>      <span class="hljs-comment">#n68.magedu.org必须是网站名,/data/tomcat/n68是文件存放路径</span><br>            unpackWARs=<span class="hljs-string">&quot;true&quot;</span> autoDeploy=<span class="hljs-string">&quot;true&quot;</span>&gt;<br>        &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> directory=<span class="hljs-string">&quot;logs&quot;</span><br>               prefix=<span class="hljs-string">&quot;n68_access_log&quot;</span> suffix=<span class="hljs-string">&quot;.txt&quot;</span>      <span class="hljs-comment">#日志的名称</span><br>               pattern=<span class="hljs-string">&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot;</span> /&gt;<br><br>      &lt;/Host&gt;<br>:wq<br><br><span class="hljs-comment">#对每个虚拟主机，准备数据</span><br>[root@Rocky tomcat]<span class="hljs-comment">#mkdir -p /data/tomcat/n68/ROOT</span><br>[root@Rocky tomcat]<span class="hljs-comment">#cd /data/tomcat/n68/ROOT</span><br>[root@Rocky ROOT]<span class="hljs-comment">#vim index.html</span><br>&lt;h1&gt; 10.0.0.186 &lt;/h1&gt;<br>:wq<br><br><span class="hljs-comment">#设置权限</span><br>[root@Rocky ROOT]<span class="hljs-comment">#chown -R tomcat. /data/tomcat/n68/</span><br><br><br><span class="hljs-comment">#此外还需要DNS进行解析</span><br>[root@DNS ~]<span class="hljs-comment">#vim /var/named/magedu.org.zone </span><br><span class="hljs-variable">$TTL</span> 1D<br>@         IN    SOA   master  admin.magedu.org ( 6  1D  10M  1D  6H  )<br>                NS    master<br>                NS    slave1<br>master          A     10.0.0.128<br>slave1          A     10.0.0.184<br>n68             A     10.0.0.186 <br>:wq<br>[root@DNS ~]<span class="hljs-comment">#rndc reload</span><br><br>[root@Rocky tomcat]<span class="hljs-comment">#systemctl restart tomcat</span><br></code></pre></td></tr></table></figure><p><img src="image-20221202163609685.png" alt="image-20221202163609685"></p><h3 id="八、tomcat的负载均衡"><a href="#八、tomcat的负载均衡" class="headerlink" title="八、tomcat的负载均衡"></a>八、tomcat的负载均衡</h3><p><a href=""><img src="image-20221202173530849.png" alt="image-20221202173530849"></a></p><h4 id="8-1、Tomcat配置"><a href="#8-1、Tomcat配置" class="headerlink" title="8.1、Tomcat配置"></a>8.1、Tomcat配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@tomcat1 ~]<span class="hljs-comment">#cd /usr/local/tomcat</span><br>[root@tomcat1 tomcat]<span class="hljs-comment">#vim conf/server.xml</span><br>&lt;Host name=<span class="hljs-string">&quot;www.magedu.org&quot;</span>  appBase=<span class="hljs-string">&quot;/data/tomcat/node1/&quot;</span><br>            unpackWARs=<span class="hljs-string">&quot;true&quot;</span> autoDeploy=<span class="hljs-string">&quot;true&quot;</span>&gt;<br>        &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> directory=<span class="hljs-string">&quot;logs&quot;</span><br>               prefix=<span class="hljs-string">&quot;node1_access_log&quot;</span> suffix=<span class="hljs-string">&quot;.txt&quot;</span><br>               pattern=<span class="hljs-string">&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot;</span> /&gt;<br>      &lt;/Host&gt;<br>:wq<br>[root@tomcat1 ~]<span class="hljs-comment">#mkdir -p /data/tomcat/node1/ROOT</span><br>[root@tomcat1 ~]<span class="hljs-comment">#cd /data/tomcat/node1/ROOT</span><br>[root@tomcat1 ROOT]<span class="hljs-comment">#vim index.jsp</span><br>[root@tomcat1 ROOT]<span class="hljs-comment">#cat index.jsp </span><br>&lt;%@ page import=<span class="hljs-string">&quot;java.util.*&quot;</span> %&gt;<br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;<br>&lt;<span class="hljs-built_in">head</span>&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;title&gt;tomcat <span class="hljs-built_in">test</span>&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h1&gt; Tomcat Website node1 &lt;/h1&gt;<br>&lt;div&gt;On  &lt;%=request.getServerName() %&gt;&lt;/div&gt;<br>&lt;div&gt;&lt;%=request.getLocalAddr() + <span class="hljs-string">&quot;:&quot;</span> + request.getLocalPort() %&gt;&lt;/div&gt;<br>&lt;div&gt;SessionID = &lt;span style=<span class="hljs-string">&quot;color:blue&quot;</span>&gt;&lt;%=session.getId() %&gt;&lt;/span&gt;&lt;/div&gt;<br>&lt;%=new Date()%&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br>[root@tomcat1 ~]<span class="hljs-comment">#chown -R tomcat. /data/tomcat/node1/</span><br>[root@tomcat1 ROOT]<span class="hljs-comment">#systemctl restart tomcat</span><br>-----------------------------------------------------------------------------------<br>[root@tomcat2 ~]<span class="hljs-comment">#cd /usr/local/tomcat</span><br>[root@tomcat2 tomcat]<span class="hljs-comment">#vim conf/server.xml</span><br>&lt;Host name=<span class="hljs-string">&quot;www.magedu.org&quot;</span>  appBase=<span class="hljs-string">&quot;/data/tomcat/node2/&quot;</span><br>            unpackWARs=<span class="hljs-string">&quot;true&quot;</span> autoDeploy=<span class="hljs-string">&quot;true&quot;</span>&gt;<br>        &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> directory=<span class="hljs-string">&quot;logs&quot;</span><br>               prefix=<span class="hljs-string">&quot;node2_access_log&quot;</span> suffix=<span class="hljs-string">&quot;.txt&quot;</span><br>               pattern=<span class="hljs-string">&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot;</span> /&gt;<br>      &lt;/Host&gt;<br>:wq<br>[root@tomcat2 ~]<span class="hljs-comment">#mkdir -p /data/tomcat/node2/ROOT</span><br>[root@tomcat2 ~]<span class="hljs-comment">#cd /data/tomcat/node2/ROOT</span><br>[root@tomcat2 ROOT]<span class="hljs-comment">#vim index.jsp</span><br>[root@tomcat2 ROOT]<span class="hljs-comment">#cat index.jsp </span><br>&lt;%@ page import=<span class="hljs-string">&quot;java.util.*&quot;</span> %&gt;<br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;<br>&lt;<span class="hljs-built_in">head</span>&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;title&gt;tomcat <span class="hljs-built_in">test</span>&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h1&gt; Tomcat Website node2 &lt;/h1&gt;<br>&lt;div&gt;On  &lt;%=request.getServerName() %&gt;&lt;/div&gt;<br>&lt;div&gt;&lt;%=request.getLocalAddr() + <span class="hljs-string">&quot;:&quot;</span> + request.getLocalPort() %&gt;&lt;/div&gt;<br>&lt;div&gt;SessionID = &lt;span style=<span class="hljs-string">&quot;color:blue&quot;</span>&gt;&lt;%=session.getId() %&gt;&lt;/span&gt;&lt;/div&gt;<br>&lt;%=new Date()%&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br>[root@tomcat2 ~]<span class="hljs-comment">#chown -R tomcat. /data/tomcat/node2/</span><br>[root@tomcat2 ROOT]<span class="hljs-comment">#systemctl restart tomcat</span><br></code></pre></td></tr></table></figure><h4 id="8-2、DNS解析"><a href="#8-2、DNS解析" class="headerlink" title="8.2、DNS解析"></a>8.2、DNS解析</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@DNS ~]<span class="hljs-comment">#vim /var/named/magedu.org.zone </span><br><span class="hljs-variable">$TTL</span> 1D<br>@         IN    SOA   master  admin.magedu.org ( 6  1D  10M  1D  6H  )<br>                NS    master<br>                NS    slave1<br>master          A     10.0.0.128<br>slave1          A     10.0.0.184<br>node1           A     10.0.0.216<br>node2           A     10.0.0.217 <br>:wq<br>[root@DNS ~]<span class="hljs-comment">#rndc reload</span><br></code></pre></td></tr></table></figure><h4 id="8-3、nginx的配置（反向代理与负载均衡）"><a href="#8-3、nginx的配置（反向代理与负载均衡）" class="headerlink" title="8.3、nginx的配置（反向代理与负载均衡）"></a>8.3、nginx的配置（反向代理与负载均衡）</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@nginx ~]<span class="hljs-comment">#vim /apps/nginx/conf/nginx.conf</span><br>http &#123;<br>    upstream tomcat &#123;                    <span class="hljs-comment">#添加此模块</span><br>        server 10.0.0.216:8080;<br>        server 10.0.0.217:8080;<br>    &#125;<br><br>    server &#123;<br>        listen       80;<br>        server_name  localhost;<br>        location / &#123;<br>            root   html;<br>            index  index.html index.htm;<br>            proxy_pass http://tomcat;      <span class="hljs-comment">#添加以下两行</span><br>            proxy_set_header Host <span class="hljs-variable">$http_host</span>;<br>        &#125;<br>    &#125;<br>&#125;<br>:wq<br>[root@nginx ~]<span class="hljs-comment">#systemctl restart nginx</span><br><span class="hljs-comment">#此时访问方式是轮询，但session一直发生变化</span><br></code></pre></td></tr></table></figure><h5 id="8-3-1、保持session不发生变化"><a href="#8-3-1、保持session不发生变化" class="headerlink" title="8.3.1、保持session不发生变化"></a>8.3.1、保持session不发生变化</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@nginx ~]<span class="hljs-comment">#vim /apps/nginx/conf/nginx.conf</span><br>    upstream tomcat &#123;<br>        <span class="hljs-built_in">hash</span> <span class="hljs-variable">$cookie_JSESSIONID</span>;       <span class="hljs-comment">#添加此行，当jsession相同时，就往同一台机器上调度</span><br>        server 10.0.0.216:8080;<br>        server 10.0.0.217:8080;<br>    &#125;<br>:wq<br>[root@nginx ~]<span class="hljs-comment">#systemctl restart nginx</span><br><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221202185420285.png" alt="image-20221202185420285"></a></p><p><a href=""><img src="image-20221202185443412.png" alt="image-20221202185443412"></a></p><h3 id="九、tomcat和memcached集成在一台主机，实现session共享"><a href="#九、tomcat和memcached集成在一台主机，实现session共享" class="headerlink" title="九、tomcat和memcached集成在一台主机，实现session共享"></a>九、tomcat和memcached集成在一台主机，实现session共享</h3><p>msm（memcached session manager）提供将Tomcat的session保持到memcached或redis的程序，可以实现高可用。</p><p><strong>注意：msm不支持Tomcat10版本</strong></p><p>项目早期托管在google code,目前在Github</p><p>github网站链接: </p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://github.com/magro/memcached-session-manager<br></code></pre></td></tr></table></figure><p>安装参考链接: </p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://github.com/magro/memcached-session-manager/wiki/SetupAndConfiguration<br></code></pre></td></tr></table></figure><p>将spymemcached.jar、memcached-session-manage、kyro相关的jar文件都放到Tomcat的lib目录中</p><p>去，这个目录是 $CATALINA_HOME/lib/ ，对应本次安装就是/usr/local/tomcat/lib。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">memcached-session-manager-2.3.2.jar<br>memcached-session-manager-tc9-2.3.2.jar      #如果是Tomcat8，需要安装tc8<br>spymemcached-2.12.3.jar<br><br>msm-kryo-serializer-2.3.2.jar<br>kryo-serializers-0.45.jar<br>kryo-3.0.3.jar<br>minlog-1.3.1.jar<br>reflectasm-1.11.9.jar<br>asm-5.2.jar<br>objenesis-2.6.jar<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221203090558919.png" alt="image-20221203090558919"></a></p><h4 id="9-1、Tomcat配置"><a href="#9-1、Tomcat配置" class="headerlink" title="9.1、Tomcat配置"></a>9.1、Tomcat配置</h4><p>和上面8.1、Tomcat配置相同</p><h4 id="9-2、DNS解析"><a href="#9-2、DNS解析" class="headerlink" title="9.2、DNS解析"></a>9.2、DNS解析</h4><p>和上面8.2、DNS解析相同</p><h4 id="9-3、nginx的配置（反向代理与负载均衡）"><a href="#9-3、nginx的配置（反向代理与负载均衡）" class="headerlink" title="9.3、nginx的配置（反向代理与负载均衡）"></a>9.3、nginx的配置（反向代理与负载均衡）</h4><p>和上面8.3、nginx的配置（反向代理与负载均衡）相同</p><h4 id="9-4、memcached的配置"><a href="#9-4、memcached的配置" class="headerlink" title="9.4、memcached的配置"></a>9.4、memcached的配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@tomcat1 ~]<span class="hljs-comment">#yum -y install memcached</span><br>[root@tomcat1 ~]<span class="hljs-comment">#vim /etc/sysconfig/memcached</span><br>PORT=<span class="hljs-string">&quot;11211&quot;</span><br>USER=<span class="hljs-string">&quot;memcached&quot;</span><br>MAXCONN=<span class="hljs-string">&quot;1024&quot;</span>                  <span class="hljs-comment">#最大连接数</span><br>CACHESIZE=<span class="hljs-string">&quot;64&quot;</span>                  <span class="hljs-comment">#最大使用内存，正常生产中此处应该设置为内存的一半大小</span><br>OPTIONS=<span class="hljs-string">&quot;&quot;</span>                      <span class="hljs-comment">#注意有的版本此处写的127.0.0.1，则需要注释掉此行</span><br>:wq<br>[root@tomcat1 ~]<span class="hljs-comment">#systemctl enable --now memcached.service</span><br>[root@tomcat1 ~]<span class="hljs-comment">#ss -ntl</span><br>State       Recv-Q Send-Q    Local Address:Port                   Peer Address:Port <br>LISTEN      0      128                   *:11211                             *:*  <br>------------------------------------------------------------------------------------<br>[root@tomcat2 ~]<span class="hljs-comment">#yum -y install memcached</span><br>[root@tomcat2 ~]<span class="hljs-comment">#systemctl enable --now memcached.service</span><br>[root@tomcat2 ~]<span class="hljs-comment">#ss -ntl</span><br>State       Recv-Q Send-Q    Local Address:Port                   Peer Address:Port <br>LISTEN      0      128                   *:11211                             *:*  <br></code></pre></td></tr></table></figure><h4 id="9-5、Tomcat和memcached的关联设置"><a href="#9-5、Tomcat和memcached的关联设置" class="headerlink" title="9.5、Tomcat和memcached的关联设置"></a>9.5、Tomcat和memcached的关联设置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@tomcat1 tomcat]<span class="hljs-comment">#vim conf/context.xml</span><br>    --&gt;<br><span class="hljs-comment">#添加以下内容</span><br>&lt;Manager className=<span class="hljs-string">&quot;de.javakaffee.web.msm.MemcachedBackupSessionManager&quot;</span><br>    memcachedNodes=<span class="hljs-string">&quot;n1:10.0.0.216:11211,n2:10.0.0.217:11211&quot;</span><br>    failoverNodes=<span class="hljs-string">&quot;n1&quot;</span><br>    requestUriIgnorePattern=<span class="hljs-string">&quot;.*\.(ico|png|gif|jpg|css|js)$&quot;</span><br>    transcoderFactoryClass=<span class="hljs-string">&quot;de.javakaffee.web.msm.serializer.kryo.KryoTranscoderFactory&quot;</span><br>    /&gt;<br><span class="hljs-comment">#添加以上内容</span><br>&lt;/Context&gt;<br>:wq<br>[root@tomcat1 tomcat]<span class="hljs-comment">#cd lib</span><br>[root@tomcat1 lib]<span class="hljs-comment">#rz -E    #将前面所说的jar文件导入这个目录下</span><br>rz waiting to receive.<br>[root@tomcat1 lib]<span class="hljs-comment">#ls |wc -l</span><br>43<br>[root@tomcat1 lib]<span class="hljs-comment">#systemctl restart tomcat</span><br>------------------------------------------------------------------------------------<br>[root@tomcat2 tomcat]<span class="hljs-comment">#vim conf/context.xml</span><br>    --&gt;<br><span class="hljs-comment">#添加以下内容</span><br>&lt;Manager className=<span class="hljs-string">&quot;de.javakaffee.web.msm.MemcachedBackupSessionManager&quot;</span><br>    memcachedNodes=<span class="hljs-string">&quot;n1:10.0.0.216:11211,n2:10.0.0.217:11211&quot;</span><br>    failoverNodes=<span class="hljs-string">&quot;n2&quot;</span><br>    requestUriIgnorePattern=<span class="hljs-string">&quot;.*\.(ico|png|gif|jpg|css|js)$&quot;</span><br>    transcoderFactoryClass=<span class="hljs-string">&quot;de.javakaffee.web.msm.serializer.kryo.KryoTranscoderFactory&quot;</span><br>    /&gt;<br><span class="hljs-comment">#添加以上内容</span><br>&lt;/Context&gt;<br>:wq<br>[root@tomcat2 tomcat]<span class="hljs-comment">#cd lib</span><br><span class="hljs-comment">#将前面所说的jar文件导入这个目录下</span><br>[root@tomcat2 lib]<span class="hljs-comment">#ls |wc -l      #查看现在有多少文件</span><br>43<br>[root@tomcat2 lib]<span class="hljs-comment">#systemctl restart tomcat</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221203102125576.png" alt="image-20221203102125576"></a></p><p><a href=""><img src="image-20221203102452083.png" alt="image-20221203102452083"></a></p><h3 id="十、redis实现non-sticky模式的msm，实现session共享"><a href="#十、redis实现non-sticky模式的msm，实现session共享" class="headerlink" title="十、redis实现non-sticky模式的msm，实现session共享"></a>十、redis实现non-sticky模式的msm，实现session共享</h3><p>将spymemcached.jar、memcached-session-manage、kyro相关的jar文件都放到Tomcat的lib目录中</p><p>去，这个目录是 $CATALINA_HOME/lib/ ，对应本次安装就是/usr/local/tomcat/lib。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">memcached-session-manager-2.3.2.jar<br>memcached-session-manager-tc9-2.3.2.jar      #如果是Tomcat8，需要安装tc8<br>spymemcached-2.12.3.jar<br><br>jedis-3.0.0.jar<br><br>msm-kryo-serializer-2.3.2.jar<br>kryo-serializers-0.45.jar<br>kryo-3.0.3.jar<br>minlog-1.3.1.jar<br>reflectasm-1.11.9.jar<br>asm-5.2.jar<br>objenesis-2.6.jar<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221203104449102.png" alt="image-20221203104449102"></a></p><h4 id="10-1、Tomcat配置"><a href="#10-1、Tomcat配置" class="headerlink" title="10.1、Tomcat配置"></a>10.1、Tomcat配置</h4><p>和上面8.1、Tomcat配置相同</p><h4 id="10-2、DNS解析"><a href="#10-2、DNS解析" class="headerlink" title="10.2、DNS解析"></a>10.2、DNS解析</h4><p>和上面8.2、DNS解析相同</p><h4 id="10-3、nginx的配置（反向代理与负载均衡）"><a href="#10-3、nginx的配置（反向代理与负载均衡）" class="headerlink" title="10.3、nginx的配置（反向代理与负载均衡）"></a>10.3、nginx的配置（反向代理与负载均衡）</h4><p>和上面8.3、nginx的配置（反向代理与负载均衡）相同</p><h4 id="10-4、redis配置"><a href="#10-4、redis配置" class="headerlink" title="10.4、redis配置"></a>10.4、redis配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@redis ~]<span class="hljs-comment">#yum -y install redis</span><br>[root@redis ~]<span class="hljs-comment">#vim /etc/redis.conf</span><br><span class="hljs-built_in">bind</span> 0.0.0.0         <span class="hljs-comment">#将127.0.0.1改为0.0.0.0</span><br>:wq<br>[root@redis ~]<span class="hljs-comment">#systemctl enable --now redis</span><br><br></code></pre></td></tr></table></figure><h4 id="10-5、Tomcat和redis的关联设置"><a href="#10-5、Tomcat和redis的关联设置" class="headerlink" title="10.5、Tomcat和redis的关联设置"></a>10.5、Tomcat和redis的关联设置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@tomcat1 tomcat]<span class="hljs-comment">#vim conf/context.xml</span><br>    --&gt;<br><span class="hljs-comment">#添加以下内容</span><br>&lt;Manager className=<span class="hljs-string">&quot;de.javakaffee.web.msm.MemcachedBackupSessionManager&quot;</span><br>    memcachedNodes=<span class="hljs-string">&quot;redis://10.0.0.218&quot;</span>            <span class="hljs-comment">#安装redis的ip</span><br>    sticky=<span class="hljs-string">&quot;false&quot;</span><br>    sessionBackupAsync=<span class="hljs-string">&quot;false&quot;</span><br>    lockingMode=<span class="hljs-string">&quot;uriPattern:/path1|/path2&quot;</span><br>    requestUriIgnorePattern=<span class="hljs-string">&quot;.*\.(ico|png|gif|jpg|css|js)$&quot;</span><br>    transcoderFactoryClass=<span class="hljs-string">&quot;de.javakaffee.web.msm.serializer.kryo.KryoTranscoderFactory&quot;</span><br>    /&gt;<br><span class="hljs-comment">#添加以上内容</span><br>&lt;/Context&gt;<br>:wq<br>[root@tomcat1 tomcat]<span class="hljs-comment">#systemctl restart tomcat</span><br><br>--------------------------------------------------------------------------<br>[root@tomcat2 tomcat]<span class="hljs-comment">#vim conf/context.xml</span><br>    --&gt;<br><span class="hljs-comment">#添加以下内容</span><br>&lt;Manager className=<span class="hljs-string">&quot;de.javakaffee.web.msm.MemcachedBackupSessionManager&quot;</span><br>    memcachedNodes=<span class="hljs-string">&quot;redis://10.0.0.218&quot;</span><br>    sticky=<span class="hljs-string">&quot;false&quot;</span><br>    sessionBackupAsync=<span class="hljs-string">&quot;false&quot;</span><br>    lockingMode=<span class="hljs-string">&quot;uriPattern:/path1|/path2&quot;</span><br>    requestUriIgnorePattern=<span class="hljs-string">&quot;.*\.(ico|png|gif|jpg|css|js)$&quot;</span><br>    transcoderFactoryClass=<span class="hljs-string">&quot;de.javakaffee.web.msm.serializer.kryo.KryoTranscoderFactory&quot;</span><br>    /&gt;<br><span class="hljs-comment">#添加以上内容</span><br>&lt;/Context&gt;<br>:wq<br>[root@tomcat2 tomcat]<span class="hljs-comment">#systemctl restart tomcat</span><br></code></pre></td></tr></table></figure><h4 id="10-6、检测redis是否有session数据"><a href="#10-6、检测redis是否有session数据" class="headerlink" title="10.6、检测redis是否有session数据"></a>10.6、检测redis是否有session数据</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#未有客户访问前</span><br>[root@redis ~]<span class="hljs-comment">#redis-cli</span><br>127.0.0.1:6379&gt; keys *<br>(empty list or <span class="hljs-built_in">set</span>)<br>127.0.0.1:6379&gt;<br><span class="hljs-comment">#有客户访问后</span><br>127.0.0.1:6379&gt; keys *<br>1) <span class="hljs-string">&quot;validity:EB2796C9FF36561966BC7CFA3BBBA079&quot;</span><br>2) <span class="hljs-string">&quot;EB2796C9FF36561966BC7CFA3BBBA079&quot;</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221203111204065.png" alt="image-20221203111204065"></a></p><p><a href=""><img src="image-20221203111234234.png" alt="image-20221203111234234"></a></p><p>十一、</p><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Nginx练习</title>
    <link href="/2022/11/27/Nginx%E7%BB%83%E4%B9%A0/"/>
    <url>/2022/11/27/Nginx%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><p>[TOC]</p><h3 id="一、Nginx的编译安装"><a href="#一、Nginx的编译安装" class="headerlink" title="一、Nginx的编译安装"></a>一、Nginx的编译安装</h3><h4 id="1-1、官方源码包下载地址："><a href="#1-1、官方源码包下载地址：" class="headerlink" title="1.1、官方源码包下载地址："></a>1.1、官方源码包下载地址：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs ABAP">https://nginx.org/en/download.html<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221127110618803.png" alt="image-20221127110618803"></a></p><h4 id="1-2、编译安装"><a href="#1-2、编译安装" class="headerlink" title="1.2、编译安装"></a>1.2、编译安装</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#yum -y install gcc pcre-devel openssl-devel zlib-devel     #安装相关包</span><br>[root@Rocky ~]<span class="hljs-comment">#useradd -s /sbin/nologin nginx          #创建Nginx账号，因不需要登录，只需要给nologin的shell类型</span><br>[root@Rocky ~]<span class="hljs-comment">#wget https://nginx.org/download/nginx-1.22.1.tar.gz</span><br>[root@Rocky ~]<span class="hljs-comment">#mv nginx-1.22.1.tar.gz  /usr/local/src</span><br><span class="hljs-comment">#/usr/local ：用户级的软件目录，用来存放用户安装编译的软件，用户自己编译安装的软件也默认存放在这里</span><br><span class="hljs-comment">#/usr/local/src ：这个目录是存放用户编译软件所用的源码的</span><br>[root@Rocky ~]<span class="hljs-comment">#cd /usr/local/src</span><br>[root@Rocky src]<span class="hljs-comment">#tar xf nginx-1.22.1.tar.gz </span><br>[root@Rocky src]<span class="hljs-comment">#ls</span><br>nginx-1.22.1  nginx-1.22.1.tar.gz<br>[root@Rocky src]<span class="hljs-comment">#cd nginx-1.22.1/</span><br>[root@Rocky nginx-1.22.1]<span class="hljs-comment">#ls</span><br>auto  CHANGES  CHANGES.ru  conf  configure  contrib  html  LICENSE  man  README  src<br><span class="hljs-comment">#一般安装方法可以从README或者INSTALL里面可以找到</span><br>[root@Rocky nginx-1.22.1]<span class="hljs-comment">#./configure --prefix=/apps/nginx \</span><br>--user=nginx \<br>--group=nginx \<br>--with-http_ssl_module \<br>--with-http_v2_module \<br>--with-http_realip_module \<br>--with-http_stub_status_module \<br>--with-http_gzip_static_module \<br>--with-pcre \<br>--with-stream \<br>--with-stream_ssl_module \<br>--with-stream_realip_module<br>[root@Rocky nginx-1.22.1]<span class="hljs-comment">#make -j 2 &amp;&amp; make install</span><br>[root@Rocky ~]<span class="hljs-comment">#tree /apps/nginx</span><br>/apps/nginx<br>├── conf<br>│   ├── fastcgi.conf<br>│   ├── fastcgi.conf.default<br>│   ├── fastcgi_params<br>│   ├── fastcgi_params.default<br>│   ├── koi-utf<br>│   ├── koi-win<br>│   ├── mime.types<br>│   ├── mime.types.default<br>│   ├── nginx.conf<br>│   ├── nginx.conf.default<br>│   ├── scgi_params<br>│   ├── scgi_params.default<br>│   ├── uwsgi_params<br>│   ├── uwsgi_params.default<br>│   └── win-utf<br>├── html<br>│   ├── 50x.html<br>│   └── index.html<br>├── logs<br>└── sbin<br>    └── nginx<br>[root@Rocky ~]<span class="hljs-comment">#/apps/nginx/sbin/nginx          #启动Nginx，后台启动</span><br>[root@Rocky ~]<span class="hljs-comment">#ss -ntl                         #此时可以看到80端口已监听</span><br>State   Recv-Q   Send-Q     Local Address:Port      Peer Address:Port        Process <br>LISTEN  0        128        0.0.0.0:80              0.0.0.0:*                       <br>LISTEN  0        128        0.0.0.0:22              0.0.0.0:*                       <br>LISTEN  0        128        [::]:22                 [::]:*<br><span class="hljs-comment">#此时关闭只有使用kill命令</span><br>[root@Rocky ~]<span class="hljs-comment">#ps auxf</span><br>root       29907  0.0  0.0  42572   848 ?        Ss   12:05   0:00 nginx: master process /apps/ngin<br>nginx      29908  0.0  0.2  74680  4948 ?        S    12:05   0:00  \_ nginx: worker process<br>[root@Rocky ~]<span class="hljs-comment">#kill 29907</span><br><br><span class="hljs-comment">#只输入Nginx就可以启动有两种方法</span><br><span class="hljs-comment">#第一种方法</span><br>[root@Rocky ~]<span class="hljs-comment">#ln -s /apps/nginx/sbin/nginx /usr/sbin/</span><br>[root@Rocky ~]<span class="hljs-comment">#nginx</span><br>[root@Rocky ~]<span class="hljs-comment">#ss -ntl</span><br>State    Recv-Q     Send-Q     Local Address:Port     Peer Address:Port     Process <br>LISTEN     0          128       0.0.0.0:80                 0.0.0.0:*                 <br>LISTEN     0          128       0.0.0.0:22                 0.0.0.0:*                 <br>LISTEN     0          128       [::]:22                    [::]:*                   <br>[root@Rocky ~]<span class="hljs-comment">#nginx -s stop</span><br>[root@Rocky ~]<span class="hljs-comment">#ss -ntl</span><br>State    Recv-Q     Send-Q      Local Address:Port     Peer Address:Port     Process <br>LISTEN     0          128        0.0.0.0:22                 0.0.0.0:*               <br>LISTEN     0          128        [::]:22                    [::]:*                   <br><span class="hljs-comment">#第二种方法</span><br>[root@Rocky ~]<span class="hljs-comment">#echo &quot;PATH=/apps/nginx/sbin:$PATH&quot; &gt; /etc/profile.d/nginx.sh</span><br><span class="hljs-comment">#将其路径写入环境变量中</span><br>[root@Rocky ~]<span class="hljs-comment">#source  /etc/profile.d/nginx.sh</span><br><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221127114404902.png" alt="image-20221127114404902"></a></p><h4 id="1-3、设置启动方式"><a href="#1-3、设置启动方式" class="headerlink" title="1.3、设置启动方式"></a>1.3、设置启动方式</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#使用nginx此种方式开启，关闭时只能使用kill</span><br><span class="hljs-comment">#更好的方式是设置service文件</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /usr/lib/systemd/system/nginx.service</span><br>[Unit]<br>Description=nginx - high performance web server<br>Documentation=http://nginx.org/en/docs/<br>After=network-online.target remote-fs.target nss-lookup.target<br>Wants=network-online.target<br><br>[Service]<br>Type=forking<br>PIDFile=/apps/nginx/run/nginx.pid         <span class="hljs-comment">#指定pid文件的目录,默认在logs目录下,可选配置</span><br>ExecStart=/apps/nginx/sbin/nginx -c /apps/nginx/conf/nginx.conf<br>ExecReload=/bin/kill -s HUP <span class="hljs-variable">$MAINPID</span>      <span class="hljs-comment">#$MAINPID指的是主进程的pid</span><br>ExecStop=/bin/kill -s TERM <span class="hljs-variable">$MAINPID</span><br>LimitNOFILE=100000<br><br>[Install]<br>WantedBy=multi-user.target<br>:wq<br><span class="hljs-comment">#需要自己创建存放pid的文件目录</span><br>[root@Rocky ~]<span class="hljs-comment">#mkdir /apps/nginx/run</span><br><span class="hljs-comment">#因为配置文件不知道在哪读取pid，所以需要在配置文件了进行设置</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /apps/nginx/conf/nginx.conf</span><br>pid   /apps/nginx/run/nginx.pid;           <span class="hljs-comment">#取消此行注释，并将路径改为此路径</span><br>:wq<br><span class="hljs-comment">#注意修改完配置文件后，需先查看是否有语法错误：nginx -t</span><br>[root@Rocky ~]<span class="hljs-comment">#systemctl enable --now nginx</span><br>Created symlink /etc/systemd/system/multi-user.target.wants/nginx.service → /usr/lib/systemd/system/nginx.service.<br>[root@Rocky ~]<span class="hljs-comment">#ss -ntl</span><br>State    Recv-Q     Send-Q     Local Address:Port     Peer Address:Port     Process <br>LISTEN     0          128           0.0.0.0:80           0.0.0.0:*     <br>LISTEN     0          128           0.0.0.0:22           0.0.0.0:*     <br>LISTEN     0          128           [::]:22              [::]:*  <br><br></code></pre></td></tr></table></figure><h3 id="二、Nginx的平滑升级"><a href="#二、Nginx的平滑升级" class="headerlink" title="二、Nginx的平滑升级"></a>二、Nginx的平滑升级</h3><h4 id="2-1、平滑升级的流程"><a href="#2-1、平滑升级的流程" class="headerlink" title="2.1、平滑升级的流程"></a>2.1、平滑升级的流程</h4><p><a href=""><img src="image-20221127155647389.png" alt="image-20221127155647389"></a></p><p>①将旧Nginx二进制文件换成新Nginx程序文件（注意先备份) </p><p>②向master进程发送USR2信号启动新nginx进程</p><p>③master进程修改pid文件名加上后缀.oldbin,成为nginx.pid.oldbin</p><p>④master进程用新Nginx文件启动新master进程及worker子进程成为旧master的子进程,系统中将有新旧两个Nginx主进程和对应的worker子进程并存</p><p>当前新的请求仍然由旧Nginx的worker进程进行处理,将新生成的master进程的PID存放至新生成的pid文件nginx.pid</p><p>⑤向旧的Nginx服务进程发送WINCH信号，使旧的Nginx worker进程平滑停止</p><p>⑥向旧master进程发送QUIT信号，关闭旧master，并删除Nginx.pid.oldbin文件</p><p>⑦如果发现升级有问题,可以回滚∶向旧master发送HUP，向新master发送QUIT</p><h4 id="2-2、将旧Nginx二进制文件换成新Nginx程序文件"><a href="#2-2、将旧Nginx二进制文件换成新Nginx程序文件" class="headerlink" title="2.2、将旧Nginx二进制文件换成新Nginx程序文件"></a>2.2、将旧Nginx二进制文件换成新Nginx程序文件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#升级前首先需要将原有的复制保存</span><br>[root@Rocky ~]<span class="hljs-comment">#cp /apps/nginx/sbin/nginx   /opt/         #将旧版本复制到opt目录下</span><br><br>[root@Rocky ~]<span class="hljs-comment">#wget https://nginx.org/download/nginx-1.23.2.tar.gz   #下载新版本</span><br>[root@Rocky ~]<span class="hljs-comment">#tar xf nginx-1.23.2.tar.gz                            #解压缩</span><br>[root@Rocky ~]<span class="hljs-comment">#ls</span><br>anaconda-ks.cfg  nginx-1.23.2  nginx-1.23.2.tar.gz<br>[root@Rocky ~]<span class="hljs-comment">#cd nginx-1.23.2/</span><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#nginx -V                       #查看已安装的Nginx的配置</span><br>nginx version: nginx/1.22.1<br>built by gcc 8.5.0 20210514 (Red Hat 8.5.0-10) (GCC) <br>built with OpenSSL 1.1.1k  FIPS 25 Mar 2021<br>TLS SNI support enabled<br>configure arguments: --prefix=/apps/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module --with-stream_realip_module<br><span class="hljs-comment">#configure arguments后面是以前编译时的参数。现在编译使用一样的参数</span><br><br><span class="hljs-comment">#开始编译新版本</span><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#./configure --prefix=/apps/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module --with-stream_realip_module</span><br><span class="hljs-comment">#如果想添加其他配置，也可以添加进去</span><br><br><span class="hljs-comment">#只要make无需要make install</span><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#make -j 2</span><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#ls               #编译完成后，多了objs文件，里面有新版的nginx</span><br>auto  CHANGES  CHANGES.ru  conf  configure  contrib  html  LICENSE  Makefile  man  objs  README  src<br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#objs/nginx -V</span><br>nginx version: nginx/1.23.2<br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#ll objs/nginx  /apps/nginx/sbin/nginx</span><br>-rwxr-xr-x 1 root root 7587600 Nov 27 16:56 /apps/nginx/sbin/nginx<br>-rwxr-xr-x 1 root root 7630304 Nov 27 17:11 objs/nginx<br><br><span class="hljs-comment">#为了便于观察用其他机器下载Nginx的文件</span><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#dd if=/dev/zero of=/apps/nginx/html/fi.img bs=1M count=100</span><br><span class="hljs-comment">#先在Nginx里创建一个100M文件</span><br>[root@centos ~]<span class="hljs-comment">#wget --limit-rate=1024 http://10.0.0.185/fi.img</span><br>[root@centos ~]<span class="hljs-comment">#curl -I 10.0.0.185</span><br>HTTP/1.1 200 OK<br>Server: nginx/1.22.1<br><br><span class="hljs-comment">#将旧版Nginx替换为新版Nginx</span><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#cp -f objs/nginx /apps/nginx/sbin/</span><br><span class="hljs-built_in">cp</span>: overwrite <span class="hljs-string">&#x27;/apps/nginx/sbin/nginx&#x27;</span>? y<br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#ll /apps/nginx/sbin/nginx</span><br>-rwxr-xr-x 1 nginx nginx 7630280 Nov 27 16:21 /apps/nginx/sbin/nginx<br>[root@centos ~]<span class="hljs-comment">#curl -I 10.0.0.185            #替换之后仍是老版本</span><br>HTTP/1.1 200 OK<br>Server: nginx/1.22.1<br><br><span class="hljs-comment">#注意此时只是把磁盘文件里的Nginx替换了，内存里的仍旧是旧版Nginx</span><br><span class="hljs-comment">#下一步首先需要检测新版Nginx和配置文件是否兼容</span><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#/apps/nginx/sbin/nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br><span class="hljs-comment">#显示successful，表示语法兼容</span><br><br></code></pre></td></tr></table></figure><h4 id="2-3、向master进程发送USR2信号启动新nginx进程"><a href="#2-3、向master进程发送USR2信号启动新nginx进程" class="headerlink" title="2.3、向master进程发送USR2信号启动新nginx进程"></a>2.3、向master进程发送USR2信号启动新nginx进程</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#发送信号前，只有1个work子进程</span><br>[root@Rocky ~]<span class="hljs-comment">#ps auxf | grep nginx</span><br>root   33042  0.0  0.0  42584   852 ?   Ss  16:31   0:00 nginx: master process nginx<br>nginx  33043  0.0  0.2  74692  4932 ?   S   16:31   0:00  \_ nginx: worker process<br><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#kill -USR2 `cat /apps/nginx/run/nginx.pid`</span><br><span class="hljs-comment">#其中USR2可以写成12，cat /apps/nginx/run/nginx.pid可以直接写成进程编号</span><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#kill -l</span><br> 1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP<br> 6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL10) SIGUSR1<br>11) SIGSEGV12) SIGUSR213) SIGPIPE14) SIGALRM15) SIGTERM<br>16) SIGSTKFLT17) SIGCHLD18) SIGCONT19) SIGSTOP20) SIGTSTP<br>21) SIGTTIN22) SIGTTOU23) SIGURG24) SIGXCPU25) SIGXFSZ<br>26) SIGVTALRM27) SIGPROF28) SIGWINCH29) SIGIO30) SIGPWR<br>31) SIGSYS34) SIGRTMIN35) SIGRTMIN+136) SIGRTMIN+237) SIGRTMIN+3<br>38) SIGRTMIN+439) SIGRTMIN+540) SIGRTMIN+641) SIGRTMIN+742) SIGRTMIN+8<br>43) SIGRTMIN+944) SIGRTMIN+1045) SIGRTMIN+1146) SIGRTMIN+1247) SIGRTMIN+13<br>48) SIGRTMIN+1449) SIGRTMIN+1550) SIGRTMAX-1451) SIGRTMAX-1352) SIGRTMAX-12<br>53) SIGRTMAX-1154) SIGRTMAX-1055) SIGRTMAX-956) SIGRTMAX-857) SIGRTMAX-7<br>58) SIGRTMAX-659) SIGRTMAX-560) SIGRTMAX-461) SIGRTMAX-362) SIGRTMAX-2<br>63) SIGRTMAX-1<br>[root@Rocky ~]<span class="hljs-comment">#ps auxf | grep nginx</span><br>root   33042  0.0  0.0  42584   852 ?   Ss  16:31   0:00 nginx: master process nginx<br>nginx  33043  0.0  0.2  74692  4932 ?   S   16:31   0:00  \_ nginx: worker process<br>root   33023  0.0  0.0  42584   852 ?   Ss  16:31   0:00 \_nginx: master process nginx<br>nginx  33024  0.0  0.2  74692  4932 ?   S   16:31   0:00      \_ nginx: worker process<br><br><span class="hljs-comment">#此时处于新旧并存，旧的还在工作</span><br></code></pre></td></tr></table></figure><h4 id="2-4、向旧的Nginx服务进程发送WINCH信号，使旧的Nginx-worker进程平滑停止"><a href="#2-4、向旧的Nginx服务进程发送WINCH信号，使旧的Nginx-worker进程平滑停止" class="headerlink" title="2.4、向旧的Nginx服务进程发送WINCH信号，使旧的Nginx worker进程平滑停止"></a>2.4、向旧的Nginx服务进程发送WINCH信号，使旧的Nginx worker进程平滑停止</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#先关闭旧nginx的worker进程,而不关闭nginx主进程方便回滚</span><br><span class="hljs-comment">#向原Nginx主进程发送WINCH信号，它会逐步关闭旗下的工作进程（主进程不退出），这时所有请求都会由新版Nginx处理</span><br><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#kill -WINCH `cat /apps/nginx/run/nginx.pid.oldbin`</span><br>[root@Rocky ~]<span class="hljs-comment">#ps auxf | grep nginx</span><br>root   33042  0.0  0.0  42584   852 ?   Ss  16:31   0:00 nginx: master process nginx<br>nginx  33043  0.0  0.2  74692  4932 ?   S   16:31   0:00  \_ nginx: worker process is shutting down<br>root   33023  0.0  0.0  42584   852 ?   Ss  16:31   0:00 \_nginx: master process nginx<br>nginx  33024  0.0  0.2  74692  4932 ?   S   16:31   0:00      \_ nginx: worker process<br><br>[root@centos ~]<span class="hljs-comment">#curl -I 10.0.0.185</span><br>HTTP/1.1 200 OK<br>Server: nginx/1.23.2<br><span class="hljs-comment">#此时旧版的已经不工作了，新版开始工作了。此时仍是新旧共存</span><br></code></pre></td></tr></table></figure><h4 id="2-5、此时新旧共存，测试一段时间新版本是否正常运行"><a href="#2-5、此时新旧共存，测试一段时间新版本是否正常运行" class="headerlink" title="2.5、此时新旧共存，测试一段时间新版本是否正常运行"></a>2.5、此时新旧共存，测试一段时间新版本是否正常运行</h4><h5 id="2-5-1、正常运行"><a href="#2-5-1、正常运行" class="headerlink" title="2.5.1、正常运行"></a>2.5.1、正常运行</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky nginx-1.23.2]<span class="hljs-comment">#kill -QUIT `cat /apps/nginx/logs/nginx.pid.oldbin`</span><br><span class="hljs-comment">#QUIT也可以写成3</span><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#nginx -V</span><br>nginx version: nginx/1.23.2<br></code></pre></td></tr></table></figure><h5 id="2-5-2、不能正常运行"><a href="#2-5-2、不能正常运行" class="headerlink" title="2.5.2、不能正常运行"></a>2.5.2、不能正常运行</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#回滚</span><br><span class="hljs-comment">#如果升级的版本发现问题需要回滚,可以发送HUP信号,重新拉起旧版本的worker</span><br><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#kill -HUP `cat /apps/nginx/logs/nginx.pid.oldbin`</span><br><span class="hljs-comment">#此时又新生成1个work进程</span><br>[root@centos ~]<span class="hljs-comment">#curl -I 10.0.0.185</span><br>HTTP/1.1 200 OK<br>Server: nginx/1.22.1<br><span class="hljs-comment">#最后关闭新版的master </span><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#kill -QUIT `cat /apps/nginx/logs/nginx.pid`</span><br>[root@Rocky nginx-1.23.2]<span class="hljs-comment">#cp -f /opt/nginx  /apps/nginx/sbin/  #把旧版本在替换回来 </span><br></code></pre></td></tr></table></figure><h3 id="三、多虚拟主机"><a href="#三、多虚拟主机" class="headerlink" title="三、多虚拟主机"></a>三、多虚拟主机</h3><p>基于不同的IP、不同的端口以及不用得域名实现不同的虚拟主机，依赖于核心模块</p><p>ngx_http_core_module实现。</p><h4 id="3-1、新建一个PC-web站点"><a href="#3-1、新建一个PC-web站点" class="headerlink" title="3.1、新建一个PC web站点"></a>3.1、新建一个PC web站点</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#mkdir -p /data/nginx/html/pc  #创建页面存放路径</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /data/nginx/html/pc/index.html</span><br>&lt;h1&gt; www.magedu.org &lt;/h1&gt;<br>:wq<br><br><span class="hljs-comment">#下一步设置配置文件，文件目录/apps/nginx/conf/nginx.conf。但是为了后期便于管理，可以自己再创建子目录/apps/nginx/conf.d/，在这个目录下单独创建pc站点</span><br>[root@Rocky ~]<span class="hljs-comment">#mkdir /apps/nginx/conf.d</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /apps/nginx/conf/nginx.conf</span><br>include /apps/nginx/conf.d/*.conf;   <span class="hljs-comment">#将此行添加在倒数第二行，即是放在http里面，注意不要放在最前面,会导致前面的命令无法生效</span><br>[root@Rocky ~]<span class="hljs-comment">#cd /apps/nginx/conf.d</span><br>[root@Rocky conf.d]<span class="hljs-comment">#vim pc.conf</span><br>server &#123;<br>   listen 80;<br>   server_name www.magedu.org;<br>   location / &#123;<br>   root /data/nginx/html/pc;<br>   &#125;<br>&#125;<br>:wq<br><br><span class="hljs-comment">#注意，也可以写成这种形式</span><br>server &#123;<br>   listen 80;<br>   server_name www.magedu.org;<br>   root /data/nginx/html/pc;<br>&#125;<br><br>[root@Rocky conf.d]<span class="hljs-comment">#nginx -s reload</span><br><br><span class="hljs-comment">#需要搭建DNS，以前有搭建的DNS服务器（10.0.0.128）</span><br>[root@DNS ~]<span class="hljs-comment">#vim /var/named/magedu.org.zone</span><br><span class="hljs-variable">$TTL</span> 1D<br>@         IN    SOA   master  admin.magedu.org ( 6  1D  10M  1D  6H  )<br>                NS    master<br>                NS    slave1<br>master          A     10.0.0.128<br>slave1          A     10.0.0.184<br>www             A     10.0.0.184<br>:wq<br>[root@DNS ~]<span class="hljs-comment">#rndc reload                    #重新加载</span><br>server reload successful<br><br><span class="hljs-comment">#用客户端访问，需先将DNS指向10.0.0.128</span><br>[root@client ~]<span class="hljs-comment">#vim  /etc/sysconfig/network-scripts/ifcfg-eth0</span><br>DNS1=10.0.0.128<br>:wq<br>[root@client ~]<span class="hljs-comment">#nmcli connection reload</span><br>[root@client ~]<span class="hljs-comment">#nmcli connection up eth0</span><br>[root@client ~]<span class="hljs-comment">#curl www.magedu.org</span><br>&lt;h1&gt; www.magedu.org &lt;/h1&gt;<br></code></pre></td></tr></table></figure><h4 id="3-2、新建一个Mobile-web站点"><a href="#3-2、新建一个Mobile-web站点" class="headerlink" title="3.2、新建一个Mobile web站点"></a>3.2、新建一个Mobile web站点</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#mkdir -p /data/nginx/html/mobile  #创建页面存放路径</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /data/nginx/html/mobile/index.html</span><br>&lt;h1&gt; m.magedu.org &lt;/h1&gt;<br>:wq<br>[root@Rocky ~]<span class="hljs-comment">#mkdir /apps/nginx/conf.d</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /apps/nginx/conf/nginx.conf</span><br>include /apps/nginx/conf.d/*.conf;   <span class="hljs-comment">#将此行添加在倒数第二行，即是放在http里面，注意不要放在最前面,会导致前面的命令无法生效</span><br>[root@Rocky ~]<span class="hljs-comment">#cd /apps/nginx/conf.d</span><br>[root@Rocky conf.d]<span class="hljs-comment">#vim mobile.conf</span><br>server &#123;<br>   listen 80;<br>   server_name m.magedu.org;<br>   location / &#123;<br>   root /data/nginx/html/pc;<br>   &#125;<br>&#125;<br>:wq<br>[root@Rocky conf.d]<span class="hljs-comment">#nginx -s reload</span><br><br><span class="hljs-comment">#需要搭建DNS，以前有搭建的DNS服务器（10.0.0.128）</span><br>[root@DNS ~]<span class="hljs-comment">#vim /var/named/magedu.org.zone</span><br><span class="hljs-variable">$TTL</span> 1D<br>@         IN    SOA   master  admin.magedu.org ( 6  1D  10M  1D  6H  )<br>                NS    master<br>                NS    slave1<br>master          A     10.0.0.128<br>slave1          A     10.0.0.184<br>m               A     10.0.0.184<br>:wq<br>[root@DNS ~]<span class="hljs-comment">#rndc reload                    #重新加载</span><br>server reload successful<br><br><span class="hljs-comment">#用客户端访问，需先将DNS指向10.0.0.128</span><br>[root@client ~]<span class="hljs-comment">#vim  /etc/sysconfig/network-scripts/ifcfg-eth0</span><br>DNS1=10.0.0.128<br>:wq<br>[root@client ~]<span class="hljs-comment">#nmcli connection reload</span><br>[root@client ~]<span class="hljs-comment">#nmcli connection up eth0</span><br>[root@client ~]<span class="hljs-comment">#curl m.magedu.org</span><br>&lt;h1&gt; m.magedu.org &lt;/h1&gt;<br></code></pre></td></tr></table></figure><h4 id="3-3、还可以在pc站点下再新建一个子目录"><a href="#3-3、还可以在pc站点下再新建一个子目录" class="headerlink" title="3.3、还可以在pc站点下再新建一个子目录"></a>3.3、还可以在pc站点下再新建一个子目录</h4><h5 id="3-3-1、在-data-nginx-html-pc新建about"><a href="#3-3-1、在-data-nginx-html-pc新建about" class="headerlink" title="3.3.1、在/data/nginx/html/pc新建about"></a>3.3.1、在/data/nginx/html/pc新建about</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#cd /data/nginx/html/pc</span><br>[root@Rocky pc]<span class="hljs-comment">#mkdir about</span><br>[root@Rocky pc]<span class="hljs-comment">#vim about/index.html</span><br>&lt;h1&gt; about www.magedu.org &lt;/h1&gt;<br>:wq<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221128112020141.png" alt="image-20221128112020141"></a></p><h5 id="3-3-2、在新的目录下创建about"><a href="#3-3-2、在新的目录下创建about" class="headerlink" title="3.3.2、在新的目录下创建about"></a>3.3.2、在新的目录下创建about</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#mkdir -p /opt/pc/about</span><br>[root@Rocky ~]<span class="hljs-comment">#cd /opt/pc/about</span><br>[root@Rocky about]<span class="hljs-comment">#vim index.html</span><br>&lt;h1&gt; /opt/pc/about/index.html &lt;/h1&gt;<br>:wq<br>[root@Rocky ~]<span class="hljs-comment">#vim /apps/nginx/conf.d/pc.conf</span><br>server &#123;<br>   listen 80;<br>   server_name www.magedu.org;<br>   root /data/nginx/html/pc;<br>   location /about &#123;<br>        <span class="hljs-built_in">alias</span> /opt/pc/about;<br>   &#125;<br>&#125;<br>:wq<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221128113152131.png" alt="image-20221128113152131"></a></p><h3 id="四、区分不同网站的访问日志，及设置日志的类型"><a href="#四、区分不同网站的访问日志，及设置日志的类型" class="headerlink" title="四、区分不同网站的访问日志，及设置日志的类型"></a>四、区分不同网站的访问日志，及设置日志的类型</h3><h4 id="4-1、自定义日志类型"><a href="#4-1、自定义日志类型" class="headerlink" title="4.1、自定义日志类型"></a>4.1、自定义日志类型</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#cd /apps/nginx/logs</span><br>[root@Rocky logs]<span class="hljs-comment">#ls</span><br>access.log  error.log  nginx.pid<br><span class="hljs-comment">#此时所有网站的访问日志都在access.log里面</span><br><br><span class="hljs-comment">#访问日志的类型设置位于http里面</span><br><span class="hljs-comment">#log_format是日志类型，放于http里面；access_log是日志的路径，放于http（适用于所有网站）或者server（适用于这一个网站）里面</span><br><span class="hljs-comment">#日志格式名称随意设置</span><br>[root@Rocky logs]<span class="hljs-comment">#vim /apps/nginx/conf/nginx.conf</span><br>http &#123;<br>    .....<br>    log_format testlog <span class="hljs-string">&#x27;$remote_addr [$time_local] &quot;$request&quot; &quot;$http_referer&quot; $status &#x27;</span>;<br>    <span class="hljs-comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br>    <span class="hljs-comment">#         日志格式名称   用户地址       用户名         时间           请求</span><br>    <span class="hljs-comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br>                       <span class="hljs-comment"># 状态码   响应报文的大小      </span><br>    <span class="hljs-comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br>    <span class="hljs-comment">#                      浏览器的版本             </span><br>    <span class="hljs-comment">#access_log  logs/access.log  main;</span><br>    .....<br>&#125;<br>:wq<br><br>[root@Rocky logs]<span class="hljs-comment">#vim /apps/nginx/conf.d/pc.conf</span><br>server &#123;<br>   listen 80;<br>   server_name www.magedu.org;<br>   root /data/nginx/html/pc;<br>   access_log /apps/nginx/logs/access-www.magedu.org.log  testlog;  <span class="hljs-comment">#添加此行</span><br>   location /about &#123;<br>        <span class="hljs-built_in">alias</span> /opt/pc/about;<br>   &#125;<br>&#125;<br>:wq<br>[root@Rocky logs]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@Rocky logs]<span class="hljs-comment">#nginx -s reload</span><br>[root@Rocky logs]<span class="hljs-comment">#ls</span><br>access.log  access-www.magedu.org.log  error.log  nginx.pid<br></code></pre></td></tr></table></figure><h4 id="4-2、把日志格式设置成json格式"><a href="#4-2、把日志格式设置成json格式" class="headerlink" title="4.2、把日志格式设置成json格式"></a>4.2、把日志格式设置成json格式</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky logs]<span class="hljs-comment">#vim /apps/nginx/conf/nginx.conf</span><br>    log_format access_json <span class="hljs-string">&#x27;&#123;&quot;@timestamp&quot;:&quot;$time_iso8601&quot;,&#x27;</span><br>                           <span class="hljs-string">&#x27;&quot;host&quot;:&quot;$server_addr&quot;,&#x27;</span><br>                           <span class="hljs-string">&#x27;&quot;clientip&quot;:&quot;$remote_addr&quot;,&#x27;</span><br>                           <span class="hljs-string">&#x27;&quot;size&quot;:$body_bytes_sent,&#x27;</span><br>                           <span class="hljs-string">&#x27;&quot;responsetime&quot;:$request_time,&#x27;</span><br>                           <span class="hljs-string">&#x27;&quot;upstreamtime&quot;:&quot;$upstream_response_time&quot;,&#x27;</span><br>                           <span class="hljs-string">&#x27;&quot;upstreamhost&quot;:&quot;$upstream_addr&quot;,&#x27;</span><br>                           <span class="hljs-string">&#x27;&quot;http_host&quot;:&quot;$host&quot;,&#x27;</span><br>                           <span class="hljs-string">&#x27;&quot;uri&quot;:&quot;$uri&quot;,&#x27;</span><br>                           <span class="hljs-string">&#x27;&quot;xff&quot;:&quot;$http_x_forwarded_for&quot;,&#x27;</span><br>                           <span class="hljs-string">&#x27;&quot;referer&quot;:&quot;$http_referer&quot;,&#x27;</span><br>                           <span class="hljs-string">&#x27;&quot;tcp_xff&quot;:&quot;$proxy_protocol_addr&quot;,&#x27;</span><br>                           <span class="hljs-string">&#x27;&quot;http_user_agent&quot;:&quot;$http_user_agent&quot;,&#x27;</span><br>                           <span class="hljs-string">&#x27;&quot;status&quot;:&quot;$status&quot;&#125;&#x27;</span>;<br>:wq<br>[root@Rocky logs]<span class="hljs-comment">#vim /apps/nginx/conf.d/pc.conf</span><br>server &#123;<br>   listen 80;<br>   server_name www.magedu.org;<br>   root /data/nginx/html/pc;<br>   access_log /apps/nginx/logs/access-json-www.magedu.org.log access_json;  <span class="hljs-comment">#添加此行</span><br>   location /about &#123;<br>        <span class="hljs-built_in">alias</span> /opt/pc/about;<br>   &#125;<br>&#125;<br>:wq<br>[root@Rocky logs]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@Rocky logs]<span class="hljs-comment">#nginx -s reload</span><br>[root@Rocky logs]<span class="hljs-comment">#ls</span><br>access-json-www.magedu.org.log  access.log  access-www.magedu.org.log  error.log  nginx.pid<br><br><span class="hljs-comment">#现在可以观察</span><br>[root@client ~]<span class="hljs-comment">#curl www.magedu.org</span><br>&lt;h1&gt; www.magedu.org &lt;/h1&gt;<br>[root@Rocky logs]<span class="hljs-comment">#tail -f /apps/nginx/logs/access-json-www.magedu.org.log </span><br>&#123;<span class="hljs-string">&quot;@timestamp&quot;</span>:<span class="hljs-string">&quot;2022-11-28T13:28:46+08:00&quot;</span>,<span class="hljs-string">&quot;host&quot;</span>:<span class="hljs-string">&quot;10.0.0.184&quot;</span>,<span class="hljs-string">&quot;clientip&quot;</span>:<span class="hljs-string">&quot;10.0.0.185&quot;</span>,<span class="hljs-string">&quot;size&quot;</span>:26,<span class="hljs-string">&quot;responsetime&quot;</span>:0.000,<span class="hljs-string">&quot;upstreamtime&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;upstreamhost&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;http_host&quot;</span>:<span class="hljs-string">&quot;www.magedu.org&quot;</span>,<span class="hljs-string">&quot;uri&quot;</span>:<span class="hljs-string">&quot;/index.html&quot;</span>,<span class="hljs-string">&quot;xff&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;referer&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;tcp_xff&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;http_user_agent&quot;</span>:<span class="hljs-string">&quot;curl/7.61.1&quot;</span>,<span class="hljs-string">&quot;status&quot;</span>:<span class="hljs-string">&quot;200&quot;</span>&#125;<br><br><span class="hljs-comment">#此种形式不方便看，可以使用工具jq</span><br>[root@Rocky logs]<span class="hljs-comment">#yum -y install jq</span><br>[root@Rocky logs]<span class="hljs-comment">#cat  /apps/nginx/logs/access-json-www.magedu.org.log |jq</span><br>&#123;<br>  <span class="hljs-string">&quot;@timestamp&quot;</span>: <span class="hljs-string">&quot;2022-11-28T13:28:46+08:00&quot;</span>,<br>  <span class="hljs-string">&quot;host&quot;</span>: <span class="hljs-string">&quot;10.0.0.184&quot;</span>,<br>  <span class="hljs-string">&quot;clientip&quot;</span>: <span class="hljs-string">&quot;10.0.0.185&quot;</span>,<br>  <span class="hljs-string">&quot;size&quot;</span>: 26,<br>  <span class="hljs-string">&quot;responsetime&quot;</span>: 0.000,<br>  <span class="hljs-string">&quot;upstreamtime&quot;</span>: <span class="hljs-string">&quot;-&quot;</span>,<br>  <span class="hljs-string">&quot;upstreamhost&quot;</span>: <span class="hljs-string">&quot;-&quot;</span>,<br>  <span class="hljs-string">&quot;http_host&quot;</span>: <span class="hljs-string">&quot;www.magedu.org&quot;</span>,<br>  <span class="hljs-string">&quot;uri&quot;</span>: <span class="hljs-string">&quot;/index.html&quot;</span>,<br>  <span class="hljs-string">&quot;xff&quot;</span>: <span class="hljs-string">&quot;-&quot;</span>,<br>  <span class="hljs-string">&quot;referer&quot;</span>: <span class="hljs-string">&quot;-&quot;</span>,<br>  <span class="hljs-string">&quot;tcp_xff&quot;</span>: <span class="hljs-string">&quot;-&quot;</span>,<br>  <span class="hljs-string">&quot;http_user_agent&quot;</span>: <span class="hljs-string">&quot;curl/7.61.1&quot;</span>,<br>  <span class="hljs-string">&quot;status&quot;</span>: <span class="hljs-string">&quot;200&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="五、开启流量监控"><a href="#五、开启流量监控" class="headerlink" title="五、开启流量监控"></a>五、开启流量监控</h3><h4 id="5-1、开启Nginx的状态页"><a href="#5-1、开启Nginx的状态页" class="headerlink" title="5.1、开启Nginx的状态页"></a>5.1、开启Nginx的状态页</h4><p>基于nginx 模块 ngx_http_stub_status_module 实现，在编译安装nginx的时候需要添加编译参数 –with-http_stub_status_module，否则配置完成之后监测会是提示语法错误</p><p><strong>注意</strong>: 状态页显示的是整个服务器的状态,而非虚拟主机的状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#先确认是否安装 ngx_http_stub_status_module模块，如果没有需要添加</span><br>[root@Rocky ~]<span class="hljs-comment">#nginx -V</span><br>nginx version: nginx/1.20.2<br>built by gcc 8.5.0 20210514 (Red Hat 8.5.0-10) (GCC) <br>built with OpenSSL 1.1.1k  FIPS 25 Mar 2021<br>TLS SNI support enabled<br>configure arguments: --prefix=/apps/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module --with-stream_realip_module<br><span class="hljs-comment">#已有此模块</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /apps/nginx/conf.d/pc.conf</span><br>   location /nginx_status &#123;<br>        stub_status;<br>   &#125;<br>:wq<br>[root@Rocky ~]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@Rocky ~]<span class="hljs-comment">#nginx -s reload</span><br>[root@client ~]<span class="hljs-comment">#curl http://www.magedu.org/nginx_status</span><br>Active connections: 1 <br>server accepts handled requests<br> 33 33 29 <br>Reading: 0 Writing: 1 Waiting: 0<br><br><span class="hljs-comment">#Active connections： #当前处于活动状态的客户端连接数，包括连接等待空闲连接数=reading+writing+waiting</span><br>accepts：<span class="hljs-comment">#统计总值，Nginx自启动后已经接受的客户端请求连接的总数。</span><br>handled：<span class="hljs-comment">#统计总值，Nginx自启动后已经处理完成的客户端请求连接总数，通常等于accepts，除非有因</span><br>worker_connections限制等被拒绝的连接<br>requests：<span class="hljs-comment">#统计总值，Nginx自启动后客户端发来的总的请求数。</span><br>Reading：<span class="hljs-comment">#当前状态，正在读取客户端请求报文首部的连接的连接数,数值越大,说明排队现象严重,性能不足</span><br>Writing：<span class="hljs-comment">#当前状态，正在向客户端发送响应报文过程中的连接数,数值越大,说明访问量很大</span><br>Waiting：<span class="hljs-comment">#当前状态，正在等待客户端发出请求的空闲连接数，开启 keep-alive的情况下,这个值等于</span><br>active – (reading+writing)<br><br>[root@client ~]<span class="hljs-comment">#curl http://www.magedu.org/nginx_status 2&gt;/dev/null |awk &#x27;/Reading/&#123;print $2,$4,$6&#125;&#x27;</span><br>0 1 0<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221128151842453.png" alt="image-20221128151842453"></a></p><h4 id="5-2、开启Nginx账户认证功能"><a href="#5-2、开启Nginx账户认证功能" class="headerlink" title="5.2、开启Nginx账户认证功能"></a>5.2、开启Nginx账户认证功能</h4><p>由 ngx_http_auth_basic_module 模块提供此功能，此模块为默认模块</p><p>另外设置账号密码，借助于apache的工具</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#CentOS安装包：yum -y install httpd-tools</span><br><span class="hljs-comment">#Ubuntu安装包：apt -y install apache2-utils</span><br><br>[root@Rocky ~]<span class="hljs-comment">#yum -y install httpd-tools</span><br>[root@Rocky ~]<span class="hljs-comment">#rpm -ql httpd-tools</span><br>/usr/bin/ab<br>/usr/bin/htdbm<br>/usr/bin/htdigest<br>/usr/bin/htpasswd                       <span class="hljs-comment">#借助此命令创建账号密码</span><br>/usr/bin/httxt2dbm<br>/usr/bin/logresolve<br>/usr/lib/.build-id<br>/usr/lib/.build-id/83<br>/usr/lib/.build-id/83/e9641f1054bcf7ce84912e496b7d7004e541d8<br>/usr/lib/.build-id/94/c8074f3944d2d827c17b555b26ddd231ce6d40<br>/usr/lib/.build-id/b8/8f3b9720fa23977b4d7a8de7fb789e300c2bb3<br>/usr/lib/.build-id/cb<br>/usr/lib/.build-id/cb/71e4ce4ee4e05e390dc66bdd9b290b78dd595b<br>/usr/lib/.build-id/ec<br>/usr/lib/.build-id/ec/f49ee37342186615ecf97b8224c3f74a0b2252<br>/usr/lib/.build-id/fb<br>/usr/lib/.build-id/fb/cadf8908e128a1bfc4253b351fc06595960b37<br>/usr/share/doc/httpd-tools<br>/usr/share/doc/httpd-tools/LICENSE<br>/usr/share/doc/httpd-tools/NOTICE<br>/usr/share/man/man1/ab.1.gz<br>/usr/share/man/man1/htdbm.1.gz<br>/usr/share/man/man1/htdigest.1.gz<br>/usr/share/man/man1/htpasswd.1.gz<br>/usr/share/man/man1/httxt2dbm.1.gz<br>/usr/share/man/man1/logresolve.1.gz<br>[root@Rocky ~]<span class="hljs-comment">#htpasswd -help         #查看用法</span><br>htpasswd: illegal option -- h<br>Usage:<br>htpasswd [-cimB25dpsDv] [-C cost] [-r rounds] passwordfile username<br>htpasswd -b[cmB25dpsDv] [-C cost] [-r rounds] passwordfile username password<br><br>htpasswd -n[imB25dps] [-C cost] [-r rounds] username<br>htpasswd -nb[mB25dps] [-C cost] [-r rounds] username password<br> -c  Create a new file.<br> -n  Don<span class="hljs-string">&#x27;t update file; display results on stdout.</span><br><span class="hljs-string"> -b  Use the password from the command line rather than prompting for it.</span><br><span class="hljs-string">[root@Rocky ~]#htpasswd -bc /apps/nginx/conf.d/.nginx-user  zhang  123456</span><br><span class="hljs-string">Adding password for user zhang</span><br><span class="hljs-string">#                                存放路径                     账号    密码</span><br><span class="hljs-string">[root@Rocky ~]#cat /apps/nginx/conf.d/.nginx-user </span><br><span class="hljs-string">zhang:$apr1$xstp1TOk$IRjBaDIckZXRt3hVdQgBW0</span><br><span class="hljs-string">#创建第二个账号时，命令为htpasswd -b /apps/nginx/conf.d/.nginx-user  账号  密码。如果+c是替换旧账号，不+c是增加新账号</span><br><span class="hljs-string"></span><br><span class="hljs-string">#进行安全加固</span><br><span class="hljs-string">[root@Rocky ~]#chown nginx.nginx /apps/nginx/conf.d/.nginx-user</span><br><span class="hljs-string">[root@Rocky ~]#chmod 600 /apps/nginx/conf.d/.nginx-user</span><br><span class="hljs-string">[root@Rocky ~]#vim /apps/nginx/conf.d/pc.conf</span><br><span class="hljs-string">location /nginx_status &#123;</span><br><span class="hljs-string">        stub_status;</span><br><span class="hljs-string">        auth_basic  &quot;waring&quot;;                   #waring只是提示词，可以随意写</span><br><span class="hljs-string">        auth_basic_user_file  /apps/nginx/conf.d/.nginx-user;</span><br><span class="hljs-string">   &#125;</span><br><span class="hljs-string">:wq</span><br><span class="hljs-string">#注意auth_basic和auth_basic_user_file可以放在http（所有网站）、server（其中一个网站）、location（网站中的1个页面）</span><br><span class="hljs-string">[root@Rocky ~]#nginx -t</span><br><span class="hljs-string">nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok</span><br><span class="hljs-string">nginx: configuration file /apps/nginx/conf/nginx.conf test is successful</span><br><span class="hljs-string">[root@Rocky ~]#nginx -s reload</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221128155842696.png" alt="image-20221128155842696"></a></p><h4 id="5-3、Nginx-四层访问控制"><a href="#5-3、Nginx-四层访问控制" class="headerlink" title="5.3、Nginx 四层访问控制"></a>5.3、Nginx 四层访问控制</h4><p>访问控制基于模块ngx_http_access_module（默认模块）实现，可以通过匹配客户端源IP地址进行限制</p><p><strong>注意</strong>: 如果能在防火墙设备控制,最好就不要在nginx上配置,可以更好的节约资源</p><p>官方帮助: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">http://nginx.org/en/docs/http/ngx_http_access_module.html<br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#vim /apps/nginx/conf.d/pc.conf</span><br>  location /nginx_status &#123;<br>        stub_status;<br>        auth_basic  <span class="hljs-string">&quot;waring&quot;</span>;<br>        auth_basic_user_file  /apps/nginx/conf.d/.nginx-user;<br>        deny 10.0.0.185;              <span class="hljs-comment">#拒绝10.0.0.185访问</span><br>        allow 10.0.0.0/24;            <span class="hljs-comment">#允许10.0.0.0/24访问，另外允许与拒绝按上下顺序执行</span><br>   &#125;<br>:wq<br><span class="hljs-comment">#注意allow和deny可以放在http（所有网站）、server（其中一个网站）、location（网站中的1个页面）</span><br>[root@Rocky ~]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@Rocky ~]<span class="hljs-comment">#nginx -s reload</span><br><br><span class="hljs-comment">#10.0.0.185机器访问</span><br>[root@client ~]<span class="hljs-comment">#curl http://zhang:123456@www.magedu.org/nginx_status</span><br>&lt;html&gt;<br>&lt;<span class="hljs-built_in">head</span>&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;<br>&lt;body&gt;<br>&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;<br>&lt;hr&gt;&lt;center&gt;nginx/1.20.2&lt;/center&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br><span class="hljs-comment">#10.0.0.186机器访问</span><br>[root@Rocky ~]<span class="hljs-comment">#curl http://zhang:123456@www.magedu.org/nginx_status</span><br>Active connections: 1 <br>server accepts handled requests<br> 46 46 50 <br>Reading: 0 Writing: 1 Waiting: 0 <br></code></pre></td></tr></table></figure><h3 id="六、安装第三方echo模块实现信息显示"><a href="#六、安装第三方echo模块实现信息显示" class="headerlink" title="六、安装第三方echo模块实现信息显示"></a>六、安装第三方echo模块实现信息显示</h3><p>开源的echo模块可以用来打印信息,变量等</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">https://github.com/openresty/echo-nginx-module<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221128163638945.png" alt="image-20221128163638945"></a></p><h4 id="6-1、安装echo模块"><a href="#6-1、安装echo模块" class="headerlink" title="6.1、安装echo模块"></a>6.1、安装echo模块</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#cd /usr/local/src</span><br>[root@Rocky src]<span class="hljs-comment">#wget https://github.com/openresty/echo-nginx-module/archive/refs/tags/v0.63.tar.gz</span><br>[root@Rocky src]<span class="hljs-comment">#ls</span><br>nginx-1.20.2  nginx-1.20.2.tar.gz  nginx-module-vts-0.2.1  v0.2.1.tar.gz  v0.63.tar.gz<br>[root@Rocky src]<span class="hljs-comment">#tar xf v0.63.tar.gz </span><br>[root@Rocky src]<span class="hljs-comment">#ls</span><br>echo-nginx-module-0.63  nginx-1.20.2  nginx-1.20.2.tar.gz  nginx-module-vts-0.2.1  v0.2.1.tar.gz  v0.63.tar.gz<br>[root@Rocky nginx-1.20.2]<span class="hljs-comment">#cd nginx-1.20.2/</span><br>[root@Rocky nginx-1.20.2]<span class="hljs-comment">#./configure --prefix=/apps/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module --with-stream_realip_module --add-module=/usr/local/src/echo-nginx-module-0.63</span><br>[root@Rocky nginx-1.20.2]<span class="hljs-comment">#make -j 2 &amp;&amp; make install</span><br>[root@Rocky nginx-1.20.2]<span class="hljs-comment">#systemctl restart nginx</span><br></code></pre></td></tr></table></figure><h4 id="6-2、设置配置文件"><a href="#6-2、设置配置文件" class="headerlink" title="6.2、设置配置文件"></a>6.2、设置配置文件</h4><p>Nginx里的变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">http://nginx.org/en/docs/varindex.html<br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#vim /apps/nginx/conf.d/pc.conf</span><br>   location /echo &#123;<br>       <span class="hljs-built_in">set</span> <span class="hljs-variable">$class</span> n68;       <span class="hljs-comment">#可以自定义变量，使用在server和location</span><br>       <span class="hljs-built_in">echo</span> <span class="hljs-variable">$class</span>;          <span class="hljs-comment">#打印自定义变量</span><br>       <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;hello&quot;</span>;         <span class="hljs-comment">#可以打印字符串</span><br>       <span class="hljs-built_in">echo</span> <span class="hljs-variable">$remote_addr</span>;    <span class="hljs-comment">#可以打印变量，用户地址</span><br>       <span class="hljs-built_in">echo</span> <span class="hljs-variable">$uri</span>;            <span class="hljs-comment">#可以打印变量，访问的地址是什么</span><br>   &#125;<br>:wq<br>[root@Rocky ~]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@Rocky ~]<span class="hljs-comment">#nginx -s reload</span><br><br>[root@client ~]<span class="hljs-comment">#curl http://www.magedu.org/echo</span><br>n68<br>hello<br>10.0.0.185<br>/echo<br></code></pre></td></tr></table></figure><h3 id="七、nginx的反向代理"><a href="#七、nginx的反向代理" class="headerlink" title="七、nginx的反向代理"></a>七、nginx的反向代理</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sh">环境配置：<br>10.0.0.184  为反向代理服务器<br>10.0.0.185  为后端服务器<br><br><span class="hljs-comment">#配置反向代理服务器</span><br>[root@server conf.d]<span class="hljs-comment">#vim pc.conf</span><br>server &#123;<br>   listen 80;<br>   server_name www.magedu.org;<br>   root /data/nginx/html/pc;<br>   access_log /apps/nginx/logs/access-json-www.magedu.org.log access_json;<br>   location / &#123;<br>        proxy_pass http://10.0.0.185;        <span class="hljs-comment">#添加此项即可开启反向代理服务</span><br>   &#125;<br>&#125;<br>:wq<br>[root@server conf.d]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@server conf.d]<span class="hljs-comment">#nginx -s reload</span><br><br><span class="hljs-comment">#nginx的方向代理时，后端服务器只能看到访问地址是方向代理服务器，看不到客户端地址（反向代理服务器可以看到客户端地址）</span><br>[root@Rocky nginx]<span class="hljs-comment">#tail -f logs/access.log     #后端服务器</span><br>10.0.0.184 - - [29/Nov/2022:13:20:49 +0800] <span class="hljs-string">&quot;GET / HTTP/1.0&quot;</span> 200 607 <span class="hljs-string">&quot;-&quot;</span> <span class="hljs-string">&quot;curl/7.61.1&quot;</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221129131337835.png" alt="image-20221129131337835"></a></p><h3 id="八、nginx的负载均衡"><a href="#八、nginx的负载均衡" class="headerlink" title="八、nginx的负载均衡"></a>八、nginx的负载均衡</h3><p>Nginx 可以基于ngx_http_upstream_module模块提供服务器分组转发、权重分配、状态监测、调度算法等高级功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">https://nginx.org/en/docs/http/ngx_http_upstream_module.html<br></code></pre></td></tr></table></figure><h4 id="8-1、http-upstream配置参数"><a href="#8-1、http-upstream配置参数" class="headerlink" title="8.1、http upstream配置参数"></a>8.1、http upstream配置参数</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#自定义一组服务器，配置在http块内</span><br>upstream name &#123; <br> server .....<br> ......<br>&#125;<br><br><span class="hljs-comment">#示例</span><br>upstream backend &#123;<br>   server backend1.example.com weight=5;<br>   server 127.0.0.1:8080  max_fails=3 fail_timeout=30s;<br>   server unix:/tmp/backend3;<br>   server backup1.example.com backup;<br>&#125;<br><br>server address [parameters];<br><span class="hljs-comment">#配置一个后端web服务器，配置在upstream内，至少要有一个server服务器配置。</span><br><span class="hljs-comment">#server支持的parameters如下：</span><br>weight=number <span class="hljs-comment">#设置权重，默认为1,实现类似于LVS中的WRR,WLC等</span><br>max_conns=number  <span class="hljs-comment">#给当前后端server设置最大活动链接数，默认为0表示没有限制</span><br>max_fails=number  <span class="hljs-comment">#后端服务器的下线条件,当客户端访问时,对本次调度选中的后端服务器连续进行检测</span><br>多少次,如果都失败就标记为不可用,默认为1次,当客户端访问时,才会利用TCP触发对探测后端服务器健康性<br>检查,而非周期性的探测<br>fail_timeout=time <span class="hljs-comment">#后端服务器的上线条件,对已经检测到处于不可用的后端服务器,每隔此时间间隔再次</span><br>进行检测是否恢复可用，如果发现可用,则将后端服务器参与调度,默认为10秒<br>backup  <span class="hljs-comment">#设置为备份服务器，当所有后端服务器不可用时,才会启用此备用服务器</span><br>down    <span class="hljs-comment">#标记为down状态,可以平滑下线后端服务器,新用户不再调度到此主机,旧用户不受影响</span><br></code></pre></td></tr></table></figure><h4 id="8-2、负载均衡参数设置"><a href="#8-2、负载均衡参数设置" class="headerlink" title="8.2、负载均衡参数设置"></a>8.2、负载均衡参数设置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@proxy ~]<span class="hljs-comment">#cd /apps/nginx/conf.d</span><br>[root@proxy conf.d]<span class="hljs-comment">#vim pc.conf</span><br>upstream webserver &#123;                 <span class="hljs-comment">#添加upstream,后端服务器有下面两台</span><br>      server 10.0.0.185;<br>      server 10.0.0.186;<br>&#125;<br>server &#123;<br>   listen 80;<br>   server_name www.magedu.org;<br>   access_log /apps/nginx/logs/access-json-www.magedu.org.log access_json;<br>   root /data/nginx/html/pc;<br>   location / &#123;<br>       proxy_pass http://webserver;    <span class="hljs-comment">#反向代理功能，代理的地址webserver与负载均衡功能upstream设置的名字一致</span><br>   &#125;<br>&#125;<br>:wq<br>[root@proxy conf.d]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@proxy conf.d]<span class="hljs-comment">#nginx -s reload</span><br><span class="hljs-comment">#注意此时负载均衡采用的轮询算法（即默认算法）</span><br></code></pre></td></tr></table></figure><h3 id="九、实现nginx四层负载均衡"><a href="#九、实现nginx四层负载均衡" class="headerlink" title="九、实现nginx四层负载均衡"></a>九、实现nginx四层负载均衡</h3><p>Nginx在1.9.0版本开始支持tcp模式的负载均衡，在1.9.13版本开始支持udp协议的负载，udp主要用于DNS的域名解析，其配置方式和指令和http 代理类似，其基于ngx_stream_proxy_module模块实现tcp负载，另外基于模块ngx_stream_upstream_module实现后端服务器分组转发、权重分配、状态监测、调度算法等高级功能。</p><p><strong>如果编译安装,需要指定 –with-stream 选项才能支持ngx_stream_proxy_module模块</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">官方文档：<br>https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html<br>http://nginx.org/en/docs/stream/ngx_stream_upstream_module.html<br></code></pre></td></tr></table></figure><h4 id="9-1、tcp负载均衡配置参数"><a href="#9-1、tcp负载均衡配置参数" class="headerlink" title="9.1、tcp负载均衡配置参数"></a>9.1、tcp负载均衡配置参数</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#stream语句块放在main里面，与http语句块同级</span><br>stream &#123;<br>   upstream backend &#123; <span class="hljs-comment">#定义后端服务器</span><br>       <span class="hljs-built_in">hash</span> <span class="hljs-variable">$remote_addr</span> consistent; <span class="hljs-comment">#定义调度算法</span><br>       server backend1.example.com:12345 weight=5; <span class="hljs-comment">#定义具体server</span><br>       server 127.0.0.1:12345      max_fails=3 fail_timeout=30s;<br>       server unix:/tmp/backend3;<br>   &#125;<br>   upstream dns &#123;  <span class="hljs-comment">#定义后端服务器</span><br>       server 10.0.0.1:53535;  <span class="hljs-comment">#定义具体server</span><br>       server dns.example.com:53;<br>   &#125;<br>   server &#123; <span class="hljs-comment">#定义server</span><br>       listen 12345; <span class="hljs-comment">#监听IP:PORT</span><br>       proxy_connect_timeout 1s; <span class="hljs-comment">#连接超时时间</span><br>       proxy_timeout 3s; <span class="hljs-comment">#转发超时时间</span><br>       proxy_pass backend; <span class="hljs-comment">#转发到具体服务器组</span><br>   &#125;<br>   server &#123;<br>       listen 127.0.0.1:53 udp reuseport;<br>       proxy_timeout 20s;<br>       proxy_pass dns;<br>   &#125;<br>   server &#123;<br>       listen [::1]:12345;<br>       proxy_pass unix:/tmp/stream.socket;<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="9-2、实现负载均衡（redis和mysql类似）"><a href="#9-2、实现负载均衡（redis和mysql类似）" class="headerlink" title="9.2、实现负载均衡（redis和mysql类似）"></a>9.2、实现负载均衡（redis和mysql类似）</h4><p><a href=""><img src="image-20221130102253614.png" alt="image-20221130102253614"></a></p><h5 id="9-2-1、后端服务器安装redis"><a href="#9-2-1、后端服务器安装redis" class="headerlink" title="9.2.1、后端服务器安装redis"></a>9.2.1、后端服务器安装redis</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#安装两台redis服务器</span><br>[root@centos8 ~]<span class="hljs-comment"># yum -y install redis </span><br>[root@centos8 ~]<span class="hljs-comment"># sed -i &#x27;/^bind /c bind 0.0.0.0&#x27; /etc/redis.conf</span><br>[root@centos8 ~]<span class="hljs-comment"># systemctl enable --now redis</span><br>[root@centos8 ~]<span class="hljs-comment"># ss -tnl | grep 6379</span><br>LISTEN     0      128         *:6379                     *:*<br></code></pre></td></tr></table></figure><h5 id="9-2-2、反向代理nginx配置"><a href="#9-2-2、反向代理nginx配置" class="headerlink" title="9.2.2、反向代理nginx配置"></a>9.2.2、反向代理nginx配置</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@centos8 ~]<span class="hljs-comment"># vim /apps/nginx/conf/nginx.conf</span><br>include /apps/nginx/conf/tcp/tcp.conf; <span class="hljs-comment">#注意此处的include与http模块平级</span><br>[root@centos8 ~]<span class="hljs-comment"># mkdir /apps/nginx/conf/tcp</span><br>[root@centos8 ~]<span class="hljs-comment"># cat /apps/nginx/conf/tcp/tcp.conf   #也可直接在总配置文件里编辑</span><br>stream &#123;<br> upstream redis_server &#123;<br>    <span class="hljs-comment">#hash $remote_addr consistent;</span><br>   server 10.0.0.18:6379 max_fails=3 fail_timeout=30s;<br>   server 10.0.0.28:6379 max_fails=3 fail_timeout=30s;<br> &#125;<br> server &#123;<br>   listen 10.0.0.8:6379;             <span class="hljs-comment">#可直接写listen 6379;</span><br>   proxy_connect_timeout 3s;<br>   proxy_timeout 3s;<br>   proxy_pass redis_server;<br> &#125;<br>&#125;<br><span class="hljs-comment">#重启nginx并访问测试</span><br>[root@centos8 ~]<span class="hljs-comment"># systemctl restart nginx</span><br>[root@centos8 ~]<span class="hljs-comment"># ss -tnl | grep 6379</span><br>LISTEN     0      128    10.0.0.8:6379                     *:*  <br><span class="hljs-comment">#测试通过nginx 负载连接redis：</span><br>[root@centos8 ~]<span class="hljs-comment">#redis-cli -h 10.0.0.8 set name wang </span><br>OK<br>[root@centos8 ~]<span class="hljs-comment">#redis-cli -h 10.0.0.8 get name</span><br>(nil)<br>[root@centos8 ~]<span class="hljs-comment">#redis-cli -h 10.0.0.8 get name</span><br><span class="hljs-string">&quot;wang&quot;</span><br></code></pre></td></tr></table></figure><h3 id="十、实现FastCGI（异构代理）"><a href="#十、实现FastCGI（异构代理）" class="headerlink" title="十、实现FastCGI（异构代理）"></a>十、实现FastCGI（异构代理）</h3><p><strong>前面的代理都属于同构代理</strong></p><p><a href=""><img src="image-20221130103145411.png" alt="image-20221130103145411"></a></p><p>nginx缺通过与第三方基于协议实现，即通过某种特定协议将客户端请求转发给第三方服务处理，<strong>第三方服务器会新建新的进程处理用户的请求，处理完成后返回数据给Nginx并回收进程</strong>，最后nginx在返回给客户端，那这个约定就是通用网关接口(common gateway interface，简称CGI)，CGI（协议） 是web服务器和外部应用程序之间的接口标准，是cgi程序和web服务器之间传递信息的标准化接口。</p><p>Nginx基于模块ngx_http_fastcgi_module实现通过fastcgi协议将指定的客户端请求转发至php-fpm处</p><p>理，其配置指令如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs sh">fastcgi_pass address;<br><span class="hljs-comment">#转发请求到后端服务器，address为后端的fastcgi server的地址，可用位置：location, if in location</span><br><br><span class="hljs-comment">#示例</span><br>fastcgi_pass localhost:9000;<br>fastcgi_pass unix:/tmp/fastcgi.socket;<br><br>fastcgi_index name;<br><span class="hljs-comment">#fastcgi默认的主页资源，示例：fastcgi_index index.php;</span><br><br>fastcgi_param parameter value [if_not_empty];<br><span class="hljs-comment">#设置传递给FastCGI服务器的参数值，可以是文本，变量或组合，可用于将Nginx的内置变量赋值给自定义key</span><br>fastcgi_param REMOTE_ADDR        <span class="hljs-variable">$remote_addr</span>; <span class="hljs-comment">#客户端源IP</span><br>fastcgi_param REMOTE_PORT        <span class="hljs-variable">$remote_port</span>; <span class="hljs-comment">#客户端源端口</span><br>fastcgi_param SERVER_ADDR        <span class="hljs-variable">$server_addr</span>; <span class="hljs-comment">#请求的服务器IP地址</span><br>fastcgi_param SERVER_PORT        <span class="hljs-variable">$server_port</span>; <span class="hljs-comment">#请求的服务器端口</span><br>fastcgi_param SERVER_NAME        <span class="hljs-variable">$server_name</span>; <span class="hljs-comment">#请求的server name</span><br><br>Nginx默认配置示例：<br>   location ~ \.php$ &#123;<br>     root           /scripts;<br>     fastcgi_pass   127.0.0.1:9000;<br>     fastcgi_index index.php;<br>     fastcgi_param SCRIPT_FILENAME  $document_root<span class="hljs-variable">$fastcgi_script_name</span>; <span class="hljs-comment">#默认脚</span><br>本路径<br>      <span class="hljs-comment">#fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; #此行写法不再需要上面的 root 指令</span><br>     include       fastcgi_params;    <span class="hljs-comment">#此文件默认系统已提供,存放的相对路径为prefix/conf</span><br>   &#125;<br></code></pre></td></tr></table></figure><h4 id="10-1、-FastCGI实战案例-Nginx与php不在同一个服务器"><a href="#10-1、-FastCGI实战案例-Nginx与php不在同一个服务器" class="headerlink" title="10.1、 FastCGI实战案例: Nginx与php不在同一个服务器"></a>10.1、 FastCGI实战案例: Nginx与php不在同一个服务器</h4><p>nginx会处理静态请求，但是会转发动态请求到后端指定的php-fpm服务器，因此php代码需要放在后端</p><p>的php-fpm服务器，即静态页面放在Nginx服务器上,而动态页面放在后端php-fpm服务器，通常情况</p><p>下，一般都是采用在同一个服务器</p><p><a href=""><img src="image-20221130105907996.png" alt="image-20221130105907996"></a></p><h5 id="10-1-1、php-fpm的配置文件"><a href="#10-1-1、php-fpm的配置文件" class="headerlink" title="10.1.1、php-fpm的配置文件"></a>10.1.1、php-fpm的配置文件</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@php-fpm ~]<span class="hljs-comment">#yum -y install php-fpm            #安装软件</span><br>[root@php-fpm ~]<span class="hljs-comment">#rpm -ql php-fpm                   #查看软件的配置</span><br>/etc/httpd/conf.d/php.conf<br>/etc/logrotate.d/php-fpm<br>/etc/nginx/conf.d/php-fpm.conf<br>/etc/nginx/default.d/php.conf<br>/etc/php-fpm.conf                                 <span class="hljs-comment">#主配置文件</span><br>/etc/php-fpm.d<br>/etc/php-fpm.d/www.conf                           <span class="hljs-comment">#子配置文件</span><br>/etc/systemd/system/php-fpm.service.d<br>/run/php-fpm<br>/usr/lib/.build-id<br>/usr/lib/.build-id/eb<br>/usr/lib/.build-id/eb/2f5f408539a6608c445913b3214d215b421869<br>/usr/lib/systemd/system/httpd.service.d/php-fpm.conf<br>/usr/lib/systemd/system/nginx.service.d/php-fpm.conf<br>/usr/lib/systemd/system/php-fpm.service          <span class="hljs-comment">#有service文件，可以使用system功能</span><br>/usr/sbin/php-fpm<br>/usr/share/doc/php-fpm<br>/usr/share/doc/php-fpm/php-fpm.conf.default<br>/usr/share/doc/php-fpm/www.conf.default<br>/usr/share/fpm<br>/usr/share/fpm/status.html<br>/usr/share/licenses/php-fpm<br>/usr/share/licenses/php-fpm/fpm_LICENSE<br>/usr/share/man/man8/php-fpm.8.gz<br>/var/lib/php/opcache<br>/var/lib/php/session<br>/var/lib/php/wsdlcache<br>/var/log/php-fpm<br><span class="hljs-comment">#php-fpm的监听端口是9000</span><br>[root@php-fpm ~]<span class="hljs-comment">#ss -ntl</span><br>State    Recv-Q   Send-Q     Local Address:Port    Peer Address:Port    Process     <br>LISTEN    0        128        0.0.0.0:22            0.0.0.0:*                       <br>LISTEN    0        128        0.0.0.0:80            0.0.0.0:*                       <br>LISTEN    0        128        [::]:22               [::]:*    <br>[root@php-fpm ~]<span class="hljs-comment">#systemctl enable --now php-fpm      #启动服务</span><br>[root@php-fpm ~]<span class="hljs-comment">#ps auxf | grep php-fpm          #此时可以看到php-fpm以Apache账号启动了</span><br>root        1870  0.0  0.9 166940 17744 ?        Ss   11:06   0:00 php-fpm: master process (/etc/php-fpm.conf)<br>apache      1871  0.0  0.5 183288  9896 ?        S    11:06   0:00  \_ php-fpm: pool www<br>apache      1872  0.0  0.5 183288 10208 ?        S    11:06   0:00  \_ php-fpm: pool www<br>apache      1873  0.0  0.5 183288 10208 ?        S    11:06   0:00  \_ php-fpm: pool www<br>apache      1874  0.0  0.5 183288  9824 ?        S    11:06   0:00  \_ php-fpm: pool www<br>apache      1875  0.0  0.5 183288 10208 ?        S    11:06   0:00  \_ php-fpm: pool www<br><span class="hljs-comment">#为了便于统一管理，或者后期nginx和php-fpm合为一台机器上时账号统一，需更改账号</span><br>[root@php-fpm ~]<span class="hljs-comment">#vim /etc/php-fpm.d/www.conf</span><br>; RPM: apache user chosen to provide access to the same directories as httpd<br>user = nginx                       <span class="hljs-comment">#将Apache改为nginx</span><br>; RPM: Keep a group allowed to write <span class="hljs-keyword">in</span> <span class="hljs-built_in">log</span> <span class="hljs-built_in">dir</span>.<br>group = nginx                      <span class="hljs-comment">#将Apache改为nginx</span><br>[root@php-fpm ~]<span class="hljs-comment">#systemctl restart php-fpm          #重新启动，此时账号就改为nginx了</span><br><br><span class="hljs-comment">#但此时仍没有9000端口</span><br>[root@php-fpm ~]<span class="hljs-comment">#ss -ntl</span><br>State    Recv-Q   Send-Q     Local Address:Port    Peer Address:Port    Process     <br>LISTEN    0        128        0.0.0.0:22            0.0.0.0:*                       <br>LISTEN    0        128        0.0.0.0:80            0.0.0.0:*                       <br>LISTEN    0        128        [::]:22               [::]:*<br><span class="hljs-comment">#因为此软件默认以文件的方式监听（即只能在本机访问，不能跨网络访问），跨网络访问需更改配置</span><br>[root@php-fpm ~]<span class="hljs-comment">#vim /etc/php-fpm.d/www.conf</span><br>; Note: This value is mandatory.<br>;listen = /run/php-fpm/www.sock             <span class="hljs-comment">#添加；注释此行</span><br>listen = 9000                               <span class="hljs-comment">#添加此行</span><br>[root@php-fpm ~]<span class="hljs-comment">#systemctl restart php-fpm</span><br>[root@php-fpm ~]<span class="hljs-comment">#ss -ntl</span><br>State    Recv-Q   Send-Q     Local Address:Port    Peer Address:Port    Process     <br>LISTEN    0        128        0.0.0.0:22            0.0.0.0:*                       <br>LISTEN    0        128        0.0.0.0:80            0.0.0.0:*                       <br>LISTEN    0        128        [::]:22               [::]:*<br>LISTEN    0        128        *:9000                *:*<br><span class="hljs-comment">#但配置文件默认权限是本机127.0.0.1，需更改否则跨网络9000不起作用</span><br>[root@php-fpm ~]<span class="hljs-comment">#vim /etc/php-fpm.d/www.conf</span><br>;Default Value: any                        <span class="hljs-comment">#此行默认都能访问</span><br>;listen.allowed_clients = 127.0.0.1        <span class="hljs-comment">#添加；注释此行</span><br>[root@php-fpm ~]<span class="hljs-comment">#systemctl restart php-fpm</span><br><br><span class="hljs-comment">#创建存放PHP程序的存放路径</span><br>[root@php-fpm ~]<span class="hljs-comment">#mkdir /data/php -p</span><br>[root@php-fpm ~]<span class="hljs-comment">#cd /data/php</span><br>[root@php-fpm php]<span class="hljs-comment">#vim test.php</span><br>&lt;?php<br>phpinfo();<br>?&gt;<br>:wq<br></code></pre></td></tr></table></figure><h5 id="10-1-2、反向代理nginx的配置"><a href="#10-1-2、反向代理nginx的配置" class="headerlink" title="10.1.2、反向代理nginx的配置"></a>10.1.2、反向代理nginx的配置</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@proxy conf.d]<span class="hljs-comment">#vim pc.conf</span><br>server &#123;<br>   listen 80;<br>   server_name www.magedu.org;<br>   access_log /apps/nginx/logs/access-json-www.magedu.org.log access_json;<br>   root /data/nginx/html/pc;<br>   location / &#123;<br>       proxy_pass http://webserver;<br>   &#125;<br>   location ~ \.php$ &#123;<br>       root           /data/php;           <span class="hljs-comment">#php的存放路径</span><br>       fastcgi_pass   10.0.0.185:9000;<br>       fastcgi_index  index.php;<br>       fastcgi_param  SCRIPT_FILENAME  $document_root<span class="hljs-variable">$fastcgi_script_name</span>;  <span class="hljs-comment">#$document_root表示/data/php，$fastcgi_script_name表示/data/php下的某一文件名称</span><br>       include        fastcgi_params;      <span class="hljs-comment">#系统固定设置，不变</span><br>   &#125;<br>&#125;<br>:wq<br>[root@proxy conf.d]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@proxy conf.d]<span class="hljs-comment">#nginx -s reload</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221130115618073.png" alt="image-20221130115618073"></a></p><h5 id="10-1-3、php-fpm也可以开启状态页和ping"><a href="#10-1-3、php-fpm也可以开启状态页和ping" class="headerlink" title="10.1.3、php-fpm也可以开启状态页和ping"></a>10.1.3、php-fpm也可以开启状态页和ping</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@php-fpm php]<span class="hljs-comment">#vim /etc/php-fpm.d/www.conf</span><br>; Default Value: not <span class="hljs-built_in">set</span><br>pm.status_path = /fpm_status          <span class="hljs-comment">#取消此行注释,且便于区分，将status改为fpm_status</span><br>.....<br>; Default Value: not <span class="hljs-built_in">set</span><br>ping.path = /ping                 <span class="hljs-comment">#取消此行注释</span><br>....<br>; Default Value: pong<br>ping.response = pong              <span class="hljs-comment">#取消此行注释</span><br>:wq<br>[root@php-fpm php]<span class="hljs-comment">#systemctl restart php-fpm</span><br><br>[root@proxy conf.d]<span class="hljs-comment">#vim pc.conf</span><br>server &#123;<br>   ......<br>   location ~ ^/(ping|fpm_status)$ &#123;<br>       fastcgi_pass   10.0.0.185:9000;<br>       fastcgi_param  PATH_TRANSLATED $document_root<span class="hljs-variable">$fastcgi_script_name</span>;<br>       include fastcgi_params;<br>   &#125;<br>&#125;<br>[root@proxy conf.d]<span class="hljs-comment">#nginx -s reload</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221130122042043.png" alt="image-20221130122042043"></a></p><p><a href=""><img src="image-20221130122106468.png" alt="image-20221130122106468"></a></p><h3 id="十一、项目实战-利用LNMP实现WordPress站点搭建"><a href="#十一、项目实战-利用LNMP实现WordPress站点搭建" class="headerlink" title="十一、项目实战:利用LNMP实现WordPress站点搭建"></a>十一、项目实战:利用LNMP实现WordPress站点搭建</h3><p><a href=""><img src="image-20221130141246807.png" alt="image-20221130141246807"></a></p><h4 id="10-1、LNP的配置"><a href="#10-1、LNP的配置" class="headerlink" title="10.1、LNP的配置"></a>10.1、LNP的配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#此前已安装nginx</span><br>[root@LNP ~]<span class="hljs-comment">#yum -y install php-fpm php-json php-mysqlnd</span><br><br><span class="hljs-comment">#先修改php-fpm配置文件</span><br>[root@LNP ~]<span class="hljs-comment">#rpm -ql php-fpm</span><br>/etc/httpd/conf.d/php.conf<br>/etc/logrotate.d/php-fpm<br>/etc/nginx/conf.d/php-fpm.conf<br>/etc/nginx/default.d/php.conf<br>/etc/php-fpm.conf<br>/etc/php-fpm.d<br>/etc/php-fpm.d/www.conf<br>/etc/systemd/system/php-fpm.service.d<br>/run/php-fpm<br>/usr/lib/.build-id<br>/usr/lib/.build-id/eb<br>/usr/lib/.build-id/eb/2f5f408539a6608c445913b3214d215b421869<br>/usr/lib/systemd/system/httpd.service.d/php-fpm.conf<br>/usr/lib/systemd/system/nginx.service.d/php-fpm.conf<br>/usr/lib/systemd/system/php-fpm.service<br>/usr/sbin/php-fpm<br>/usr/share/doc/php-fpm<br>/usr/share/doc/php-fpm/php-fpm.conf.default<br>/usr/share/doc/php-fpm/www.conf.default<br>/usr/share/fpm<br>/usr/share/fpm/status.html<br>/usr/share/licenses/php-fpm<br>/usr/share/licenses/php-fpm/fpm_LICENSE<br>/usr/share/man/man8/php-fpm.8.gz<br>/var/lib/php/opcache<br>/var/lib/php/session<br>/var/lib/php/wsdlcache<br>/var/log/php-fpm<br>[root@LNP ~]<span class="hljs-comment">#vim /etc/php-fpm.d/www.conf</span><br>; RPM: apache user chosen to provide access to the same directories as httpd<br>user = nginx                       <span class="hljs-comment">#将Apache改为nginx</span><br>; RPM: Keep a group allowed to write <span class="hljs-keyword">in</span> <span class="hljs-built_in">log</span> <span class="hljs-built_in">dir</span>.<br>group = nginx                      <span class="hljs-comment">#将Apache改为nginx</span><br>; listen = /run/php-fpm/www.sock   <span class="hljs-comment">#将此行注释</span><br>listen = 127.0.0.1:9000            <span class="hljs-comment">#添加此行</span><br>.....<br>; Default Value: not <span class="hljs-built_in">set</span><br>pm.status_path = /fpm_status       <span class="hljs-comment">#取消此行注释,且便于区分，将status改为fpm_status</span><br>.....<br>; Default Value: not <span class="hljs-built_in">set</span><br>ping.path = /ping                 <span class="hljs-comment">#取消此行注释</span><br>....<br>; Default Value: pong<br>ping.response = pong              <span class="hljs-comment">#取消此行注释</span><br>:wq<br>[root@LNP ~]<span class="hljs-comment">#systemctl enable --now php-fpm</span><br><br><span class="hljs-comment">#设置nginx的配置</span><br>[root@LNP ~]<span class="hljs-comment">#vim /apps/nginx/conf.d/pc.conf</span><br>server &#123;<br>   listen 80;<br>   server_name www.magedu.org;<br>   access_log /apps/nginx/logs/access-json-www.magedu.org.log access_json;<br>   root /data/nginx/html/pc;<br>   location / &#123;<br>       <span class="hljs-comment">#root /data/nginx/html/pc;</span><br>       proxy_pass http://webserver;<br>   &#125;<br>   location ~ \.php$ &#123;<br>       root           /data/nginx/html/pc;<br>       fastcgi_pass   127.0.0.1:9000;<br>       fastcgi_index  index.php;<br>       fastcgi_param  SCRIPT_FILENAME  $document_root<span class="hljs-variable">$fastcgi_script_name</span>;<br>       include        fastcgi_params;<br>   &#125;<br>   location ~ ^/(ping|fpm_status)$ &#123;<br>       fastcgi_pass   127.0.0.1:9000;<br>       fastcgi_param  PATH_TRANSLATED $document_root<span class="hljs-variable">$fastcgi_script_name</span>;<br>       include fastcgi_params;<br>   &#125;<br>&#125;<br>:wq<br>[root@LNP ~]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@LNP ~]<span class="hljs-comment">#nginx -s reload</span><br><br><span class="hljs-comment">#下载wordpress</span><br>[root@LNP ~]<span class="hljs-comment">#wget https://cn.wordpress.org/latest-zh_CN.tar.gz</span><br>[root@LNP ~]<span class="hljs-comment">#ls</span><br>anaconda-ks.cfg  install_nginx.sh  latest-zh_CN.tar.gz<br>[root@LNP ~]<span class="hljs-comment">#tar xf latest-zh_CN.tar.gz </span><br>[root@LNP ~]<span class="hljs-comment">#ls</span><br>anaconda-ks.cfg  install_nginx.sh  latest-zh_CN.tar.gz  wordpress<br>[root@LNP ~]<span class="hljs-comment">#mv wordpress/* /data/nginx/html/pc</span><br>[root@LNP ~]<span class="hljs-comment">#chown -R nginx. /data/nginx/html/pc</span><br></code></pre></td></tr></table></figure><h4 id="10-2、数据库mysql的配置"><a href="#10-2、数据库mysql的配置" class="headerlink" title="10.2、数据库mysql的配置"></a>10.2、数据库mysql的配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#yum -y install mysql-server</span><br>[root@Rocky ~]<span class="hljs-comment">#systemctl enable --now mysqld</span><br>Created symlink /etc/systemd/system/multi-user.target.wants/mysqld.service → /usr/lib/systemd/system/mysqld.service.<br>[root@Rocky ~]<span class="hljs-comment">#mysql</span><br>mysql&gt; create database wordpress;<br>Query OK, 1 row affected (0.01 sec)<br><br>mysql&gt; create user wordpress@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br>Query OK, 0 rows affected (0.01 sec)<br><br>mysql&gt; grant all on wordpress.* to wordpress@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span>;<br>Query OK, 0 rows affected (0.00 sec)<br><br></code></pre></td></tr></table></figure><p>十二、</p><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第九周作业</title>
    <link href="/2022/11/27/%E7%AC%AC%E4%B9%9D%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/11/27/%E7%AC%AC%E4%B9%9D%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="一、nginx实现全栈SSL。要求http-rewrite到https协议。"><a href="#一、nginx实现全栈SSL。要求http-rewrite到https协议。" class="headerlink" title="一、nginx实现全栈SSL。要求http rewrite到https协议。"></a>一、nginx实现全栈SSL。要求http rewrite到https协议。</h3><h4 id="1-1、自签名证书"><a href="#1-1、自签名证书" class="headerlink" title="1.1、自签名证书"></a>1.1、自签名证书</h4><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">[root@server ~]<span class="hljs-comment">#cd /apps/nginx</span><br>[root@server nginx]<span class="hljs-comment">#mkdir certs              #创建存放证书路径</span><br>[root@server nginx]<span class="hljs-comment">#cd certs/</span><br>[root@server certs]<span class="hljs-comment">#openssl req -newkey rsa:4096 -nodes -sha256 -keyout www.magedu.org.key -x509 -days 3650 -out www.magedu.org.crt</span><br>Country Name (2 letter code) [XX]:CN      <span class="hljs-comment">#国家</span><br>State or Province Name (full name) []:beijing     <span class="hljs-comment">#省</span><br>Locality Name (eg, city) [Default City]:beijing   <span class="hljs-comment">#市</span><br>Organization Name (eg, company) [Default Company Ltd]:magedu   <span class="hljs-comment">#公司</span><br>Organizational Unit Name (eg, section) []:it      <span class="hljs-comment">#部门</span><br>Common Name (eg, your name or your server<span class="hljs-string">&#x27;s hostname) []:*.magedu.org  #网站</span><br><span class="hljs-string">Email Address []:</span><br><span class="hljs-string">#*.magedu.org使用的是泛域名，也可以指定具体网站</span><br><span class="hljs-string">[root@server certs]#ls</span><br><span class="hljs-string">www.magedu.org.crt  www.magedu.org.key</span><br><span class="hljs-string"></span><br><span class="hljs-string">#查看证书文件</span><br><span class="hljs-string">[root@server certs]#openssl x509 -in www.magedu.org.crt -noout -text</span><br><span class="hljs-string">#或者下载到windows上查看</span><br><span class="hljs-string">[root@server certs]#sz www.magedu.org.crt</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221129100238035.png" alt="image-20221129100238035"></a></p><h4 id="1-2、https配置"><a href="#1-2、https配置" class="headerlink" title="1.2、https配置"></a>1.2、https配置</h4><p>nginx 的https 功能基于模块ngx_http_ssl_module实现，因此如果是编译安装的nginx要使用参数</p><p>ngx_http_ssl_module开启ssl功能，但是作为nginx的核心功能，yum安装的nginx默认就是开启的，编</p><p>译安装的nginx需要指定编译参数–with-http_ssl_module开启</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>nginx.org<span class="hljs-regexp">/en/</span>docs<span class="hljs-regexp">/http/</span>ngx_http_ssl_module.html<br></code></pre></td></tr></table></figure><p>配置参数如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sh">ssl on | off;   <br><span class="hljs-comment">#为指定的虚拟主机配置是否启用ssl功能，此功能在1.15.0废弃，使用listen [ssl]替代</span><br>listen 443 ssl;<br><br>ssl_certificate /path/to/file;<br><span class="hljs-comment">#指向包含当前虚拟主机和CA的两个证书信息的文件，一般是crt文件</span><br>ssl_certificate_key /path/to/file;<br><span class="hljs-comment">#当前虚拟主机使用的私钥文件，一般是key文件</span><br><br>ssl_protocols [SSLv2] [SSLv3] [TLSv1] [TLSv1.1] [TLSv1.2]; <br><span class="hljs-comment">#支持ssl协议版本，早期为ssl现在是TLS，默认为后三个</span><br><br>ssl_session_cache off | none | [<span class="hljs-built_in">builtin</span>[:size]] [shared:name:size];<br><span class="hljs-comment">#配置ssl缓存</span><br>                off： <span class="hljs-comment">#关闭缓存</span><br>               none:  <span class="hljs-comment">#通知客户端支持ssl session cache，但实际不支持</span><br>     <span class="hljs-built_in">builtin</span>[:size]：<span class="hljs-comment">#使用OpenSSL内建缓存，为每worker进程私有</span><br> [shared:name:size]：<span class="hljs-comment">#在各worker之间使用一个共享的缓存，需要定义一个缓存名称和缓存空间大小，一兆可以存储4000个会话信息，多个虚拟主机可以使用相同的缓存名称</span><br> <br>ssl_session_timeout time;<br><span class="hljs-comment">#客户端连接可以复用ssl session cache中缓存的有效时长，默认5m</span><br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#查看编译安装时是否安装此模块，已安装</span><br>[root@server certs]<span class="hljs-comment">#nginx -V</span><br>nginx version: nginx/1.20.2<br>built by gcc 8.5.0 20210514 (Red Hat 8.5.0-10) (GCC) <br>built with OpenSSL 1.1.1k  FIPS 25 Mar 2021<br>TLS SNI support enabled<br>configure arguments: --prefix=/apps/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module --with-stream_realip_module --add-module=/usr/local/src/echo-nginx-module-0.63<br>[root@server certs]<span class="hljs-comment">#cd ..</span><br>[root@server nginx]<span class="hljs-comment">#cd conf.d</span><br>[root@server conf.d]<span class="hljs-comment">#vim pc.conf</span><br>server &#123;<br>   ......<br>   listen 443 ssl;<br>   ssl_certificate /apps/nginx/certs/www.magedu.org.crt;<br>   ssl_certificate_key /apps/nginx/certs/www.magedu.org.key;<br>   ssl_session_cache shared:sslcache:20m;<br>   ssl_session_timeout 10m;<br>   ......<br>&#125;<br>:wq<br>[root@server conf.d]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@server conf.d]<span class="hljs-comment">#nginx -s reload</span><br>[root@server conf.d]<span class="hljs-comment">#ss -ntl                #443端口已打开</span><br>State    Recv-Q    Send-Q     Local Address:Port     Peer Address:Port    Process   <br>LISTEN    0        128         0.0.0.0:80              0.0.0.0:*                     <br>LISTEN    0        128         0.0.0.0:22              0.0.0.0:*                     <br>LISTEN    0        128         0.0.0.0:443             0.0.0.0:*                     <br>LISTEN    0        128         [::]:22                 [::]:*  <br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221129102221700.png" alt="image-20221129102221700"></a></p><h4 id="1-3、实现HSTS"><a href="#1-3、实现HSTS" class="headerlink" title="1.3、实现HSTS"></a>1.3、实现HSTS</h4><p>官方文档:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx/<br></code></pre></td></tr></table></figure><p><strong>注意：配置rewrite才能实现http跳转到https</strong></p><p>Nginx服务器利用 ngx_http_rewrite_module 模块（属于标准模块，系统默认安装）解析和处理rewrite请求，此功能依靠 PCRE(perl compatible regular expression)，因此编译之前要安装PCRE库，rewrite是nginx服务器的重要功能之一，用于实现URL的重写，URL的重写是非常有用的功能，比如它可以在我们改变网站结构之后，不需要客户端修改原来的书签，也无需其他网站修改我们的链接，就可以设置为访问，另外还可以在一定程度上提高网站的安全性。</p><p>rewrite官方文档：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">https://nginx.org/en/docs/http/ngx_http_rewrite_module.html<br></code></pre></td></tr></table></figure><h5 id="1-3-1、利用return实现http跳转到https"><a href="#1-3-1、利用return实现http跳转到https" class="headerlink" title="1.3.1、利用return实现http跳转到https"></a>1.3.1、利用return实现http跳转到https</h5><p>return适用于server、location、if</p><h6 id="1-3-1-1、用两个虚拟主机分开实现跳转"><a href="#1-3-1-1、用两个虚拟主机分开实现跳转" class="headerlink" title="1.3.1.1、用两个虚拟主机分开实现跳转"></a>1.3.1.1、用两个虚拟主机分开实现跳转</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@server conf.d]<span class="hljs-comment">#vim pc.conf</span><br>server &#123;<br>   listen 80;<br>   server_name www.magedu.org;<br>   root /data/nginx/html/pc;<br>   <span class="hljs-built_in">return</span> 302 https://www.magedu.org/;<br>&#125;<br>server &#123;<br>   listen 443 ssl;<br>   ssl_certificate /apps/nginx/certs/www.magedu.org.crt;<br>   ssl_certificate_key /apps/nginx/certs/www.magedu.org.key;<br>   ssl_session_cache shared:sslcache:20m;<br>   ssl_session_timeout 10m;<br>   server_name www.magedu.org;<br>   root /data/nginx/html/pc;<br>   .....<br>&#125;<br>:wq<br>[root@server conf.d]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@server conf.d]<span class="hljs-comment">#nginx -s reload</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221129113103417.png" alt="image-20221129113103417"></a></p><h6 id="1-3-1-2、用一个虚拟主机实现跳转"><a href="#1-3-1-2、用一个虚拟主机实现跳转" class="headerlink" title="1.3.1.2、用一个虚拟主机实现跳转"></a>1.3.1.2、用一个虚拟主机实现跳转</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@server conf.d]<span class="hljs-comment">#vim pc.conf</span><br>server &#123;<br>   listen 80;<br>   listen 443 ssl;<br>   ssl_certificate /apps/nginx/certs/www.magedu.org.crt;<br>   ssl_certificate_key /apps/nginx/certs/www.magedu.org.key;<br>   ssl_session_cache shared:sslcache:20m;<br>   ssl_session_timeout 10m;<br>   server_name www.magedu.org;<br>   root /data/nginx/html/pc;<br>   <span class="hljs-keyword">if</span>(<span class="hljs-variable">$scheme</span> = http) &#123;<br>        <span class="hljs-built_in">return</span> 302 https://www.magedu.org/;<br>   &#125;<br>:wq<br>[root@server conf.d]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@server conf.d]<span class="hljs-comment">#nginx -s reload</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221129113829880.png" alt="image-20221129113829880"></a></p><h5 id="1-3-2、利用rewrite实现http跳转到https"><a href="#1-3-2、利用rewrite实现http跳转到https" class="headerlink" title="1.3.2、利用rewrite实现http跳转到https"></a>1.3.2、利用rewrite实现http跳转到https</h5><p>rewrite 格式</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">Syntax: rewrite regex replacement [flag]; <span class="hljs-comment">#通过正则表达式处理用户请求并返回替换后的数据包。</span><br>Default: —<br>Context: server, location, <span class="hljs-keyword">if</span><br></code></pre></td></tr></table></figure><p>flag 说明</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh">redirect;<br><span class="hljs-comment">#临时重定向，重写完成后以临时重定向方式直接返回重写后生成的新URL给客户端，由客户端重新发起请求;</span><br>使用相对路径,或者http://或https://开头，状态码：302<br>permanent;<br><span class="hljs-comment">#重写完成后以永久重定向方式直接返回重写后生成的新URL给客户端，由客户端重新发起请求，状态码：301</span><br><span class="hljs-built_in">break</span>;<br><span class="hljs-comment">#重写完成后,停止对当前URL在当前location中后续的其它重写操作，而后直接跳转至重写规则配置块之后</span><br>的其它配置;结束循环，建议在location中使用<br><span class="hljs-comment">#适用于一个URL一次重写</span><br>last;<br><span class="hljs-comment">#重写完成后,停止对当前URI在当前location中后续的其它重写操作，而后对新的URL启动新一轮重写检查，</span><br>不建议在location中使用<br><span class="hljs-comment">#适用于一个URL多次重写，要注意避免出现超过十次以及URL重写后返回错误的给用户</span><br></code></pre></td></tr></table></figure><h6 id="1-3-2-1、用两个虚拟主机分开实现跳转"><a href="#1-3-2-1、用两个虚拟主机分开实现跳转" class="headerlink" title="1.3.2.1、用两个虚拟主机分开实现跳转"></a>1.3.2.1、用两个虚拟主机分开实现跳转</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@server conf.d]<span class="hljs-comment">#vim pc.conf</span><br>server &#123;<br>   listen 80;<br>   server_name www.magedu.org;<br>   root /data/nginx/html/pc;<br>   rewrite ^(.*)$ https://$host<span class="hljs-variable">$1</span> redirect;<br>&#125;<br>server &#123;<br>   listen 443 ssl;<br>   ssl_certificate /apps/nginx/certs/www.magedu.org.crt;<br>   ssl_certificate_key /apps/nginx/certs/www.magedu.org.key;<br>   ssl_session_cache shared:sslcache:20m;<br>   ssl_session_timeout 10m;<br>   server_name www.magedu.org;<br>   root /data/nginx/html/pc;<br>   .....<br>&#125;<br>:wq<br>[root@server conf.d]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@server conf.d]<span class="hljs-comment">#nginx -s reload</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221129121035588.png" alt="image-20221129121035588"></a></p><h6 id="1-3-1-2、用一个虚拟主机实现跳转-1"><a href="#1-3-1-2、用一个虚拟主机实现跳转-1" class="headerlink" title="1.3.1.2、用一个虚拟主机实现跳转"></a>1.3.1.2、用一个虚拟主机实现跳转</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@server conf.d]<span class="hljs-comment">#vim pc.conf</span><br>server &#123;<br>   listen 80;<br>   listen 443 ssl;<br>   ssl_certificate /apps/nginx/certs/www.magedu.org.crt;<br>   ssl_certificate_key /apps/nginx/certs/www.magedu.org.key;<br>   ssl_session_cache shared:sslcache:20m;<br>   ssl_session_timeout 10m;<br>   server_name www.magedu.org;<br>   root /data/nginx/html/pc;<br>   <span class="hljs-keyword">if</span> (<span class="hljs-variable">$scheme</span> = http) &#123;<br>        rewrite ^(.*)$ https://$host<span class="hljs-variable">$1</span> redirect;<br>   &#125;                        <span class="hljs-comment">#针对全网站跳转</span><br>   .....<br>&#125;<br>:wq<br><br><span class="hljs-comment">#实现网站里面只有各别页面http转换为https</span><br>location /about &#123;<br>      <span class="hljs-built_in">alias</span> /opt/pc/about;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable">$scheme</span> = http) &#123;<br>        rewrite / https://<span class="hljs-variable">$host</span>/about redirect;<br>      &#125;<br>&#125;<br><br>[root@server conf.d]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@server conf.d]<span class="hljs-comment">#nginx -s reload</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221129122222689.png" alt="image-20221129122222689"></a></p><h3 id="二、nginx实现动静分离。"><a href="#二、nginx实现动静分离。" class="headerlink" title="二、nginx实现动静分离。"></a>二、nginx实现动静分离。</h3><p><a href=""><img src="第九周作业/image-20221129152150302.png" alt="image-20221129152150302" style="zoom:50%;" /></a></p><h4 id="2-1、架构组成"><a href="#2-1、架构组成" class="headerlink" title="2.1、架构组成"></a>2.1、架构组成</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">反向代理服务器：10.0.0.184   proxy<br>后端服务器：10.0.0.185      server01      存放静态资源<br>后端服务器：10.0.0.186      server02      存放动态资源<br></code></pre></td></tr></table></figure><h4 id="2-2、反向代理服务器配置"><a href="#2-2、反向代理服务器配置" class="headerlink" title="2.2、反向代理服务器配置"></a>2.2、反向代理服务器配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@proxy conf.d]<span class="hljs-comment">#vim pc.conf</span><br>server &#123;<br>   listen 80;<br>   server_name www.magedu.org;<br>   access_log /apps/nginx/logs/access-json-www.magedu.org.log access_json;<br>   root /data/nginx/html/pc;<br>   location ~ \.(jpg|png|gif)$ &#123;<br>        proxy_pass http://10.0.0.185;<br>   &#125;<br>   location /api &#123;<br>        proxy_pass http://10.0.0.186;<br>   &#125;<br>&#125;<br>:wq<br>[root@proxy conf.d]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@proxy conf.d]<span class="hljs-comment">#nginx -s reload</span><br></code></pre></td></tr></table></figure><h4 id="2-3、后端服务器配置"><a href="#2-3、后端服务器配置" class="headerlink" title="2.3、后端服务器配置"></a>2.3、后端服务器配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@server01 ~]<span class="hljs-comment">#cd /apps/nginx/html</span><br>[root@server01 html]<span class="hljs-comment">#wget -O 1.jpg &quot;https://t7.baidu.com/it/u=4141604674,3317329080&amp;fm=193&amp;f=GIF&quot;   #下载图片并命名1.jpg</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221129155214696.png" alt="image-20221129155214696"></a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@server02 ~]<span class="hljs-comment">#cd /apps/nginx/html</span><br>[root@server02 html]<span class="hljs-comment">#mkdir api</span><br>[root@server02 html]<span class="hljs-comment">#cd api</span><br>[root@server02 api]<span class="hljs-comment">#vim index.html</span><br>&lt;h1&gt; 10.0.0.186 &lt;/h1&gt;<br>:wq<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221129155953866.png" alt="image-20221129155953866"></a></p><h3 id="三、nginx实现防盗链功能。"><a href="#三、nginx实现防盗链功能。" class="headerlink" title="三、nginx实现防盗链功能。"></a>三、nginx实现防盗链功能。</h3><p>防盗链基于客户端携带的referer实现，referer是记录打开一个页面之前记录是从哪个页面跳转过来的标</p><p>记信息，如果别人只链接了自己网站图片或某个单独的资源，而不是打开了网站的整个页面，这就是盗</p><p>链，referer就是之前的那个网站域名，正常的referer信息有以下几种：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">none：<span class="hljs-comment">#请求报文首部没有referer首部，比如用户直接在浏览器输入域名访问web网站，就没有referer信息。</span><br>blocked：<span class="hljs-comment">#请求报文有referer首部，但无有效值，比如为空。</span><br>server_names：<span class="hljs-comment">#referer首部中包含本主机名及即nginx 监听的server_name。</span><br>arbitrary_string：<span class="hljs-comment">#自定义指定字符串，但可使用*作通配符。示例: *.magedu.org www.magedu.*</span><br>regular expression：<span class="hljs-comment">#被指定的正则表达式模式匹配到的字符串,要使用~开头，例如：~.*\.magedu\.com</span><br></code></pre></td></tr></table></figure><h4 id="3-1、实现盗链"><a href="#3-1、实现盗链" class="headerlink" title="3.1、实现盗链"></a>3.1、实现盗链</h4><p>在一个web 站点盗链另一个站点的资源信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#在www.magedu.org站点盗取m.magedu.org的图片</span><br>[root@proxy ~]<span class="hljs-comment">#cd /data/nginx/html/pc</span><br>[root@proxy pc]<span class="hljs-comment">#vim daolian.html</span><br>&lt;html&gt;<br>&lt;<span class="hljs-built_in">head</span>&gt;<br>&lt;meta http-equiv=Content-Type content=<span class="hljs-string">&quot;text/html;charset=utf-8&quot;</span>&gt;<br>&lt;title&gt;盗链&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;img src=<span class="hljs-string">&quot;http://m.magedu.org/1.jpg&quot;</span> &gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br>:wq<br><br><span class="hljs-comment">#查看m.magedu.org的日志可以看见www.magedu.org的盗图</span><br>[root@proxy conf.d]<span class="hljs-comment">#tail /apps/nginx/logs/access.log</span><br>10.0.0.1 - - [29/Nov/2022:16:30:07 +0800] <span class="hljs-string">&quot;GET /1.jpg HTTP/1.1&quot;</span> 304 0 <span class="hljs-string">&quot;http://www.magedu.org/&quot;</span> <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36 Edg/107.0.1418.56&quot;</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221129162918630.png" alt="image-20221129162918630"></a></p><p><a href=""><img src="image-20221129162949414.png" alt="image-20221129162949414"></a></p><p><a href=""><img src="image-20221129163014899.png" alt="image-20221129163014899"></a></p><h4 id="3-2、实现防盗链"><a href="#3-2、实现防盗链" class="headerlink" title="3.2、实现防盗链"></a>3.2、实现防盗链</h4><p>基于访问安全考虑，nginx支持通过ngx_http_referer_module模块,检查访问请求的referer信息是否有</p><p>效实现防盗链功能</p><p>官方文档: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">https://nginx.org/en/docs/http/ngx_http_referer_module.html<br></code></pre></td></tr></table></figure><p>语法格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">location   /images &#123;<br>   root /data/nginx/html/pc;<br>   index index.html;<br>   valid_referers none blocked server_names<br>         *.example.com example.* www.example.org/galleries/<br>         ~\.google\.;<br>          <br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$invalid_referer</span>) &#123;<br>     <span class="hljs-built_in">return</span> 403;<br>   &#125;<br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@proxy conf.d]<span class="hljs-comment">#vim mobile.conf</span><br>server &#123;<br>   listen 80;<br>   server_name m.magedu.org;<br>   location / &#123;<br>   root /data/nginx/html/mobile;<br>   &#125;                                          <span class="hljs-comment">#添加下面几行</span><br>   valid_referers none blocked server_names ~\.google\. ~\.baidu\. ~\.bing\. ~\.so\. ;                     <br>   <span class="hljs-keyword">if</span> (<span class="hljs-variable">$invalid_referer</span>) &#123;<br>        <span class="hljs-built_in">return</span> 403 <span class="hljs-string">&quot;Forbidden Access&quot;</span>;<br>   &#125;<br>&#125;<br>:wq<br>[root@proxy conf.d]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@proxy conf.d]<span class="hljs-comment">#nginx -s reload</span><br><br><span class="hljs-comment">#查看m.magedu.org的日志可以看见403拒绝www.magedu.org的盗图</span><br>[root@proxy conf.d]<span class="hljs-comment">#tail /apps/nginx/logs/access.log       #出现403提示</span><br>10.0.0.1 - - [29/Nov/2022:16:49:52 +0800] <span class="hljs-string">&quot;GET /1.jpg HTTP/1.1&quot;</span> 403 16 <span class="hljs-string">&quot;http://www.magedu.org/&quot;</span> <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36 Edg/107.0.1418.56&quot;</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221129165521812.png" alt="image-20221129165521812"></a></p><h3 id="四、解析nginx常见的负载均衡算法。"><a href="#四、解析nginx常见的负载均衡算法。" class="headerlink" title="四、解析nginx常见的负载均衡算法。"></a>四、解析nginx常见的负载均衡算法。</h3><p>Nginx 可以基于ngx_http_upstream_module模块提供服务器分组转发、权重分配、状态监测、调度算法等高级功能</p><p>官方文档： <a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html">https://nginx.org/en/docs/http/ngx_http_upstream_module.html</a></p><h4 id="4-1、负载均衡五种算法"><a href="#4-1、负载均衡五种算法" class="headerlink" title="4.1、负载均衡五种算法"></a>4.1、负载均衡五种算法</h4><p><strong>①轮询（默认）</strong></p><p>每个请求按时间顺序逐一分配到不同的后端服务，如果后端某台服务器死机，自动剔除故障系统，使用户访问不受影响。</p><p><strong>②weight（轮询权值）</strong></p><p>weight的值越大分配到的访问概率越高，主要用于后端每台服务器性能不均衡的情况下。或者仅仅为在主从的情况下设置不同的权值，达到合理有效的地利用主机资源。</p><p>指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。</p><p><strong>③ip_hash</strong></p><p>每个请求按访问IP的哈希结果分配，使来自同一个IP的访客固定访问一台后端服务器，并且可以有效解决动态网页存在的session共享问题。</p><p>每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</p><p><strong>④fair（第三方）</strong></p><p>比 weight、ip_hash更加智能的负载均衡算法，fair算法可以根据页面大小和加载时间长短智能地进行负载均衡，也就是根据后端服务器的响应时间 来分配请求，响应时间短的优先分配。Nginx本身不支持fair，如果需要这种调度算法，则必须安装upstream_fair模块。</p><p>按后端服务器的响应时间来分配请求，响应时间短的优先分配。<br><strong>⑤url_hash（第三方）</strong></p><p>按访问的URL的哈希结果来分配请求，使每个URL定向到一台后端服务器，可以进一步提高后端缓存服务器的效率。Nginx本身不支持url_hash，如果需要这种调度算法，则必须安装Nginx的hash软件包。</p><p>按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">hash</span> KEY [consistent];<br><span class="hljs-comment">#基于指定请求报文中首部字段或者URI等key做hash计算，使用consistent参数，将使用ketama一致性hash算法，适用于后端是Cache服务器（如varnish）时使用，consistent定义使用一致性hash运算，一致性hash基于取模运算</span><br><span class="hljs-comment">#示例</span><br><span class="hljs-built_in">hash</span> <span class="hljs-variable">$request_uri</span> consistent; <span class="hljs-comment">#基于用户请求的uri做hash</span><br><span class="hljs-built_in">hash</span> <span class="hljs-variable">$cookie_sessionid</span>  <span class="hljs-comment">#基于cookie中的sessionid这个key进行hash调度,实现会话绑定</span><br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">ip_hash;<br><span class="hljs-comment">#源地址hash调度方法，基于的客户端的remote_addr(源地址IPv4的前24位或整个IPv6地址)做hash计算，以实现会话保持</span><br><span class="hljs-comment">#hash $remote_addr 则是对全部32bit的IPv4进行hash计算</span><br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">least_conn;<br><span class="hljs-comment">#最少连接调度算法，优先将客户端请求调度到当前连接最少的后端服务器,相当于LVS中的WLC</span><br></code></pre></td></tr></table></figure><h3 id="五、基于LNMP完成搭建任意一种应用。"><a href="#五、基于LNMP完成搭建任意一种应用。" class="headerlink" title="五、基于LNMP完成搭建任意一种应用。"></a>五、基于LNMP完成搭建任意一种应用。</h3><p><a href=""><img src="image-20221130154931353.png" alt="image-20221130154931353"></a></p><h4 id="5-1、准备数据库"><a href="#5-1、准备数据库" class="headerlink" title="5.1、准备数据库"></a>5.1、准备数据库</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#yum -y install mysql-server redis</span><br>[root@Rocky ~]<span class="hljs-comment">#systemctl enable --now mysqld redis</span><br>[root@Rocky ~]<span class="hljs-comment">#mysql</span><br>mysql&gt; create database kodbox;<br>mysql&gt; create user kodbox@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br>mysql&gt; grant all on kodbox.* to kodbox@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span>;<br><br><span class="hljs-comment">#修改redis配置文件</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /etc/redis.conf</span><br><span class="hljs-built_in">bind</span> 0.0.0.0                <span class="hljs-comment">#将127.0.0.1改为0.0.0.0</span><br>[root@Rocky ~]<span class="hljs-comment">#systemctl restart redis</span><br></code></pre></td></tr></table></figure><h4 id="5-2、nginx的配置"><a href="#5-2、nginx的配置" class="headerlink" title="5.2、nginx的配置"></a>5.2、nginx的配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#nginx的配置</span><br>[root@proxy ~]<span class="hljs-comment">#yum -y install nginx      #前期已编译安装nginx了，不再执行此步</span><br>[root@proxy ~]<span class="hljs-comment">#vim /apps/nginx/conf/nginx.conf</span><br>include /apps/nginx/conf.d/*.conf;       <span class="hljs-comment">#在倒数第二行添加此命令</span><br>[root@proxy ~]<span class="hljs-comment">#cd /apps/nginx/conf.d</span><br>[root@proxy ~]<span class="hljs-comment">#mkdir -p /data/nginx/kodbox       #创建文件存放路径</span><br>[root@proxy conf.d]<span class="hljs-comment">#vim kodbox.conf</span><br>server &#123;<br>     listen 80;<br>     server_name kodbox.magedu.org;<br>     root /data/nginx/kodbox;             <span class="hljs-comment">#文件存放路径</span><br>     client_max_body_size 200M;           <span class="hljs-comment">#文件上传大小限制</span><br>     index index.php;<br>     location ~ \.php$ &#123;<br>          root            /data/nginx/kodbox;<br>          fastcgi_pass    127.0.0.1:9000;<br>          fastcgi_index   index.php<br>          fastcgi_param   SCRIPT_FILENAME   $document_root<span class="hljs-variable">$fastcgi_script_name</span>;<br>          include         fastcgi_params;<br>     &#125;<br>     location ~ ^/(ping|fpm_status)$ &#123;<br>       fastcgi_pass   127.0.0.1:9000;<br>       fastcgi_param  PATH_TRANSLATED $document_root<span class="hljs-variable">$fastcgi_script_name</span>;<br>       include fastcgi_params;<br>     &#125;<br>&#125;<br>:wq<br>[root@proxy conf.d]<span class="hljs-comment">#nginx -t</span><br>nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /apps/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br>[root@proxy conf.d]<span class="hljs-comment">#nginx -s reload</span><br></code></pre></td></tr></table></figure><h4 id="5-3、安装和配置php"><a href="#5-3、安装和配置php" class="headerlink" title="5.3、安装和配置php"></a>5.3、安装和配置php</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#安装PHP相关软件包</span><br>[root@proxy ~]<span class="hljs-comment">#yum -y install php-fpm php-json php-mysqlnd php-mbstring php-xml php-gd</span><br>[root@proxy ~]<span class="hljs-comment">#vim /etc/php.ini</span><br>; Maximum allowed size <span class="hljs-keyword">for</span> uploaded files.<br>; http://php.net/upload-max-filesize<br>upload_max_filesize = 200M                 <span class="hljs-comment">#由2改为200，调大上传限制</span><br>; http://php.net/post-max-size<br>post_max_size = 200M                       <span class="hljs-comment">#由8改为200，调大上传限制</span><br>:wq<br>[root@proxy ~]<span class="hljs-comment">#vim /etc/php-fpm.d/www.conf </span><br>; RPM: apache user chosen to provide access to the same directories as httpd<br>user = nginx                       <span class="hljs-comment">#将Apache改为nginx</span><br>; RPM: Keep a group allowed to write <span class="hljs-keyword">in</span> <span class="hljs-built_in">log</span> <span class="hljs-built_in">dir</span>.<br>group = nginx                      <span class="hljs-comment">#将Apache改为nginx</span><br>; listen = /run/php-fpm/www.sock   <span class="hljs-comment">#将此行注释</span><br>listen = 127.0.0.1:9000            <span class="hljs-comment">#添加此行</span><br>.....<br>; Default Value: not <span class="hljs-built_in">set</span><br>pm.status_path = /fpm_status       <span class="hljs-comment">#取消此行注释,且便于区分，将status改为fpm_status</span><br>.....<br>; Default Value: not <span class="hljs-built_in">set</span><br>ping.path = /ping                 <span class="hljs-comment">#取消此行注释</span><br>....<br>; Default Value: pong<br>ping.response = pong              <span class="hljs-comment">#取消此行注释</span><br>:wq<br>[root@proxy ~]<span class="hljs-comment">#systemctl restart php-fpm</span><br><br></code></pre></td></tr></table></figure><h4 id="5-4、在DNS里添加解析（以前搭建的DNS）"><a href="#5-4、在DNS里添加解析（以前搭建的DNS）" class="headerlink" title="5.4、在DNS里添加解析（以前搭建的DNS）"></a>5.4、在DNS里添加解析（以前搭建的DNS）</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#DNS主机：10.0.0.128</span><br>[root@DNS ~]<span class="hljs-comment">#vim /var/named/magedu.org.zone</span><br><span class="hljs-variable">$TTL</span> 1D<br>@         IN    SOA   master  admin.magedu.org ( 6  1D  10M  1D  6H  )<br>                NS    master<br>                NS    slave1<br>master          A     10.0.0.128<br>slave1          A     10.0.0.184<br>kodbox          A     10.0.0.184<br>:wq<br>[root@DNS ~]<span class="hljs-comment">#rndc reload                     #重新加载</span><br>server reload successful<br><br><span class="hljs-comment">#将10.0.0.184的DNS指向10.0.0.128</span><br>[root@proxy ~]<span class="hljs-comment">#vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br>DNS1=10.0.0.128<br>:wq<br>[root@proxy ~]<span class="hljs-comment">#nmcli connection reload</span><br>[root@proxy ~]<span class="hljs-comment">#nmcli connection up eth0</span><br></code></pre></td></tr></table></figure><h4 id="5-5、可道云下载"><a href="#5-5、可道云下载" class="headerlink" title="5.5、可道云下载"></a>5.5、可道云下载</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@proxy ~]<span class="hljs-comment">#wget https://static.kodcloud.com/update/download/kodbox.1.35.zip</span><br>[root@proxy ~]<span class="hljs-comment">#unzip kodbox.1.35.zip -d /data/nginx/kodbox</span><br>[root@proxy ~]<span class="hljs-comment">#ll /data/nginx/kodbox</span><br>total 172<br>drwxr-xr-x  8 root root    110 Oct 31 18:31 app<br>-rw-r--r--  1 root root 168291 Oct 31 18:31 Changelog.md<br>drwxr-xr-x  3 root root     91 Oct 31 18:31 config<br>drwxr-xr-x  3 root root     20 Oct 31 18:31 data<br>-rw-r--r--  1 root root    157 Oct 31 18:31 index.php<br>drwxr-xr-x 18 root root    260 Oct 31 18:31 plugins<br>drwxr-xr-x  6 root root     58 Oct 31 18:31 static<br>[root@proxy ~]<span class="hljs-comment">#chown -R nginx.nginx /data/nginx/kodbox</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221130173134603.png" alt="image-20221130173134603"></a></p><p>下一步：</p><p><a href=""><img src="image-20221130173336671.png" alt="image-20221130173336671"></a></p><p><strong>此时发现仍缺少redis的相关组件</strong></p><h4 id="5-6、编译安装redis相关组件"><a href="#5-6、编译安装redis相关组件" class="headerlink" title="5.6、编译安装redis相关组件"></a>5.6、编译安装redis相关组件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@proxy ~]<span class="hljs-comment">#wget https://pecl.php.net/get/redis-5.3.7.tgz</span><br>[root@proxy ~]<span class="hljs-comment">#mv redis-5.3.7.tgz /usr/local/src</span><br>[root@proxy ~]<span class="hljs-comment">#cd /usr/local/src</span><br>[root@proxy src]<span class="hljs-comment">#tar xf redis-5.3.7.tgz </span><br>[root@proxy src]<span class="hljs-comment">#ls</span><br>echo-nginx-module-0.63  nginx-1.20.2.tar.gz     package.xml  redis-5.3.7.tgz  v0.63.tar.gz  nginx-1.20.2  nginx-module-vts-0.2.1  redis-5.3.7  v0.2.1.tar.gz<br>[root@proxy src]<span class="hljs-comment">#cd redis-5.3.7/</span><br><span class="hljs-comment">#进入目录后发现没有./configure</span><br>[root@proxy redis-5.3.7]<span class="hljs-comment">#less README.markdown   #查看如何编译安装</span><br><span class="hljs-comment">## Installation</span><br>For everything you should need to install PhpRedis on your system,<br>see the [INSTALL.markdown](./INSTALL.markdown) page.  <span class="hljs-comment">#提示让看INSTALL.markdown</span><br>[root@proxy redis-5.3.7]<span class="hljs-comment">#less INSTALL.markdown</span><br><span class="hljs-built_in">cd</span> phpredis<br>phpize            <span class="hljs-comment">#执行此命令后会生成phpize</span><br>./configure [--enable-redis-igbinary] [--enable-redis-msgpack] [--enable-redis-lzf [--with-liblzf[=DIR]]] [--enable-redis-zstd]<br>make &amp;&amp; make install<br>[root@proxy redis-5.3.7]<span class="hljs-comment">#phpize</span><br>-bash: phpize: <span class="hljs-built_in">command</span> not found<br>[root@proxy redis-5.3.7]<span class="hljs-comment">#yum provides phpize    #查找phpize在哪个包里，在php-cli这个包里</span><br>Last metadata expiration check: 1:56:31 ago on Wed 30 Nov 2022 04:13:44 PM CST.<br>php-cli-7.2.24-1.module+el8.4.0+413+c9202dda.x86_64 : Command-line interface <span class="hljs-keyword">for</span> PHP<br>Repo        : AppStream<br>Matched from:<br>Filename    : /usr/bin/phpize<br>[root@proxy redis-5.3.7]<span class="hljs-comment">#yum -y install php-cli</span><br>[root@proxy redis-5.3.7]<span class="hljs-comment">#phpize         #显示少php-devel包</span><br>Can<span class="hljs-string">&#x27;t find PHP headers in /usr/include/php</span><br><span class="hljs-string">The php-devel package is required for use of this command.</span><br><span class="hljs-string">[root@proxy redis-5.3.7]#yum -y install php-devel</span><br><span class="hljs-string">[root@proxy redis-5.3.7]#./configure</span><br><span class="hljs-string">[root@proxy redis-5.3.7]#make &amp;&amp; make install</span><br><span class="hljs-string">Installing shared extensions:     /usr/lib64/php/modules/   #提示模块安装的路径</span><br><span class="hljs-string">[root@proxy redis-5.3.7]#ls /usr/lib64/php/modules/</span><br><span class="hljs-string">bz2.so    dom.so   gd.so    mbstring.so   pdo.so      simplexml.so   wddx.so    calendar.so    exif.so      gettext.so    mysqli.so   pdo_sqlite.so  sockets.so    xmlreader.so   ctype.so     fileinfo.so   iconv.so    mysqlnd.so     phar.so        sqlite3.so     xml.so       curl.so       ftp.so      json.so        pdo_mysql.so  redis.so      tokenizer.so  xmlwriter.so  xsl.so</span><br><span class="hljs-string">#但此时PHP程序不知道有redis模块，需人为进行添加</span><br><span class="hljs-string">[root@proxy redis-5.3.7]#vim /etc/php.d/</span><br><span class="hljs-string">20-bz2.ini         20-fileinfo.ini    20-mbstring.ini    20-sqlite3.ini     </span><br><span class="hljs-string">20-calendar.ini    20-ftp.ini         20-mysqlnd.ini     20-tokenizer.ini   </span><br><span class="hljs-string">20-ctype.ini       20-gd.ini          20-pdo.ini         20-xml.ini         </span><br><span class="hljs-string">20-curl.ini        20-gettext.ini     20-phar.ini        20-xmlwriter.ini   </span><br><span class="hljs-string">20-dom.ini         20-iconv.ini       20-simplexml.ini   20-xsl.ini         </span><br><span class="hljs-string">20-exif.ini        20-json.ini        20-sockets.ini     30-mysqli.ini    </span><br><span class="hljs-string">30-pdo_mysql.ini   30-pdo_sqlite.ini  30-wddx.ini        30-xmlreader.ini</span><br><span class="hljs-string">[root@proxy redis-5.3.7]#vim /etc/php.d/31-redis.ini</span><br><span class="hljs-string">extension=redis                          #添加此行</span><br><span class="hljs-string">:wq</span><br><span class="hljs-string">[root@proxy redis-5.3.7]#systemctl restart php-fpm</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221130183021629.png" alt="image-20221130183021629"></a></p><p><a href=""><img src="image-20221130183130306.png" alt="image-20221130183130306"></a></p><p><a href=""><img src="image-20221130183154802.png" alt="image-20221130183154802"></a></p><h3 id="六、jumpserver-总结安装部署，添加用户授权，行为审计。"><a href="#六、jumpserver-总结安装部署，添加用户授权，行为审计。" class="headerlink" title="六、jumpserver 总结安装部署，添加用户授权，行为审计。"></a>六、jumpserver 总结安装部署，添加用户授权，行为审计。</h3><p>官方文档：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">https://docs.jumpserver.org/zh/master/install/setup_by_fast/<br></code></pre></td></tr></table></figure><h4 id="6-1、安装要求"><a href="#6-1、安装要求" class="headerlink" title="6.1、安装要求"></a>6.1、安装要求</h4><p><strong>JumpServer 环境要求:</strong></p><p>①硬件配置: 2个CPU核心, 4G 内存, 50G 硬盘（最低）</p><p>②操作系统: Linux 发行版 x86_64</p><p>③Python = 3.6.x</p><p>④MySQL Server ≥ 5.6 或者 Mariadb Server ≥ 5.5.56 数据库编码要求 uft8,新版要求5.7以上</p><p>⑤Redis: 新版要求6.0以上</p><h4 id="6-2、安装方法"><a href="#6-2、安装方法" class="headerlink" title="6.2、安装方法"></a>6.2、安装方法</h4><p><strong>官方提供了多种安装方法</strong></p><p>①手动部署: 一步一步实现</p><p>②极速部署: 资产数量不多，或者测试体验的用户请使用本脚本快速部署</p><p>③容器部署: 基于docker 实现</p><p>④分布式部署: 适用大型环境</p><h4 id="6-3、基于容器部署"><a href="#6-3、基于容器部署" class="headerlink" title="6.3、基于容器部署"></a>6.3、基于容器部署</h4><p>官方文档：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http">https://github.com/jumpserver/Dockerfile/tree/master/allinone<br>https://docs.jumpserver.org/zh/master/install/docker_install/<br></code></pre></td></tr></table></figure><h5 id="6-3-1、环境说明"><a href="#6-3-1、环境说明" class="headerlink" title="6.3.1、环境说明"></a>6.3.1、环境说明</h5><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://github.com/jumpserver/Dockerfile/tree/master/allinone<br></code></pre></td></tr></table></figure><p>使用外置 MySQL 数据库和 Redis:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mysql">- 外置数据库要求 MySQL 版本大于等于 5.7<br>- 外置 Redis 要求 Redis 版本大于等于 6.0<br># 自行部署 MySQL 可以参考<br>(https://docs.jumpserver.org/zh/master/install/setup_by_lb/#mysql)<br># mysql 创建用户并赋予权限, 请自行替换 nu4x599Wq7u0Bn8EABh3J91G 为自己的密码<br>mysql -u root -p<br>create database jumpserver default charset &#x27;utf8&#x27;;<br>create user &#x27;jumpserver&#x27;@&#x27;%&#x27; identified by &#x27;nu4x599Wq7u0Bn8EABh3J91G&#x27;;<br>grant all on jumpserver.* to &#x27;jumpserver&#x27;@&#x27;%&#x27;;<br>flush privileges;<br># 自行部署 Redis 可以参考<br>(https://docs.jumpserver.org/zh/master/install/setup_by_lb/#redis)<br></code></pre></td></tr></table></figure><p><strong>基于容器,安装完毕后可以通过以下方式访问</strong></p><p>①浏览器访问: http://&lt;容器所在服务器IP&gt; </p><p>②默认管理员账户 admin 密码 admin</p><p>③SSH 访问: ssh -p 2222 &lt;容器所在服务器IP&gt; </p><p>④XShell 等工具请添加 connection 连接, 默认 ssh 端口 2222</p><p><strong>容器docker安装</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@docker ~]<span class="hljs-comment">#cat install_docker.sh </span><br><span class="hljs-comment">#!/bin/bash</span><br><br>DOCKER_VERSION=<span class="hljs-string">&quot;20.10.10&quot;</span><br>UBUNTU_DOCKER_VERSION=<span class="hljs-string">&quot;5:<span class="hljs-variable">$&#123;DOCKER_VERSION&#125;</span>~3-0~`lsb_release -si`-`lsb_release -cs`&quot;</span><br><span class="hljs-comment">#UBUNTU_DOCKER_VERSION=&quot;5:20.10.9~3-0~`lsb_release -si`-`lsb_release -cs`&quot;</span><br><span class="hljs-comment">#UBUNTU_DOCKER_VERSION=&quot;5:19.03.14~3-0~lsb_release -si-`lsb_release -cs`&quot;</span><br><br>COLOR_SUCCESS=<span class="hljs-string">&quot;echo -e \\033[1;32m&quot;</span><br>COLOR_FAILURE=<span class="hljs-string">&quot;echo -e \\033[1;31m&quot;</span><br>END=<span class="hljs-string">&quot;\033[m&quot;</span><br><br>. /etc/os-release<br><br><span class="hljs-function"><span class="hljs-title">color</span></span> () &#123;<br>    RES_COL=60<br>    MOVE_TO_COL=<span class="hljs-string">&quot;echo -en \\033[<span class="hljs-variable">$&#123;RES_COL&#125;</span>G&quot;</span><br>    SETCOLOR_SUCCESS=<span class="hljs-string">&quot;echo -en \\033[1;32m&quot;</span><br>    SETCOLOR_FAILURE=<span class="hljs-string">&quot;echo -en \\033[1;31m&quot;</span><br>    SETCOLOR_WARNING=<span class="hljs-string">&quot;echo -en \\033[1;33m&quot;</span><br>    SETCOLOR_NORMAL=<span class="hljs-string">&quot;echo -en \E[0m&quot;</span><br>    <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> &amp;&amp; <span class="hljs-variable">$MOVE_TO_COL</span><br>    <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;[&quot;</span><br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;success&quot;</span> -o <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;0&quot;</span> ] ;<span class="hljs-keyword">then</span><br>        <span class="hljs-variable">$&#123;SETCOLOR_SUCCESS&#125;</span><br>        <span class="hljs-built_in">echo</span> -n $<span class="hljs-string">&quot;  OK  &quot;</span>    <br>    <span class="hljs-keyword">elif</span> [ <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;failure&quot;</span> -o <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;1&quot;</span>  ] ;<span class="hljs-keyword">then</span> <br>        <span class="hljs-variable">$&#123;SETCOLOR_FAILURE&#125;</span><br>        <span class="hljs-built_in">echo</span> -n $<span class="hljs-string">&quot;FAILED&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-variable">$&#123;SETCOLOR_WARNING&#125;</span><br>        <span class="hljs-built_in">echo</span> -n $<span class="hljs-string">&quot;WARNING&quot;</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-variable">$&#123;SETCOLOR_NORMAL&#125;</span><br>    <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;]&quot;</span><br>    <span class="hljs-built_in">echo</span> <br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-title">install_docker</span></span>()&#123;<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$ID</span> = <span class="hljs-string">&quot;centos&quot;</span> -o <span class="hljs-variable">$ID</span> = <span class="hljs-string">&quot;rocky&quot;</span> ];<span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$VERSION_ID</span> = <span class="hljs-string">&quot;7&quot;</span> ];<span class="hljs-keyword">then</span><br>            <span class="hljs-built_in">cat</span> &gt;  /etc/yum.repos.d/docker.repo  &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">[docker]</span><br><span class="hljs-string">name=docker</span><br><span class="hljs-string">gpgcheck=0</span><br><span class="hljs-string">#baseurl=https://mirrors.aliyun.com/docker-ce/linux/centos/7/x86_64/stable/</span><br><span class="hljs-string">baseurl=https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/centos/7/x86_64/stable/</span><br><span class="hljs-string">EOF</span><br>        <span class="hljs-keyword">else</span>     <br>            <span class="hljs-built_in">cat</span> &gt;  /etc/yum.repos.d/docker.repo  &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">[docker]</span><br><span class="hljs-string">name=docker</span><br><span class="hljs-string">gpgcheck=0</span><br><span class="hljs-string">#baseurl=https://mirrors.aliyun.com/docker-ce/linux/centos/8/x86_64/stable/</span><br><span class="hljs-string">baseurl=https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/centos/8/x86_64/stable/</span><br><span class="hljs-string">EOF</span><br>        <span class="hljs-keyword">fi</span><br>    yum clean all <br>        <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span> <span class="hljs-string">&quot;Docker有以下版本&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        yum list docker-ce --showduplicates<br>        <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span><span class="hljs-string">&quot;5秒后即将安装: docker-&quot;</span><span class="hljs-variable">$&#123;DOCKER_VERSION&#125;</span><span class="hljs-string">&quot; 版本.....&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span><span class="hljs-string">&quot;如果想安装其它Docker版本，请按ctrl+c键退出，修改版本再执行&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        <span class="hljs-built_in">sleep</span> 5<br>        yum -y install docker-ce-<span class="hljs-variable">$DOCKER_VERSION</span> docker-ce-cli-<span class="hljs-variable">$DOCKER_VERSION</span>  \<br>            || &#123; color <span class="hljs-string">&quot;Base,Extras的yum源失败,请检查yum源配置&quot;</span> 1;<span class="hljs-built_in">exit</span>; &#125;<br>    <span class="hljs-keyword">else</span><br>    dpkg -s docker-ce &amp;&gt; /dev/null &amp;&amp; <span class="hljs-variable">$COLOR</span><span class="hljs-string">&quot;Docker已安装，退出&quot;</span> 1 &amp;&amp; <span class="hljs-built_in">exit</span><br>        apt update || &#123; color <span class="hljs-string">&quot;更新包索引失败&quot;</span> 1 ; <span class="hljs-built_in">exit</span> 1; &#125;  <br>        apt  -y install apt-transport-https ca-certificates curl software-properties-common || \<br>            &#123; color <span class="hljs-string">&quot;安装相关包失败&quot;</span> 1 ; <span class="hljs-built_in">exit</span> 2;  &#125;  <br>        curl -fsSL https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -<br>        add-apt-repository <span class="hljs-string">&quot;deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu <span class="hljs-subst">$(lsb_release -cs)</span> stable&quot;</span><br>        apt update<br>        <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span> <span class="hljs-string">&quot;Docker有以下版本&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        apt-cache madison docker-ce<br>        <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span><span class="hljs-string">&quot;5秒后即将安装: docker-&quot;</span><span class="hljs-variable">$&#123;UBUNTU_DOCKER_VERSION&#125;</span><span class="hljs-string">&quot; 版本.....&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span><span class="hljs-string">&quot;如果想安装其它Docker版本，请按ctrl+c键退出，修改版本再执行&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        <span class="hljs-built_in">sleep</span> 5<br>        apt -y  install docker-ce=<span class="hljs-variable">$&#123;UBUNTU_DOCKER_VERSION&#125;</span> docker-ce-cli=<span class="hljs-variable">$&#123;UBUNTU_DOCKER_VERSION&#125;</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">if</span> [ $? -eq 0 ];<span class="hljs-keyword">then</span><br>        color <span class="hljs-string">&quot;安装软件包成功&quot;</span>  0<br>    <span class="hljs-keyword">else</span><br>        color <span class="hljs-string">&quot;安装软件包失败，请检查网络配置&quot;</span> 1<br>        <span class="hljs-built_in">exit</span><br>    <span class="hljs-keyword">fi</span><br>        <br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">config_docker</span></span> ()&#123;<br>    <span class="hljs-built_in">mkdir</span> -p /etc/docker<br>    <span class="hljs-built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="hljs-string">&#x27;EOF&#x27;</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://si7y70hh.mirror.aliyuncs.com&quot;</span>],<br>  <span class="hljs-string">&quot;insecure-registries&quot;</span>:[<span class="hljs-string">&quot;harbor.magedu.org:80&quot;</span>]<br>&#125;<br>EOF<br>    systemctl daemon-reload<br>    systemctl <span class="hljs-built_in">enable</span> docker<br>    systemctl restart docker<br>    docker version &amp;&amp; color <span class="hljs-string">&quot;Docker 安装成功&quot;</span> 0 ||  color <span class="hljs-string">&quot;Docker 安装失败&quot;</span> 1<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-title">set_alias</span></span> ()&#123;<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;alias rmi=&quot;docker images -qa|xargs docker rmi -f&quot;&#x27;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;alias rmc=&quot;docker ps -qa|xargs docker rm -f&quot;&#x27;</span> &gt;&gt; ~/.bashrc<br>&#125;<br><br><br>install_docker<br>config_docker <br>set_alias<br><br></code></pre></td></tr></table></figure><h5 id="6-3-2、安装MySQL服务"><a href="#6-3-2、安装MySQL服务" class="headerlink" title="6.3.2、安装MySQL服务"></a>6.3.2、安装MySQL服务</h5><p>官方说明：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://docs.jumpserver.org/zh/master/install/prod/distributed_03/<br></code></pre></td></tr></table></figure><p>MYSQL要求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">create database jumpserver default charset &#x27;utf8&#x27;;<br>create user &#x27;jumpserver&#x27;@&#x27;%&#x27; identified by &#x27;nu4x599Wq7u0Bn8EABh3J91G&#x27;;<br>grant all on jumpserver.* to &#x27;jumpserver&#x27;@&#x27;%&#x27;;<br>flush privileges;<br></code></pre></td></tr></table></figure><h6 id="6-3-2-1、在宿主机准备MySQL配置文件"><a href="#6-3-2-1、在宿主机准备MySQL配置文件" class="headerlink" title="6.3.2.1、在宿主机准备MySQL配置文件"></a>6.3.2.1、在宿主机准备MySQL配置文件</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#准备相关目录</span><br>[root@docker ~]<span class="hljs-comment">#mkdir -p /etc/mysql/mysql.conf.d/</span><br>[root@docker ~]<span class="hljs-comment">#mkdir -p /etc/mysql/conf.d/</span><br><br><span class="hljs-comment">#生成服务器配置文件,指定字符集</span><br>[root@docker ~]<span class="hljs-comment">#tee /etc/mysql/mysql.conf.d/mysqld.cnf &lt;&lt;EOF</span><br>[mysqld]<br>pid-file= /var/run/mysqld/mysqld.pid<br>socket= /var/run/mysqld/mysqld.sock<br>datadir= /var/lib/mysql<br>symbolic-links=0<br>character-set-server=utf8   <span class="hljs-comment">#添加此行,指定字符集</span><br>EOF<br><br><span class="hljs-comment">#生成客户端配置文件,指定字符集</span><br>[root@docker ~]<span class="hljs-comment">#tee /etc/mysql/conf.d/mysql.cnf &lt;&lt;EOF</span><br>[mysql]<br>default-character-set=utf8<br>EOF<br><br><span class="hljs-comment">#查看配置文件列表</span><br>[root@docker ~]<span class="hljs-comment">#tree /etc/mysql/</span><br>/etc/mysql/<br>├── conf.d<br>│   └── mysql.cnf<br>└── mysql.conf.d<br>    └── mysqld.cnf<br><br>2 directories, 2 files<br></code></pre></td></tr></table></figure><h6 id="6-3-2-2、启动MySQL容器"><a href="#6-3-2-2、启动MySQL容器" class="headerlink" title="6.3.2.2、启动MySQL容器"></a>6.3.2.2、启动MySQL容器</h6><p>将上面宿主机的设置好的配置文件挂载至MySQL容器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@docker ~]<span class="hljs-comment">#docker run -d -p 3306:3306 --name mysql --restart always \</span><br>-e MYSQL_ROOT_PASSWORD=123456 \<br>-e MYSQL_DATABASE=jumpserver \<br>-e MYSQL_USER=jumpserver \<br>-e MYSQL_PASSWORD=123456 \<br>-v /data/mysql:/var/lib/mysql \<br>-v /etc/mysql/mysql.conf.d/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf \<br>-v /etc/mysql/conf.d/mysql.cnf:/etc/mysql/conf.d/mysql.cnf  mysql:5.7.30<br></code></pre></td></tr></table></figure><h6 id="6-3-2-3、查看验证mysql"><a href="#6-3-2-3、查看验证mysql" class="headerlink" title="6.3.2.3、查看验证mysql"></a>6.3.2.3、查看验证mysql</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@docker ~]<span class="hljs-comment">#docker images</span><br>REPOSITORY   TAG       IMAGE ID       CREATED       SIZE<br>mysql        5.7.30    9cfcce23593a   2 years ago   448MB<br>[root@docker ~]<span class="hljs-comment">#ss -ntl</span><br>State    Recv-Q    Send-Q    Local Address:Port     Peer Address:Port      Process   <br>LISTEN    0         128       0.0.0.0:22              0.0.0.0:*                     <br>LISTEN    0         128       0.0.0.0:3306            0.0.0.0:*                     <br>LISTEN    0         128       *:80                    *:*                      <br>LISTEN    0         128       [::]:22                 [::]:*                      <br>LISTEN    0         128       [::]:3306               [::]:*    <br><br><span class="hljs-comment">#在其他机器上连接docker安装的mysql</span><br>[root@client ~]<span class="hljs-comment">#mysql -uroot -p123456 -h10.0.0.186</span><br>mysql: [Warning] Using a password on the <span class="hljs-built_in">command</span> line interface can be insecure.<br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection <span class="hljs-built_in">id</span> is 2<br>Server version: 5.7.30 MySQL Community Server (GPL)<br>[root@client ~]<span class="hljs-comment">#mysql -ujumpserver -p123456 -h10.0.0.186</span><br>mysql&gt; show databases;<br>+--------------------+<br>| Database           |<br>+--------------------+<br>| information_schema |<br>| jumpserver         |<br>+--------------------+<br><br></code></pre></td></tr></table></figure><h5 id="6-3-3、安装Redis服务"><a href="#6-3-3、安装Redis服务" class="headerlink" title="6.3.3、安装Redis服务"></a>6.3.3、安装Redis服务</h5><p>官方说明：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://docs.jumpserver.org/zh/master/install/prod/distributed_04/<br></code></pre></td></tr></table></figure><p>新版要求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">外置 Redis 要求 Redis 版本大于等于 6.0<br></code></pre></td></tr></table></figure><h6 id="6-3-3-1、启动redis"><a href="#6-3-3-1、启动redis" class="headerlink" title="6.3.3.1、启动redis"></a>6.3.3.1、启动redis</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@docker ~]<span class="hljs-comment">#docker run -d -p 6379:6379 --name redis --restart always redis</span><br></code></pre></td></tr></table></figure><h6 id="6-3-3-2、验证Redis连接"><a href="#6-3-3-2、验证Redis连接" class="headerlink" title="6.3.3.2、验证Redis连接"></a>6.3.3.2、验证Redis连接</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@client ~]<span class="hljs-comment">#yum -y install redis</span><br>[root@client ~]<span class="hljs-comment">#redis-cli -h 10.0.0.186</span><br>10.0.0.186:6379&gt; info<br><span class="hljs-comment"># Server</span><br>redis_version:6.2.6<br><br></code></pre></td></tr></table></figure><h5 id="6-3-4、部署JumpServer"><a href="#6-3-4、部署JumpServer" class="headerlink" title="6.3.4、部署JumpServer"></a>6.3.4、部署JumpServer</h5><h6 id="6-3-4-1、生成key和token"><a href="#6-3-4-1、生成key和token" class="headerlink" title="6.3.4.1、生成key和token"></a>6.3.4.1、生成key和token</h6><p>官方说明</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs http">https://github.com/jumpserver/Dockerfile/tree/master/allinone<br>https://docs.jumpserver.org/zh/master/install/docker_install/<br></code></pre></td></tr></table></figure><p><strong>需要先生成key和token</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@docker ~]<span class="hljs-comment">#vim key.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-keyword">if</span> [ ! <span class="hljs-string">&quot;<span class="hljs-variable">$SECRET_KEY</span>&quot;</span> ];<br>   <span class="hljs-keyword">then</span> SECRET_KEY=`<span class="hljs-built_in">cat</span> /dev/urandom | <span class="hljs-built_in">tr</span> -dc A-Za-z0-9 | <span class="hljs-built_in">head</span> -c 50`;<br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;SECRET_KEY=<span class="hljs-variable">$SECRET_KEY</span>&quot;</span> &gt;&gt; ~/.bashrc; <span class="hljs-built_in">echo</span> SECRET_KEY=<span class="hljs-variable">$SECRET_KEY</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-built_in">echo</span> SECRET_KEY=<span class="hljs-variable">$SECRET_KEY</span>;<br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">if</span> [ ! <span class="hljs-string">&quot;<span class="hljs-variable">$BOOTSTRAP_TOKEN</span>&quot;</span> ];<br>   <span class="hljs-keyword">then</span> BOOTSTRAP_TOKEN=`<span class="hljs-built_in">cat</span> /dev/urandom | <span class="hljs-built_in">tr</span> -dc A-Za-z0-9 | <span class="hljs-built_in">head</span> -c 16`;<br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;BOOTSTRAP_TOKEN=<span class="hljs-variable">$BOOTSTRAP_TOKEN</span>&quot;</span> &gt;&gt; ~/.bashrc;<br>   <span class="hljs-built_in">echo</span> BOOTSTRAP_TOKEN=<span class="hljs-variable">$BOOTSTRAP_TOKEN</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-built_in">echo</span> BOOTSTRAP_TOKEN=<span class="hljs-variable">$BOOTSTRAP_TOKEN</span>;<br><span class="hljs-keyword">fi</span><br>:wq<br>[root@docker ~]<span class="hljs-comment">#bash key.sh </span><br>SECRET_KEY=GkYTTfwge2HpQDiqjQ7hGqR7vEsSACM4rjgAlRbPE4gM7UKw7J<br>BOOTSTRAP_TOKEN=gdqRJc1By36Rq9pc<br>[root@docker ~]<span class="hljs-comment">#tail -n2 .bashrc</span><br>SECRET_KEY=GkYTTfwge2HpQDiqjQ7hGqR7vEsSACM4rjgAlRbPE4gM7UKw7J<br>BOOTSTRAP_TOKEN=gdqRJc1By36Rq9pc<br></code></pre></td></tr></table></figure><h6 id="6-3-4-2、运行容器"><a href="#6-3-4-2、运行容器" class="headerlink" title="6.3.4.2、运行容器"></a>6.3.4.2、运行容器</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs sh">-----------------------------------------------------------------------------------<br><span class="hljs-comment">#在执行前须确保80端口未被启用，如果之前已经启用会报以下错误</span><br>docker: Error response from daemon: driver failed programming external connectivity on endpoint jms_all (6e30f944775bad02dad4865998908f432c97b740bc2f3f211cbb4f6d1adabf63): Error starting userland proxy: listen tcp4 0.0.0.0:80: <span class="hljs-built_in">bind</span>: address already <span class="hljs-keyword">in</span> use.<br>-----------------------------------------------------------------------------------<br><br>[root@docker ~]<span class="hljs-comment">#docker run --name jms_all -d \</span><br>-v /opt/jumpserver/core/data:/opt/jumpserver/data \<br>-v /opt/jumpserver/koko/data:/opt/koko/data \<br>-v /opt/jumpserver/lion/data:/opt/lion/data \<br>-p 80:80 \<br>-p 2222:2222 \<br>-e SECRET_KEY=GkYTTfwge2HpQDiqjQ7hGqR7vEsSACM4rjgAlRbPE4gM7UKw7J \<br>-e BOOTSTRAP_TOKEN=gdqRJc1By36Rq9pc \<br>-e LOG_LEVEL=ERROR \<br>-e DB_HOST=10.0.0.186 \<br>-e DB_PORT=3306 \<br>-e DB_USER=jumpserver \<br>-e DB_PASSWORD=123456 \<br>-e DB_NAME=jumpserver \<br>-e REDIS_HOST=10.0.0.186 \<br>-e REDIS_PORT=6379 \<br>-e REDIS_PASSWORD=<span class="hljs-string">&#x27;&#x27;</span> \<br>--privileged=<span class="hljs-literal">true</span> \<br>jumpserver/jms_all<br><br>-----------------------------------------------------------------------------------<br><span class="hljs-comment">#如果报以下错误：说明jms_all被占用，需要删除或者重命名</span><br>docker: Error response from daemon: Conflict. The container name <span class="hljs-string">&quot;/jms_all&quot;</span> is already <span class="hljs-keyword">in</span> use by container <span class="hljs-string">&quot;10aecc51ec5bfd5a8121480a49bfdba40c6218868f1ac2f4e76ce685e3ef4412&quot;</span>. You have to remove (or rename) that container to be able to reuse that name.<br><span class="hljs-comment">#删除方法：</span><br>[root@docker ~]<span class="hljs-comment">#docker ps -a            #先查看现在运行的程序</span><br>CONTAINER ID   IMAGE                COMMAND                  CREATED             STATUS             PORTS                                                  NAMES<br>10aecc51ec5b   jumpserver/jms_all   <span class="hljs-string">&quot;./entrypoint.sh&quot;</span>        17 minutes ago      Created                                                                   jms_all<br>ea0fcb85ce50   redis                <span class="hljs-string">&quot;docker-entrypoint.s…&quot;</span>   About an hour ago   Up About an hour   0.0.0.0:6379-&gt;6379/tcp, :::6379-&gt;6379/tcp              redis<br>26371d0aad4b   mysql:5.7.30         <span class="hljs-string">&quot;docker-entrypoint.s…&quot;</span>   About an hour ago   Up About an hour   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql<br>[root@docker ~]<span class="hljs-comment">#docker rm jms_all        #删除jms_all</span><br>jms_all<br>-----------------------------------------------------------------------------------<br></code></pre></td></tr></table></figure><h6 id="6-3-4-3、验证是否成功"><a href="#6-3-4-3、验证是否成功" class="headerlink" title="6.3.4.3、验证是否成功"></a>6.3.4.3、验证是否成功</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@docker ~]<span class="hljs-comment">#docker logs -f jms_all</span><br>......<br>2022-12-01 12:51:29 JumpServer version v2.17.2, more see https://www.jumpserver.org<br>Migrate model org <span class="hljs-built_in">id</span>: UserGroupStarting supervisor: supervisord.<br>Jumpserver ALL v2.17.2<br>官网 http://www.jumpserver.org<br>文档 http://docs.jumpserver.org<br><br>进入容器命令 docker <span class="hljs-built_in">exec</span> -it jms_all /bin/bash<br><br><span class="hljs-comment">#下面就可以在浏览器里直接输入ip地址访问了</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221201130318586.png" alt="image-20221201130318586"></a></p><p><strong>注意：首次登录的初始账号和密码均为admin</strong></p><p>登录进去后，会立刻让更改密码</p><p><a href=""><img src="image-20221201130505437.png" alt="image-20221201130505437"></a></p><p>更改密码后重新登录</p><p><a href=""><img src="image-20221201170207670.png" alt="image-20221201170207670"></a></p><h4 id="6-4、用户授权和行为审计"><a href="#6-4、用户授权和行为审计" class="headerlink" title="6.4、用户授权和行为审计"></a>6.4、用户授权和行为审计</h4><h5 id="6-4-1、创建组"><a href="#6-4-1、创建组" class="headerlink" title="6.4.1、创建组"></a>6.4.1、创建组</h5><p>创建开发组和测试组</p><p><a href=""><img src="image-20221201173556242.png" alt="image-20221201173556242"></a></p><p><a href=""><img src="image-20221201173734350.png" alt="image-20221201173734350"></a></p><h5 id="6-4-2、创建用户并加入组"><a href="#6-4-2、创建用户并加入组" class="headerlink" title="6.4.2、创建用户并加入组"></a>6.4.2、创建用户并加入组</h5><p>创建用户：xiaoming并加入开发组</p><p><a href=""><img src="image-20221202090518852.png" alt="image-20221202090518852"></a></p><p><a href=""><img src="image-20221201180305733.png" alt="image-20221201180305733"></a></p><p>创建用户：xiaohong并加入测试组</p><p><a href=""><img src="image-20221201180521002.png" alt="image-20221201180521002"></a></p><p>登录账户：xiaoming，首次登录需要完善个人信息</p><p><a href=""><img src="image-20221201181249048.png" alt="image-20221201181249048"></a></p><h5 id="6-4-3、创建系统审计员"><a href="#6-4-3、创建系统审计员" class="headerlink" title="6.4.3、创建系统审计员"></a>6.4.3、创建系统审计员</h5><p>创建系统审计员：mage</p><p><a href=""><img src="image-20221201181034200.png" alt="image-20221201181034200"></a></p><p>登录账户：mage，左侧管理向与普通用户不同</p><p><a href=""><img src="image-20221201181526636.png" alt="image-20221201181526636"></a></p><h5 id="6-4-4、创建管理用户"><a href="#6-4-4、创建管理用户" class="headerlink" title="6.4.4、创建管理用户"></a>6.4.4、创建管理用户</h5><p>管理用户是jumpServer用来管理后端服务器或其它资产的管理员用户,此用户必须对后端服务器有管理权限</p><p><strong>管理用户特点:</strong></p><p>①通常是后端服务器的root或者是具备root权限的超级用户</p><p>②用于推送或者是创建系统用户</p><p>③用于获取被管理的硬件资产信息</p><p><a href=""><img src="image-20221201181844951.png" alt="image-20221201181844951"></a></p><p><a href=""><img src="image-20221201182211875.png" alt="image-20221201182211875"></a></p><h5 id="6-4-5、创建资产并实现资产分类"><a href="#6-4-5、创建资产并实现资产分类" class="headerlink" title="6.4.5、创建资产并实现资产分类"></a>6.4.5、创建资产并实现资产分类</h5><p>创建可以被jumpServer用户访问的后端服务器和其它资产,比如:路由器,交换机等</p><p><a href=""><img src="image-20221201182544795.png" alt="image-20221201182544795"></a></p><p><a href=""><img src="image-20221201182843812.png" alt="image-20221201182843812"></a></p><p><a href=""><img src="image-20221201183120445.png" alt="image-20221201183120445"></a></p><p>开发环境和测试环境各加入一台服务器</p><p><a href=""><img src="image-20221201183341015.png" alt="image-20221201183341015"></a></p><h5 id="6-4-6、创建系统用户"><a href="#6-4-6、创建系统用户" class="headerlink" title="6.4.6、创建系统用户"></a>6.4.6、创建系统用户</h5><p>系统用户是分配给JumpServer用户,用来让JumpServer用户在连接后端服务器和其它资产,一般不会给管理权限</p><p>生产环境中,一般都会利用自动化运维工具提前在后端服务器创建好系统用户,在所有后端服务器统一用户ID信息,而非在jumpserver中创建</p><p><a href=""><img src="image-20221201183910518.png" alt="image-20221201183910518"></a></p><p><a href=""><img src="image-20221201184417858.png" alt="image-20221201184417858"></a></p><p>创建ceshi和kaifa用户</p><p><a href=""><img src="image-20221201184535208.png" alt="image-20221201184535208"></a></p><h5 id="6-4-7、关联使用系统用户的资产"><a href="#6-4-7、关联使用系统用户的资产" class="headerlink" title="6.4.7、关联使用系统用户的资产"></a>6.4.7、关联使用系统用户的资产</h5><p>将前面创建的系统用户推送到后端服务器并自动创建</p><p>在系统用户中添加使用此用户的资产</p><p><a href=""><img src="image-20221201184718588.png" alt="image-20221201184718588"></a></p><p><a href=""><img src="image-20221201184932906.png" alt="image-20221201184932906"></a></p><h5 id="6-4-8、创建授权规则"><a href="#6-4-8、创建授权规则" class="headerlink" title="6.4.8、创建授权规则"></a>6.4.8、创建授权规则</h5><p>通过授权规则, 为JumpServer用户分配可以访问的资产及使用的系统用户</p><p><a href=""><img src="image-20221201185653371.png" alt="image-20221201185653371"></a></p><p>开发组授权</p><p><a href=""><img src="image-20221201185502685.png" alt="image-20221201185502685"></a></p><p>测试组授权</p><p><a href=""><img src="image-20221201185607673.png" alt="image-20221201185607673"></a></p><h5 id="6-4-9、测试登录访问后端服务器"><a href="#6-4-9、测试登录访问后端服务器" class="headerlink" title="6.4.9、测试登录访问后端服务器"></a>6.4.9、测试登录访问后端服务器</h5><p><a href=""><img src="image-20221201185948662.png" alt="image-20221201185948662"></a></p><p>开发组xiaoming登录后端</p><p><a href=""><img src="image-20221201190140452.png" alt="image-20221201190140452"></a></p><h5 id="6-4-9、ssh连接jumpserver"><a href="#6-4-9、ssh连接jumpserver" class="headerlink" title="6.4.9、ssh连接jumpserver"></a>6.4.9、ssh连接jumpserver</h5><p>JumpServer 还支持用户通过ssh连接其2222/tcp端口进行访问</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#ssh -p2222 xiaoming@10.0.0.186    #10.0.0.186是搭建jumpserver的服务器 </span><br>xiaoming,  JumpServer 开源堡垒机<br><br>1) 输入 部分IP，主机名，备注 进行搜索登录(如果唯一).<br>2) 输入 / + IP，主机名，备注 进行搜索，如：/192.168.<br>3) 输入 p 进行显示您有权限的主机.<br>4) 输入 g 进行显示您有权限的节点.<br>5) 输入 d 进行显示您有权限的数据库.<br>6) 输入 k 进行显示您有权限的Kubernetes.<br>7) 输入 r 进行刷新最新的机器和节点信息.<br>8) 输入 h 进行显示帮助.<br>9) 输入 q 进行退出.<br>Opt&gt; <br></code></pre></td></tr></table></figure><h5 id="6-4-10、数据库授权"><a href="#6-4-10、数据库授权" class="headerlink" title="6.4.10、数据库授权"></a>6.4.10、数据库授权</h5><h6 id="6-4-10-1、在后端服务器创建数据库"><a href="#6-4-10-1、在后端服务器创建数据库" class="headerlink" title="6.4.10.1、在后端服务器创建数据库"></a>6.4.10.1、在后端服务器创建数据库</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@mysql ~]<span class="hljs-comment">#yum -y install mysql-server</span><br>[root@mysql ~]<span class="hljs-comment">#systemctl enable --now mysqld</span><br>Created symlink /etc/systemd/system/multi-user.target.wants/mysqld.service → /usr/lib/systemd/system/mys<br>[root@mysql ~]<span class="hljs-comment">#mysql</span><br>mysql&gt; create database wordpress;<br>mysql&gt; create user wordpress@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br>mysql&gt; grant all on wordpress.* to wordpress@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span>;<br></code></pre></td></tr></table></figure><h6 id="6-4-10-2、创建数据库应用"><a href="#6-4-10-2、创建数据库应用" class="headerlink" title="6.4.10.2、创建数据库应用"></a>6.4.10.2、创建数据库应用</h6><p>应用管理–数据库–创建</p><p><a href=""><img src="image-20221201193905625.png" alt="image-20221201193905625"></a></p><h6 id="6-4-10-3、创建数据库的系统用户"><a href="#6-4-10-3、创建数据库的系统用户" class="headerlink" title="6.4.10.3、创建数据库的系统用户"></a>6.4.10.3、创建数据库的系统用户</h6><p>创建针对数据库的专用系统用户</p><p><strong>注意:协议选择mysql</strong></p><p><a href=""><img src="image-20221201194235233.png" alt="image-20221201194235233"></a></p><p><a href=""><img src="image-20221201194506992.png" alt="image-20221201194506992"></a></p><h6 id="6-4-10-4、创建数据库授权规则"><a href="#6-4-10-4、创建数据库授权规则" class="headerlink" title="6.4.10.4、创建数据库授权规则"></a>6.4.10.4、创建数据库授权规则</h6><p>权限管理–应用授权</p><p><a href=""><img src="image-20221201194825919.png" alt="image-20221201194825919"></a></p><p>数据库授权给测试组使用</p><p><a href=""><img src="image-20221201195123403.png" alt="image-20221201195123403"></a></p><h6 id="6-4-10-5、测试数据库连接"><a href="#6-4-10-5、测试数据库连接" class="headerlink" title="6.4.10.5、测试数据库连接"></a>6.4.10.5、测试数据库连接</h6><p><a href=""><img src="image-20221201195449263.png" alt="image-20221201195449263"></a></p><h5 id="6-4-11、会话管理"><a href="#6-4-11、会话管理" class="headerlink" title="6.4.11、会话管理"></a>6.4.11、会话管理</h5><p>会话管理-命令记录、历史会话里面可以看到用户操作过并且已经退出的录像记录</p><p><strong>在线会话</strong></p><p><a href=""><img src="image-20221201195827167.png" alt="image-20221201195827167"></a></p><p><strong>历史会话</strong></p><p><a href=""><img src="image-20221201200002381.png" alt="image-20221201200002381"></a></p><h3 id="七、JVM垃圾回收原理，JVM调优。"><a href="#七、JVM垃圾回收原理，JVM调优。" class="headerlink" title="七、JVM垃圾回收原理，JVM调优。"></a>七、JVM垃圾回收原理，JVM调优。</h3><p><strong>对于垃圾回收,需要解决三个问题</strong></p><p>①哪些是垃圾要回收</p><p>②怎么回收垃圾</p><p>③什么时候回收垃圾</p><h4 id="7-1、确定垃圾的方法"><a href="#7-1、确定垃圾的方法" class="headerlink" title="7.1、确定垃圾的方法"></a>7.1、确定垃圾的方法</h4><p>①引用计数: 每一个堆内对象上都与一个私有引用计数器，记录着被引用的次数，引用计数清零，该对象所占用堆内存就可以被回收。循环引用的对象都无法将引用计数归零，就无法清除。Python中即使用此种方式</p><p>②根搜索(可达)算法 Root Searching</p><p><a href=""><img src="image-20221202091339692.png" alt="image-20221202091339692"></a></p><h4 id="7-2、垃圾回收基本算法"><a href="#7-2、垃圾回收基本算法" class="headerlink" title="7.2、垃圾回收基本算法"></a>7.2、垃圾回收基本算法</h4><p><strong>方法一：标记-清除 Mark-Sweep</strong></p><p>分垃圾标记阶段和内存释放两个阶段。</p><p>①标记阶段，找到所有可访问对象打个标记。清理阶段，遍历整个堆</p><p>②对未标记对象(即不再使用的对象)逐一进行清理。</p><p><strong>特点：</strong></p><p>优点：算法简单</p><p>缺点：标记-清除最大的问题会造成<strong>内存碎片</strong>,但是不浪费空间,效率较高(如果对象较多时,逐一删除效率也会受到影响)</p><p><strong>方法二：标记-压缩 (压实)Mark-Compact</strong></p><p>分垃圾标记阶段和内存整理两个阶段。</p><p>①标记阶段，找到所有可访问对象打个标记。</p><p>②内存清理阶段时，整理时将对象向内存一端移动，整理后存活对象连续的集中在内存一端。</p><p><strong>特点：</strong></p><p>标记-压缩算法好处是整理后内存空间连续分配，有大段的连续内存可分配，没有内存碎片。</p><p>缺点是内存整理过程有消耗,效率相对低下</p><p><strong>方法三：复制Copying</strong></p><p>先将可用内存分为大小相同两块区域A和B，每次只用其中一块，比如A。当A用完后，则将A中存活的对象复制到B。复制到B的时候连续的使用内存，最后将A一次性清除干净。</p><p><strong>特点</strong>：</p><p>好处是没有碎片，复制过程中保证对象使用连续空间,且一次性清除所有垃圾,所以即使对象很多，收回效率也很高</p><p>缺点是比较浪费内存，只能使用原来一半内存，因为内存对半划分了，复制过程毕竟也是有代价。</p><p><strong>总结：</strong></p><p>没有最好的算法,在不同场景选择最合适的算法</p><p>①效率: 复制算法&gt;标记清除算法&gt; 标记压缩算法</p><p>②内存整齐度: 复制算法=标记压缩算法&gt; 标记清除算法</p><p>③内存利用率: 标记压缩算法=标记清除算法&gt;复制算法</p><h4 id="7-3、垃圾回收的原理"><a href="#7-3、垃圾回收的原理" class="headerlink" title="7.3、垃圾回收的原理"></a>7.3、垃圾回收的原理</h4><p><strong>分代堆内存GC策略：</strong>对不同数据进行区分管理，不同分区对数据实施不同回收策略，分而治之。</p><p><strong>堆内存分代</strong>将heap内存空间分为三个不同类别: <strong>年轻代、老年代、持久代</strong></p><p>①<strong>年轻代Young</strong>：Young Generation</p><p>​      ——<strong>伊甸园区eden</strong>: 只有一个,刚刚创建的对象</p><p>​      ——<strong>幸存(存活)区Servivor Space：</strong>有2个幸存区，一个是from区，一个是to区。大小相等、地位相同、可互换</p><p>​                   ——from 指的是本次复制数据的源区</p><p>​                   ——to 指的是本次复制数据的目标区</p><p>②<strong>老年代Tenured：</strong>Old Generation, 长时间存活的对象</p><p>**默认空间大小比例:**默认JVM试图分配最大内存的总内存的1/4,初始化默认总内存为总内存的1/64,年青代中heap的1/3，老年代占2/3</p><p><a href=""><img src="image-20221202093100290.png" alt="image-20221202093100290"></a></p><p>③<strong>永久代：</strong>JDK1.7之前使用, 即Method Area方法区,保存JVM自身的类和方法,存储JAVA运行时的环境信息,JDK1.8后 改名为 MetaSpace,此空间不存在垃圾回收,关闭JVM会释放此区域内存,此空间物理上不属于heap内存,但逻辑上存在于heap内存</p><p>​      ——永久代必须指定大小限制,字符串常量JDK1.7存放在永久代,1.8后存放在heap中</p><p>​      ——MetaSpace 可以设置,也可不设置,无上限</p><p><strong>规律: 一般情况99%的对象都是临时对象</strong></p><h5 id="7-3-1、年轻代回收Minor-GC"><a href="#7-3-1、年轻代回收Minor-GC" class="headerlink" title="7.3.1、年轻代回收Minor GC"></a>7.3.1、年轻代回收Minor GC</h5><p>①起始时，所有新建对象(特大对象直接进入老年代)都出生在eden，当eden满了，<strong>启动GC</strong>。这个称</p><p>为<strong>Young GC</strong> 或者 <strong>Minor GC</strong>。 </p><p>②先<strong>标记</strong>eden存活对象，然后将存活对象<strong>复制</strong>到s0（假设本次是s0，也可以是s1，它们可以调</p><p>换），eden剩余所有空间都清空。<strong>GC完成</strong>。 </p><p>③继续新建对象，当eden再次满了，<strong>启动GC</strong>。 </p><p>④先同时<strong>标记</strong>eden和s0中存活对象，然后将存活对象<strong>复制</strong>到s1。将eden和s0清空,此次<strong>GC完成</strong></p><p>⑤继续新建对象，当eden满了，<strong>启动GC</strong>。 </p><p>⑥ 先<strong>标记</strong>eden和s1中存活对象，然后将存活对象<strong>复制</strong>到s0。将eden和s1清空,此次<strong>GC完成</strong></p><p>以后就重复上面的步骤。</p><p>通常场景下,大多数对象都不会存活很久，而且创建活动非常多，新生代就需要频繁垃圾回收。</p><p>但是，如果一个对象一直存活，它最后就在from、to来回复制，如果from区中对象复制次数达到阈值</p><p>(默认15次,CMS为6次,可通过java的选项 <strong>-XX:MaxTenuringThreshold=N</strong> 指定)，就直接复制到老年</p><p>代。</p><h5 id="7-3-2、老年代回收Major-GC"><a href="#7-3-2、老年代回收Major-GC" class="headerlink" title="7.3.2、老年代回收Major GC"></a>7.3.2、老年代回收Major GC</h5><p>进入老年代的数据较少，所以老年代区被占满的速度较慢，所以垃圾回收也不频繁。</p><p>如果老年代也满了,会触发老年代GC,称为<strong>Old GC</strong>或者 <strong>Major GC</strong>。</p><p>由于老年代对象一般来说存活次数较长，所以较常采用<strong>标记-压缩</strong>算法。</p><p>当老年代满时,会触发 <strong>Full GC</strong>,即对所有”代”的内存进行垃圾回收</p><p>Minor GC比较频繁，Major GC较少。但一般Major GC时，由于老年代对象也可以引用新生代对象，所</p><p>以先进行一次Minor GC，然后在Major GC会提高效率。可以认为回收老年代的时候完成了一次Full GC。</p><p>所以可以认为 <strong>MajorGC = FullGC</strong></p><h4 id="7-4、JVM参数的选项分类"><a href="#7-4、JVM参数的选项分类" class="headerlink" title="7.4、JVM参数的选项分类"></a>7.4、JVM参数的选项分类</h4><p>Java 命令行参考文档: <a href="https://docs.oracle.com/javase/8/docs/technotes/tools/unix/java.html">https://docs.oracle.com/javase/8/docs/technotes/tools/unix/java.html</a></p><p><strong>选项分类</strong></p><p><strong>-选项名称</strong> 此为标准选项,所有HotSpot都支持</p><p><strong>-X选项名称</strong> 此为稳定的非标准选项</p><p><strong>-XX:选项名称</strong> 非标准的不稳定选项，下一个版本可能会取消</p><h4 id="7-5、jvm调优"><a href="#7-5、jvm调优" class="headerlink" title="7.5、jvm调优"></a>7.5、jvm调优</h4><p><strong>注意: 在不同领域和场景对JVM需要不同的调整策略</strong></p><p>减少 STW 时长，串行变并行</p><p>减少 GC 次数，要分配合适的内存大小</p><p><strong>一般情况下，大概可以使用以下原则：</strong></p><p>客户端或较小程序，内存使用量不大，可以使用串行回收</p><p>对于服务端大型计算，可以使用并行回收</p><p>大型WEB应用，用户端不愿意等待，尽量少的STW，可以使用并发回收</p><p><strong>①调整-Xms值和-Xmx值</strong></p><p>将-Xms值和-Xmx值设置为一样大小，避免内存不够用时来回申请</p><p>​         -Xms：设置应用程序<strong>初始</strong>使用的堆内存大小（年轻代+老年代）</p><p>​         -Xmx：设置应用程序能获得的<strong>最大</strong>堆内存；早期JVM不建议超过32G，内存管理效率下降 </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#导入一个显示虚拟机（JVM）heap空间的java程序</span><br>[root@tomcat1 ~]<span class="hljs-comment">#ls</span><br>Heap.java<br>[root@tomcat1 ~]<span class="hljs-comment">#javac Heap.java </span><br>[root@tomcat1 ~]<span class="hljs-comment">#ls</span><br>Heap.class  Heap.java<br>[root@tomcat1 ~]<span class="hljs-comment">#java Heap</span><br>max=478150656字节456.0MB               <span class="hljs-comment">#heap最大可使用空间</span><br>total=31457280字节30.0MB            <span class="hljs-comment">#初始设置的heap空间</span><br>[root@tomcat1 ~]<span class="hljs-comment">#java -Xmx1g -Xms1g Heap</span><br>max=1073741824字节1024.0MB<br>total=1073741824字节1024.0MB<br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#更改Tomcat的heap空间大小</span><br>[root@tomcat2 tomcat]<span class="hljs-comment">#vim bin/catalina.sh</span><br>JAVA_OPTS=<span class="hljs-string">&quot;-Xms4g -Xmx4g&quot;</span><br>:wq<br>[root@tomcat2 tomcat]<span class="hljs-comment">#systemctl restart tomcat</span><br><br>*************************************************************************<br><br>JAVA_OPTS=<span class="hljs-string">&quot;-server -Xms4g -Xmx4g -XX:NewSize= -XX:MaxNewSize= &quot;</span><br>-server：服务器模式<br>-Xms：堆内存初始化大小<br>-Xmx：堆内存空间上限<br>-XX:NewSize=：新生代空间初始化大小<br>-XX:MaxNewSize=：新生代空间最大值<br></code></pre></td></tr></table></figure><p>更改前heap大小</p><p><a href=""><img src="image-20221203124240190.png" alt="image-20221203124240190"></a></p><p>更改后heap大小</p><p><a href=""><img src="image-20221203124653941.png" alt="image-20221203124653941"></a></p><p><strong>②指定垃圾回收器的种类</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#查看java的垃圾回收器的种类</span><br>[root@tomcat1 tomcat]<span class="hljs-comment">#java -XX:+PrintCommandLineFlags -version</span><br>-XX:G1ConcRefinementThreads=2 -XX:GCDrainStackTargetSize=64 -XX:InitialHeapSize=29808512 -XX:MaxHeapSize=476936192 -XX:+PrintCommandLineFlags -XX:ReservedCodeCacheSize=251658240 -XX:+SegmentedCodeCache -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseG1GC<br><span class="hljs-comment">#-XX:+UseG1GC这是新版本的垃圾回收器，已经不分代了</span><br><br><span class="hljs-comment">#JVM 1.8 默认的垃圾回收器：PS + ParallelOld（高吞吐量，但交互式体验差）,所以大多数都是针对此进行调优，改成-XX:+UseConcMarkSweepGC垃圾回收器（交互式体验好）</span><br><span class="hljs-comment">#更改Tomcat的垃圾回收器</span><br>[root@tomcat2 tomcat]<span class="hljs-comment">#vim bin/catalina.sh</span><br>JAVA_OPTS=<span class="hljs-string">&quot;-Xms4g -Xmx4g -XX:+UseConcMarkSweepGC  -XX:+UseCMSCompactAtFullCollection -XX:CMSFullGCsBeforeCompaction=5&quot;</span><br>:wq<br>[root@tomcat2 tomcat]<span class="hljs-comment">#systemctl restart tomcat</span><br><br>**************************************************************************<br>-XX:+UseConcMarkSweepGC<br>     新生代使用ParNew, 老年代优先使用CMS，备选方式为Serial Old<br>     响应时间要短，停顿短使用这个垃圾收集器<br>     -XX:CMSInitiatingOccupancyFraction=N，N为0-100整数表示达到老年代的大小的百分比多少触发回收默认68<br>     -XX:+UseCMSCompactAtFullCollection 开启此值,在CMS收集后，进行内存碎片整理<br>     -XX:CMSFullGCsBeforeCompaction=N 设定多少次CMS后，进行一次内存碎片整理<br>     -XX:+CMSParallelRemarkEnabled 降低标记停顿<br></code></pre></td></tr></table></figure><p><strong>③线程池调整</strong></p><p>常用属性：</p><p>​        ①connectionTimeout ：连接超时时长,单位ms</p><p>​        ②maxThreads：最大线程数，默认200  </p><p>​        ③minSpareThreads：最小空闲线程数</p><p>​        ④maxSpareThreads：最大空闲线程数</p><p>​        ⑤acceptCount：当启动线程满了之后，等待队列的最大长度，默认100</p><p>​        ⑥URIEncoding：URI 地址编码格式，建议使用 UTF-8</p><p>​        ⑦enableLookups：是否启用客户端主机名的DNS反向解析，缺省禁用，建议禁用，就使用客户端IP就行</p><p>​        ⑧compression：是否启用传输压缩机制，建议 “on”，CPU和流量的平衡</p><p>​                    —compressionMinSize：启用压缩传输的数据流最小值，单位是字节</p><p>​                    —compressableMimeType：定义启用压缩功能的MIME类型text/html, text/xml, text/css,text/javascript</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#增大最大线程数，即增加可连接的客户数</span><br>[root@tomcat1 tomcat]<span class="hljs-comment">#vim /usr/local/tomcat/conf/server.xml</span><br>    &lt;Connector port=<span class="hljs-string">&quot;8080&quot;</span> protocol=<span class="hljs-string">&quot;HTTP/1.1&quot;</span><br>               connectionTimeout=<span class="hljs-string">&quot;20000&quot;</span><br>               redirectPort=<span class="hljs-string">&quot;8443&quot;</span> maxThreads=<span class="hljs-string">&quot;2000&quot;</span> /&gt;<br><span class="hljs-comment">#增加maxThreads=&quot;2000&quot;</span><br>:wq<br>[root@tomcat1 tomcat]<span class="hljs-comment">#systemctl restart tomcat</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221203133648027.png" alt="image-20221203133648027"></a></p><h3 id="八、tomcat实现java应用发布。"><a href="#八、tomcat实现java应用发布。" class="headerlink" title="八、tomcat实现java应用发布。"></a>八、tomcat实现java应用发布。</h3><h4 id="8-1、部署基于JAVA的博客系统JPress"><a href="#8-1、部署基于JAVA的博客系统JPress" class="headerlink" title="8.1、部署基于JAVA的博客系统JPress"></a>8.1、部署基于JAVA的博客系统JPress</h4><p>官方网站：<a href="http://www.jpress.io/">http://www.jpress.io/</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#cd /usr/local/tomcat/webapps</span><br><span class="hljs-comment">#将jpress-v4.0.7.war放入此目录下自动解压缩生成jpress-v4.0.7（注意：需要在Tomcat启动下）</span><br>[root@Rocky webapps]<span class="hljs-comment">#ls</span><br>docs  examples  host-manager  jpress-v4.0.7  jpress-v4.0.7.war  manager  ROOT<br><span class="hljs-comment">#包的名字非常重要，此时访问ip:8080/jpress-v4.0.7非常不方便。所以最好在将war包放到此目录前更改名称，比如博客blog</span><br><br><span class="hljs-comment">#先将jpress-v4.0.7.war移走，jpress-v4.0.7自动消失</span><br>[root@Rocky webapps]<span class="hljs-comment">#mv jpress-v4.0.7.war  /opt</span><br>[root@Rocky webapps]<span class="hljs-comment">#ls</span><br>docs  examples  host-manager  manager  ROOT<br>[root@Rocky webapps]<span class="hljs-comment">#cd /opt</span><br>[root@Rocky opt]<span class="hljs-comment">#mv jpress-v4.0.7.war  /usr/local/tomcat/webapps/blog.war</span><br>[root@Rocky opt]<span class="hljs-comment">#cd -</span><br>/usr/local/tomcat/webapps<br>[root@Rocky webapps]<span class="hljs-comment">#ls</span><br>blog  blog.war  docs  examples  host-manager  manager  ROOT<br><span class="hljs-comment">#此时只需要输入ip:8080/blog即可访问了</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221202143633554.png" alt="image-20221202143633554"></a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#准备数据库和用户授权</span><br>[root@Rocky webapps]<span class="hljs-comment">#yum -y install mysql-server ; systemctl enable --now mysqld</span><br>[root@Rocky webapps]<span class="hljs-comment">#mysql</span><br>mysql&gt; create database jpress;<br>mysql&gt; create user jpress@<span class="hljs-string">&#x27;localhost&#x27;</span> identified by <span class="hljs-string">&#x27;123456&#x27;</span>;   <span class="hljs-comment">#因数据库安在本机，所以是localhost</span><br>mysql&gt; grant all on jpress.* to jpress@<span class="hljs-string">&#x27;localhost&#x27;</span>;<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221202144619511.png" alt="image-20221202144619511"></a></p><p><a href=""><img src="image-20221202144804984.png" alt="image-20221202144804984"></a></p><p><a href=""><img src="image-20221202144839440.png" alt="image-20221202144839440"></a></p><p><a href=""><img src="image-20221202144901645.png" alt="image-20221202144901645"></a></p><p>此后输入10.0.0.186:8080/blog即可登录网页，但不是网站后端</p><p><a href=""><img src="image-20221202145157542.png" alt="image-20221202145157542"></a></p><p>此后输入10.0.0.186:8080/blog/用户名即可登录网站后端</p><p><a href=""><img src="image-20221202145536310.png" alt="image-20221202145536310"></a></p><h3 id="九、实现tomcat-session粘性，并验证过程。"><a href="#九、实现tomcat-session粘性，并验证过程。" class="headerlink" title="九、实现tomcat session粘性，并验证过程。"></a>九、实现tomcat session粘性，并验证过程。</h3><p><a href=""><img src="image-20221202184926676.png" alt="image-20221202184926676"></a></p><h4 id="9-1、Tomcat配置"><a href="#9-1、Tomcat配置" class="headerlink" title="9.1、Tomcat配置"></a>9.1、Tomcat配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@tomcat1 ~]<span class="hljs-comment">#cd /usr/local/tomcat</span><br>[root@tomcat1 tomcat]<span class="hljs-comment">#vim conf/server.xml</span><br>&lt;Host name=<span class="hljs-string">&quot;www.magedu.org&quot;</span>  appBase=<span class="hljs-string">&quot;/data/tomcat/node1/&quot;</span><br>            unpackWARs=<span class="hljs-string">&quot;true&quot;</span> autoDeploy=<span class="hljs-string">&quot;true&quot;</span>&gt;<br>        &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> directory=<span class="hljs-string">&quot;logs&quot;</span><br>               prefix=<span class="hljs-string">&quot;node1_access_log&quot;</span> suffix=<span class="hljs-string">&quot;.txt&quot;</span><br>               pattern=<span class="hljs-string">&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot;</span> /&gt;<br>      &lt;/Host&gt;<br>:wq<br>[root@tomcat1 ~]<span class="hljs-comment">#mkdir -p /data/tomcat/node1/ROOT</span><br>[root@tomcat1 ~]<span class="hljs-comment">#cd /data/tomcat/node1/ROOT</span><br>[root@tomcat1 ROOT]<span class="hljs-comment">#vim index.jsp</span><br>[root@tomcat1 ROOT]<span class="hljs-comment">#cat index.jsp </span><br>&lt;%@ page import=<span class="hljs-string">&quot;java.util.*&quot;</span> %&gt;<br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;<br>&lt;<span class="hljs-built_in">head</span>&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;title&gt;tomcat <span class="hljs-built_in">test</span>&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h1&gt; Tomcat Website node1 &lt;/h1&gt;<br>&lt;div&gt;On  &lt;%=request.getServerName() %&gt;&lt;/div&gt;<br>&lt;div&gt;&lt;%=request.getLocalAddr() + <span class="hljs-string">&quot;:&quot;</span> + request.getLocalPort() %&gt;&lt;/div&gt;<br>&lt;div&gt;SessionID = &lt;span style=<span class="hljs-string">&quot;color:blue&quot;</span>&gt;&lt;%=session.getId() %&gt;&lt;/span&gt;&lt;/div&gt;<br>&lt;%=new Date()%&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br>[root@tomcat1 ~]<span class="hljs-comment">#chown -R tomcat. /data/tomcat/node1/</span><br>[root@tomcat1 ROOT]<span class="hljs-comment">#systemctl restart tomcat</span><br>-----------------------------------------------------------------------------------<br>[root@tomcat2 ~]<span class="hljs-comment">#cd /usr/local/tomcat</span><br>[root@tomcat2 tomcat]<span class="hljs-comment">#vim conf/server.xml</span><br>&lt;Host name=<span class="hljs-string">&quot;www.magedu.org&quot;</span>  appBase=<span class="hljs-string">&quot;/data/tomcat/node2/&quot;</span><br>            unpackWARs=<span class="hljs-string">&quot;true&quot;</span> autoDeploy=<span class="hljs-string">&quot;true&quot;</span>&gt;<br>        &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> directory=<span class="hljs-string">&quot;logs&quot;</span><br>               prefix=<span class="hljs-string">&quot;node2_access_log&quot;</span> suffix=<span class="hljs-string">&quot;.txt&quot;</span><br>               pattern=<span class="hljs-string">&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot;</span> /&gt;<br>      &lt;/Host&gt;<br>:wq<br>[root@tomcat2 ~]<span class="hljs-comment">#mkdir -p /data/tomcat/node2/ROOT</span><br>[root@tomcat2 ~]<span class="hljs-comment">#cd /data/tomcat/node2/ROOT</span><br>[root@tomcat2 ROOT]<span class="hljs-comment">#vim index.jsp</span><br>[root@tomcat2 ROOT]<span class="hljs-comment">#cat index.jsp </span><br>&lt;%@ page import=<span class="hljs-string">&quot;java.util.*&quot;</span> %&gt;<br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;<br>&lt;<span class="hljs-built_in">head</span>&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;title&gt;tomcat <span class="hljs-built_in">test</span>&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h1&gt; Tomcat Website node2 &lt;/h1&gt;<br>&lt;div&gt;On  &lt;%=request.getServerName() %&gt;&lt;/div&gt;<br>&lt;div&gt;&lt;%=request.getLocalAddr() + <span class="hljs-string">&quot;:&quot;</span> + request.getLocalPort() %&gt;&lt;/div&gt;<br>&lt;div&gt;SessionID = &lt;span style=<span class="hljs-string">&quot;color:blue&quot;</span>&gt;&lt;%=session.getId() %&gt;&lt;/span&gt;&lt;/div&gt;<br>&lt;%=new Date()%&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br>[root@tomcat2 ~]<span class="hljs-comment">#chown -R tomcat. /data/tomcat/node2/</span><br>[root@tomcat2 ROOT]<span class="hljs-comment">#systemctl restart tomcat</span><br></code></pre></td></tr></table></figure><h4 id="9-2、DNS解析"><a href="#9-2、DNS解析" class="headerlink" title="9.2、DNS解析"></a>9.2、DNS解析</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@DNS ~]<span class="hljs-comment">#vim /var/named/magedu.org.zone </span><br><span class="hljs-variable">$TTL</span> 1D<br>@         IN    SOA   master  admin.magedu.org ( 6  1D  10M  1D  6H  )<br>                NS    master<br>                NS    slave1<br>master          A     10.0.0.128<br>slave1          A     10.0.0.184<br>node1           A     10.0.0.216<br>node2           A     10.0.0.217 <br>:wq<br>[root@DNS ~]<span class="hljs-comment">#rndc reload</span><br></code></pre></td></tr></table></figure><h4 id="9-3、nginx的配置（反向代理与负载均衡）"><a href="#9-3、nginx的配置（反向代理与负载均衡）" class="headerlink" title="9.3、nginx的配置（反向代理与负载均衡）"></a>9.3、nginx的配置（反向代理与负载均衡）</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@nginx ~]<span class="hljs-comment">#vim /apps/nginx/conf/nginx.conf</span><br>http &#123;<br>    upstream tomcat &#123;                    <span class="hljs-comment">#添加此模块</span><br>        server 10.0.0.216:8080;<br>        server 10.0.0.217:8080;<br>    &#125;<br><br>    server &#123;<br>        listen       80;<br>        server_name  localhost;<br>        location / &#123;<br>            root   html;<br>            index  index.html index.htm;<br>            proxy_pass http://tomcat;      <span class="hljs-comment">#添加以下两行</span><br>            proxy_set_header Host <span class="hljs-variable">$http_host</span>;<br>        &#125;<br>    &#125;<br>&#125;<br>:wq<br>[root@nginx ~]<span class="hljs-comment">#systemctl restart nginx</span><br><span class="hljs-comment">#此时访问方式是轮询，但session一直发生变化</span><br></code></pre></td></tr></table></figure><h5 id="9-3-1、保持session不发生变化"><a href="#9-3-1、保持session不发生变化" class="headerlink" title="9.3.1、保持session不发生变化"></a>9.3.1、保持session不发生变化</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@nginx ~]<span class="hljs-comment">#vim /apps/nginx/conf/nginx.conf</span><br>    upstream tomcat &#123;<br>        <span class="hljs-built_in">hash</span> <span class="hljs-variable">$cookie_JSESSIONID</span>;       <span class="hljs-comment">#添加此行，当jsession相同时，就往同一台机器上调度</span><br>        server 10.0.0.216:8080;<br>        server 10.0.0.217:8080;<br>    &#125;<br>:wq<br>[root@nginx ~]<span class="hljs-comment">#systemctl restart nginx</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221202185333822.png" alt="image-20221202185333822"></a></p><p><a href=""><img src="image-20221202185406445.png" alt="image-20221202185406445"></a></p><h3 id="十、实现tomcat会话复制集群。"><a href="#十、实现tomcat会话复制集群。" class="headerlink" title="十、实现tomcat会话复制集群。"></a>十、实现tomcat会话复制集群。</h3><p>Tomcat 官方实现了 Session 的复制集群,将每个Tomcat的Session进行相互的复制同步,从而保证所有Tomcat都有相同的Session信息.</p><p>10.1、配置说明</p><p>官方文档：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://tomcat.apache.org/tomcat-10.0-doc/cluster-howto.html https://tomcat.apache.org/tomcat-9.0-doc/cluster-howto.html https://tomcat.apache.org/tomcat-8.5-doc/cluster-howto.html<br></code></pre></td></tr></table></figure><p>说明</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs sh">&lt;Cluster className=<span class="hljs-string">&quot;org.apache.catalina.ha.tcp.SimpleTcpCluster&quot;</span><br>         channelSendOptions=<span class="hljs-string">&quot;8&quot;</span>&gt;<br>         <br>  &lt;Manager className=<span class="hljs-string">&quot;org.apache.catalina.ha.session.DeltaManager&quot;</span><br>           expireSessionsOnShutdown=<span class="hljs-string">&quot;false&quot;</span><br>           notifyListenersOnReplication=<span class="hljs-string">&quot;true&quot;</span>/&gt;<br>           <br>  &lt;Channel className=<span class="hljs-string">&quot;org.apache.catalina.tribes.group.GroupChannel&quot;</span>&gt;<br>    &lt;Membership className=<span class="hljs-string">&quot;org.apache.catalina.tribes.membership.McastService&quot;</span><br>                address=<span class="hljs-string">&quot;228.0.0.4&quot;</span> <span class="hljs-comment">#每个集群的多播地址不同，范围224-239.x.x.x</span><br>                port=<span class="hljs-string">&quot;45564&quot;</span> <span class="hljs-comment">#45564/UDP</span><br>                frequency=<span class="hljs-string">&quot;500&quot;</span> <span class="hljs-comment">#间隔500ms发送</span><br>                dropTime=<span class="hljs-string">&quot;3000&quot;</span>/&gt; <span class="hljs-comment">#故障阈值3s</span><br>    &lt;Receiver className=<span class="hljs-string">&quot;org.apache.catalina.tribes.transport.nio.NioReceiver&quot;</span><br>              address=<span class="hljs-string">&quot;auto&quot;</span> <span class="hljs-comment">#监听地址,此项建议修改为当前主机的IP</span><br>              port=<span class="hljs-string">&quot;4000&quot;</span> <span class="hljs-comment">#监听端口</span><br>              autoBind=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-comment">#如果端口冲突,自动绑定其它端口,范围是4000- 4100</span><br>              selectorTimeout=<span class="hljs-string">&quot;5000&quot;</span> <span class="hljs-comment">#自动绑定超时时长5s</span><br>              maxThreads=<span class="hljs-string">&quot;6&quot;</span>/&gt;<br>              <br>    &lt;Sender className=<span class="hljs-string">&quot;org.apache.catalina.tribes.transport.ReplicationTransmitter&quot;</span>&gt;<br>    &lt;Transport className=<span class="hljs-string">&quot;org.apache.catalina.tribes.transport.nio.PooledParallelSender&quot;</span>/&gt;    &lt;/Sender&gt;<br>&lt;Interceptor<br>className=<span class="hljs-string">&quot;org.apache.catalina.tribes.group.interceptors.TcpFailureDetector&quot;</span>/&gt;<br>&lt;Interceptor className=<span class="hljs-string">&quot;org.apache.catalina.tribes.group.interceptors.MessageDispatchIntercep tor&quot;</span>/&gt;<br>&lt;/Channel&gt;<br>  &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.ha.tcp.ReplicationValve&quot;</span> filter=<span class="hljs-string">&quot;&quot;</span>/&gt;<br>  &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.ha.session.JvmRouteBinderValve&quot;</span>/&gt;<br>  <br>  &lt;Deployer className=<span class="hljs-string">&quot;org.apache.catalina.ha.deploy.FarmWarDeployer&quot;</span><br>            tempDir=<span class="hljs-string">&quot;/tmp/war-temp/&quot;</span><br>            deployDir=<span class="hljs-string">&quot;/tmp/war-deploy/&quot;</span><br>            watchDir=<span class="hljs-string">&quot;/tmp/war-listen/&quot;</span><br>            watchEnabled=<span class="hljs-string">&quot;false&quot;</span>/&gt;<br>            <br>  &lt;ClusterListener className=<span class="hljs-string">&quot;org.apache.catalina.ha.session.ClusterSessionListener&quot;</span>/&gt;<br>&lt;/Cluster&gt;<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221202192222020.png" alt="image-20221202192222020"></a></p><h4 id="10-1、Tomcat配置"><a href="#10-1、Tomcat配置" class="headerlink" title="10.1、Tomcat配置"></a>10.1、Tomcat配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@tomcat1 ~]<span class="hljs-comment">#cd /usr/local/tomcat</span><br>[root@tomcat1 tomcat]<span class="hljs-comment">#vim conf/server.xml</span><br>&lt;Host name=<span class="hljs-string">&quot;www.magedu.org&quot;</span>  appBase=<span class="hljs-string">&quot;/data/tomcat/node1/&quot;</span><br>            unpackWARs=<span class="hljs-string">&quot;true&quot;</span> autoDeploy=<span class="hljs-string">&quot;true&quot;</span>&gt;<br>        &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> directory=<span class="hljs-string">&quot;logs&quot;</span><br>               prefix=<span class="hljs-string">&quot;node1_access_log&quot;</span> suffix=<span class="hljs-string">&quot;.txt&quot;</span><br>               pattern=<span class="hljs-string">&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot;</span> /&gt;<br><span class="hljs-comment">#下面的可以直接在官网了复制               </span><br>       &lt;Cluster className=<span class="hljs-string">&quot;org.apache.catalina.ha.tcp.SimpleTcpCluster&quot;</span><br>                 channelSendOptions=<span class="hljs-string">&quot;8&quot;</span>&gt;<br><br>          &lt;Manager className=<span class="hljs-string">&quot;org.apache.catalina.ha.session.DeltaManager&quot;</span><br>                   expireSessionsOnShutdown=<span class="hljs-string">&quot;false&quot;</span><br>                   notifyListenersOnReplication=<span class="hljs-string">&quot;true&quot;</span>/&gt;<br><br>          &lt;Channel className=<span class="hljs-string">&quot;org.apache.catalina.tribes.group.GroupChannel&quot;</span>&gt;<br>            &lt;Membership className=<span class="hljs-string">&quot;org.apache.catalina.tribes.membership.McastService&quot;</span><br>                        address=<span class="hljs-string">&quot;228.0.0.4&quot;</span><br>                        port=<span class="hljs-string">&quot;45564&quot;</span><br>                        frequency=<span class="hljs-string">&quot;500&quot;</span><br>                        dropTime=<span class="hljs-string">&quot;3000&quot;</span>/&gt;<br>            &lt;Receiver className=<span class="hljs-string">&quot;org.apache.catalina.tribes.transport.nio.NioReceiver&quot;</span><br>                      address=<span class="hljs-string">&quot;10.0.0.216&quot;</span><br>                      port=<span class="hljs-string">&quot;4000&quot;</span><br>                      autoBind=<span class="hljs-string">&quot;100&quot;</span><br>                      selectorTimeout=<span class="hljs-string">&quot;5000&quot;</span><br>                      maxThreads=<span class="hljs-string">&quot;6&quot;</span>/&gt;<br><br>            &lt;Sender className=<span class="hljs-string">&quot;org.apache.catalina.tribes.transport.ReplicationTransmitter&quot;</span>&gt;<br>              &lt;Transport className=<span class="hljs-string">&quot;org.apache.catalina.tribes.transport.nio.PooledParallelSender&quot;</span>/&gt;<br>            &lt;/Sender&gt;<br>            &lt;Interceptor className=<span class="hljs-string">&quot;org.apache.catalina.tribes.group.interceptors.TcpFailureDetector&quot;</span>/&gt;<br>            &lt;Interceptor className=<span class="hljs-string">&quot;org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor&quot;</span>/&gt;<br>          &lt;/Channel&gt;<br><br>          &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.ha.tcp.ReplicationValve&quot;</span><br>                 filter=<span class="hljs-string">&quot;&quot;</span>/&gt;<br>          &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.ha.session.JvmRouteBinderValve&quot;</span>/&gt;<br><br>          &lt;Deployer className=<span class="hljs-string">&quot;org.apache.catalina.ha.deploy.FarmWarDeployer&quot;</span><br>                    tempDir=<span class="hljs-string">&quot;/tmp/war-temp/&quot;</span><br>                    deployDir=<span class="hljs-string">&quot;/tmp/war-deploy/&quot;</span><br>                    watchDir=<span class="hljs-string">&quot;/tmp/war-listen/&quot;</span><br>                    watchEnabled=<span class="hljs-string">&quot;false&quot;</span>/&gt;<br><br>          &lt;ClusterListener className=<span class="hljs-string">&quot;org.apache.catalina.ha.session.ClusterSessionListener&quot;</span>/&gt;<br>        &lt;/Cluster&gt;    <br><span class="hljs-comment">#官网复制的截止到上面一行</span><br>      &lt;/Host&gt;<br>:wq<br>[root@tomcat1 ~]<span class="hljs-comment">#mkdir -p /data/tomcat/node1/ROOT</span><br>[root@tomcat1 ~]<span class="hljs-comment">#cd /data/tomcat/node1/ROOT</span><br>[root@tomcat1 ROOT]<span class="hljs-comment">#vim index.jsp</span><br>[root@tomcat1 ROOT]<span class="hljs-comment">#cat index.jsp </span><br>&lt;%@ page import=<span class="hljs-string">&quot;java.util.*&quot;</span> %&gt;<br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;<br>&lt;<span class="hljs-built_in">head</span>&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;title&gt;tomcat <span class="hljs-built_in">test</span>&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h1&gt; Tomcat Website node1 &lt;/h1&gt;<br>&lt;div&gt;On  &lt;%=request.getServerName() %&gt;&lt;/div&gt;<br>&lt;div&gt;&lt;%=request.getLocalAddr() + <span class="hljs-string">&quot;:&quot;</span> + request.getLocalPort() %&gt;&lt;/div&gt;<br>&lt;div&gt;SessionID = &lt;span style=<span class="hljs-string">&quot;color:blue&quot;</span>&gt;&lt;%=session.getId() %&gt;&lt;/span&gt;&lt;/div&gt;<br>&lt;%=new Date()%&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br>[root@tomcat1 ~]<span class="hljs-comment">#chown -R tomcat. /data/tomcat/node1/</span><br>[root@tomcat1 ~]<span class="hljs-comment">#cp -a /usr/local/tomcat/webapps/ROOT/WEB-INF/  /data/tomcat/node1/ROOT</span><br>[root@tomcat1 ~]<span class="hljs-comment">#vim /data/tomcat/node1/ROOT/WEB-INF/web.xml</span><br>&lt;distributable/&gt;          <span class="hljs-comment">#在倒数第二行添加此行</span><br>:wq<br>[root@tomcat1 ROOT]<span class="hljs-comment">#systemctl restart tomcat</span><br>-----------------------------------------------------------------------------------<br>[root@tomcat2 ~]<span class="hljs-comment">#cd /usr/local/tomcat</span><br>[root@tomcat2 tomcat]<span class="hljs-comment">#vim conf/server.xml</span><br>&lt;Host name=<span class="hljs-string">&quot;www.magedu.org&quot;</span>  appBase=<span class="hljs-string">&quot;/data/tomcat/node2/&quot;</span><br>            unpackWARs=<span class="hljs-string">&quot;true&quot;</span> autoDeploy=<span class="hljs-string">&quot;true&quot;</span>&gt;<br>        &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> directory=<span class="hljs-string">&quot;logs&quot;</span><br>               prefix=<span class="hljs-string">&quot;node2_access_log&quot;</span> suffix=<span class="hljs-string">&quot;.txt&quot;</span><br>               pattern=<span class="hljs-string">&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot;</span> /&gt;<br><span class="hljs-comment">#下面的可以直接在官网了复制               </span><br>       &lt;Cluster className=<span class="hljs-string">&quot;org.apache.catalina.ha.tcp.SimpleTcpCluster&quot;</span><br>                 channelSendOptions=<span class="hljs-string">&quot;8&quot;</span>&gt;<br><br>          &lt;Manager className=<span class="hljs-string">&quot;org.apache.catalina.ha.session.DeltaManager&quot;</span><br>                   expireSessionsOnShutdown=<span class="hljs-string">&quot;false&quot;</span><br>                   notifyListenersOnReplication=<span class="hljs-string">&quot;true&quot;</span>/&gt;<br><br>          &lt;Channel className=<span class="hljs-string">&quot;org.apache.catalina.tribes.group.GroupChannel&quot;</span>&gt;<br>            &lt;Membership className=<span class="hljs-string">&quot;org.apache.catalina.tribes.membership.McastService&quot;</span><br>                        address=<span class="hljs-string">&quot;228.0.0.4&quot;</span><br>                        port=<span class="hljs-string">&quot;45564&quot;</span><br>                        frequency=<span class="hljs-string">&quot;500&quot;</span><br>                        dropTime=<span class="hljs-string">&quot;3000&quot;</span>/&gt;<br>            &lt;Receiver className=<span class="hljs-string">&quot;org.apache.catalina.tribes.transport.nio.NioReceiver&quot;</span><br>                      address=<span class="hljs-string">&quot;10.0.0.216&quot;</span><br>                      port=<span class="hljs-string">&quot;4000&quot;</span><br>                      autoBind=<span class="hljs-string">&quot;100&quot;</span><br>                      selectorTimeout=<span class="hljs-string">&quot;5000&quot;</span><br>                      maxThreads=<span class="hljs-string">&quot;6&quot;</span>/&gt;<br><br>            &lt;Sender className=<span class="hljs-string">&quot;org.apache.catalina.tribes.transport.ReplicationTransmitter&quot;</span>&gt;<br>              &lt;Transport className=<span class="hljs-string">&quot;org.apache.catalina.tribes.transport.nio.PooledParallelSender&quot;</span>/&gt;<br>            &lt;/Sender&gt;<br>            &lt;Interceptor className=<span class="hljs-string">&quot;org.apache.catalina.tribes.group.interceptors.TcpFailureDetector&quot;</span>/&gt;<br>            &lt;Interceptor className=<span class="hljs-string">&quot;org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor&quot;</span>/&gt;<br>          &lt;/Channel&gt;<br><br>          &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.ha.tcp.ReplicationValve&quot;</span><br>                 filter=<span class="hljs-string">&quot;&quot;</span>/&gt;<br>          &lt;Valve className=<span class="hljs-string">&quot;org.apache.catalina.ha.session.JvmRouteBinderValve&quot;</span>/&gt;<br><br>          &lt;Deployer className=<span class="hljs-string">&quot;org.apache.catalina.ha.deploy.FarmWarDeployer&quot;</span><br>                    tempDir=<span class="hljs-string">&quot;/tmp/war-temp/&quot;</span><br>                    deployDir=<span class="hljs-string">&quot;/tmp/war-deploy/&quot;</span><br>                    watchDir=<span class="hljs-string">&quot;/tmp/war-listen/&quot;</span><br>                    watchEnabled=<span class="hljs-string">&quot;false&quot;</span>/&gt;<br><br>          &lt;ClusterListener className=<span class="hljs-string">&quot;org.apache.catalina.ha.session.ClusterSessionListener&quot;</span>/&gt;<br>        &lt;/Cluster&gt;    <br><span class="hljs-comment">#官网复制的截止到上面一行      </span><br>      &lt;/Host&gt;<br>:wq<br>[root@tomcat2 ~]<span class="hljs-comment">#mkdir -p /data/tomcat/node2/ROOT</span><br>[root@tomcat2 ~]<span class="hljs-comment">#cd /data/tomcat/node2/ROOT</span><br>[root@tomcat2 ROOT]<span class="hljs-comment">#vim index.jsp</span><br>[root@tomcat2 ROOT]<span class="hljs-comment">#cat index.jsp </span><br>&lt;%@ page import=<span class="hljs-string">&quot;java.util.*&quot;</span> %&gt;<br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;<br>&lt;<span class="hljs-built_in">head</span>&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;title&gt;tomcat <span class="hljs-built_in">test</span>&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h1&gt; Tomcat Website node2 &lt;/h1&gt;<br>&lt;div&gt;On  &lt;%=request.getServerName() %&gt;&lt;/div&gt;<br>&lt;div&gt;&lt;%=request.getLocalAddr() + <span class="hljs-string">&quot;:&quot;</span> + request.getLocalPort() %&gt;&lt;/div&gt;<br>&lt;div&gt;SessionID = &lt;span style=<span class="hljs-string">&quot;color:blue&quot;</span>&gt;&lt;%=session.getId() %&gt;&lt;/span&gt;&lt;/div&gt;<br>&lt;%=new Date()%&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br>[root@tomcat2 ~]<span class="hljs-comment">#chown -R tomcat. /data/tomcat/node2/</span><br>[root@tomcat2 ~]<span class="hljs-comment">#cp -a /usr/local/tomcat/webapps/ROOT/WEB-INF/  /data/tomcat/node2/ROOT</span><br>[root@tomcat2 ~]<span class="hljs-comment">#vim /data/tomcat/node2/ROOT/WEB-INF/web.xml</span><br>&lt;distributable/&gt;          <span class="hljs-comment">#在倒数第二行添加此行</span><br>:wq<br>[root@tomcat2 ROOT]<span class="hljs-comment">#systemctl restart tomcat</span><br></code></pre></td></tr></table></figure><h4 id="10-2、DNS解析"><a href="#10-2、DNS解析" class="headerlink" title="10.2、DNS解析"></a>10.2、DNS解析</h4><p>和上面9.2、DNS解析相同</p><h4 id="10-3、nginx的配置（反向代理与负载均衡）"><a href="#10-3、nginx的配置（反向代理与负载均衡）" class="headerlink" title="10.3、nginx的配置（反向代理与负载均衡）"></a>10.3、nginx的配置（反向代理与负载均衡）</h4><p>和上面9.3、nginx的配置（反向代理与负载均衡）相同</p><p><a href=""><img src="image-20221202194512169.png" alt="image-20221202194512169"></a></p><p><a href=""><img src="image-20221202194551409.png" alt="image-20221202194551409"></a></p><span id="more"></span>]]></content>
    
    
    
    <tags>
      
      <tag>nginx  tomcat  jumpserver</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第八周作业</title>
    <link href="/2022/11/07/%E7%AC%AC%E5%85%AB%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/11/07/%E7%AC%AC%E5%85%AB%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="一、redis搭建哨兵原理和集群实现"><a href="#一、redis搭建哨兵原理和集群实现" class="headerlink" title="一、redis搭建哨兵原理和集群实现"></a>一、redis搭建哨兵原理和集群实现</h3><h4 id="1-1、搭建哨兵的原理"><a href="#1-1、搭建哨兵的原理" class="headerlink" title="1.1、搭建哨兵的原理"></a>1.1、搭建哨兵的原理</h4><p>①专门的Sentinel 服务进程是用于监控redis集群中Master工作的状态，当Master主服务器发生故障的时候，可以实现Master和Slave的角色的自动切换，从而实现系统的高可用性</p><p>②Sentinel是一个分布式系统,即需要在多个节点上各自同时运行一个sentinel进程，Sentienl 进程通过流言协议(gossip protocols)来接收关于Master是否下线状态，并使用投票协议(Agreement Protocols)来决定是否执行自动故障转移,并选择合适的Slave作为新的Master</p><p>③每个Sentinel进程会向其它Sentinel、Master、Slave定时发送消息，来确认对方是否存活，如果发现某个节点在指定配置时间内未得到响应，则会认为此节点已离线，即为主观宕机Subjective Down，简称为 SDOWN</p><p>④如果哨兵集群中的多数Sentinel进程认为Master存在SDOWN，共同利用 is-master-down-by-addr 命令</p><p>互相通知后，则认为客观宕机Objectively Down， 简称 ODOWN</p><p>⑤接下来利用投票算法，从所有slave节点中，选一台合适的slave将之提升为新Master节点，然后自动修改其它slave相关配置，指向新的master节点,最终实现故障转移failover</p><p>注意：<strong>Redis Sentinel中的Sentinel节点个数应该为大于等于3且最好为奇数</strong></p><p><a href=""><img src="image-20221110160626143.png" alt="image-20221110160626143"></a></p><h4 id="1-2、搭建集群"><a href="#1-2、搭建集群" class="headerlink" title="1.2、搭建集群"></a>1.2、搭建集群</h4><h5 id="1-2-1、集群架构"><a href="#1-2-1、集群架构" class="headerlink" title="1.2.1、集群架构"></a>1.2.1、集群架构</h5><p><img src="image-20221111082931387.png" alt="image-20221111082931387"></p><p>注意：①每个Redis 节点采用相同的相同的Redis版本、相同的密码、硬件配置</p><p>②所有Redis服务器必须没有任何数据</p><p>准备六台主机，地址如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">10.0.0.184<br>10.0.0.185<br>10.0.0.186<br>10.0.0.187<br>10.0.0.188<br>10.0.0.216<br><span class="hljs-comment">#6台主机都已编译安装完成</span><br></code></pre></td></tr></table></figure><h5 id="1-2-2、启用redis-cluster配置"><a href="#1-2-2、启用redis-cluster配置" class="headerlink" title="1.2.2、启用redis cluster配置"></a>1.2.2、启用redis cluster配置</h5><p><strong>①每个节点修改redis配置，必须开启cluster功能的参数</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#sed -i.bak -e &#x27;/masterauth/a masterauth 123456&#x27; -e &#x27;/# cluster-enabled yes/a cluster-enabled yes&#x27; -e &#x27;/# cluster-config-file nodes-6379.conf/a cluster-config-file nodes-6379.conf&#x27; -e &#x27;/cluster-require-full-coverage yes/c cluster-require-full-coverage no&#x27; /apps/redis/etc/redis.conf</span><br>[root@Rocky ~]<span class="hljs-comment">#systemctl restart redis</span><br></code></pre></td></tr></table></figure><p><strong>②验证当前Redis服务状态：</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#开启了16379的cluster的端口,实际的端口=redis port + 10000</span><br>[root@Rocky ~]<span class="hljs-comment">#ss -ntl</span><br>State    Recv-Q   Send-Q     Local Address:Port     Peer Address:Port    Process     <br>LISTEN    0        128         0.0.0.0:22            0.0.0.0:*                       <br>LISTEN    0        511         0.0.0.0:16379         0.0.0.0:*                       <br>LISTEN    0        511         0.0.0.0:6379          0.0.0.0:*                       <br>LISTEN    0        128         [::]:22               [::]:*                         <br>LISTEN    0        511         [::1]:16379           [::]:*                         <br>LISTEN    0        511         [::1]:6379            [::]:*                         <br>LISTEN    0        128         *:80                  *:*  <br><span class="hljs-comment">#注意进程有[cluster]状态</span><br>[root@Rocky ~]<span class="hljs-comment">#ps -ef|grep redis</span><br>redis  33345  1  0 09:16 ?       00:00:00 /apps/redis/bin/redis-server 0.0.0.0:6379 [cluster]<br></code></pre></td></tr></table></figure><h5 id="1-2-3、创建集群"><a href="#1-2-3、创建集群" class="headerlink" title="1.2.3、创建集群"></a>1.2.3、创建集群</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#命令redis-cli的选项 --cluster-replicas 1 表示每个master对应一个slave节点</span><br>[root@Rocky ~]<span class="hljs-comment">#redis-cli -a 123456 --cluster create 10.0.0.184:6379 10.0.0.185:6379 10.0.0.186:6379 10.0.0.187:6379 10.0.0.188:6379 10.0.0.216:6379 --cluster-replicas 1</span><br>&gt;&gt;&gt; Performing <span class="hljs-built_in">hash</span> slots allocation on 6 nodes...<br>Master[0] -&gt; Slots 0 - 5460<br>Master[1] -&gt; Slots 5461 - 10922<br>Master[2] -&gt; Slots 10923 - 16383<br>Adding replica 10.0.0.188:6379 to 10.0.0.184:6379<br>Adding replica 10.0.0.216:6379 to 10.0.0.185:6379<br>Adding replica 10.0.0.187:6379 to 10.0.0.186:6379<br>M: cdf92d28ccbf42767778bf65cacb6eda1c406257 10.0.0.184:6379   <span class="hljs-comment"># ：后面的是ID号</span><br>   slots:[0-5460] (5461 slots) master               <span class="hljs-comment">#[]里面的数字是槽位的起始和结束位</span><br>M: 2ca4e638bd3fa22ad94cc238907faf6b613d0b88 10.0.0.185:6379<br>   slots:[5461-10922] (5462 slots) master<br>M: 56efb05a636f587fd11775f702a427291d4c1cb6 10.0.0.186:6379<br>   slots:[10923-16383] (5461 slots) master<br>S: 40bbd63934b4201e370de7424b1a8317715c8207 10.0.0.187:6379  <span class="hljs-comment">#S是从节点slave</span><br>   replicates 56efb05a636f587fd11775f702a427291d4c1cb6<br>S: c6ef7581a4752b8e786a4585778427502defd6d5 10.0.0.188:6379<br>   replicates cdf92d28ccbf42767778bf65cacb6eda1c406257<br>S: 3c15e99e9430bde6184a65554127cd0669b41b05 10.0.0.216:6379<br>   replicates 2ca4e638bd3fa22ad94cc238907faf6b613d0b88<br>Can I <span class="hljs-built_in">set</span> the above configuration? (<span class="hljs-built_in">type</span> <span class="hljs-string">&#x27;yes&#x27;</span> to accept): <span class="hljs-built_in">yes</span>  <span class="hljs-comment">#yes自动创建集群</span><br>&gt;&gt;&gt; Nodes configuration updated<br>&gt;&gt;&gt; Assign a different config epoch to each node<br>&gt;&gt;&gt; Sending CLUSTER MEET messages to <span class="hljs-built_in">join</span> the cluster<br>Waiting <span class="hljs-keyword">for</span> the cluster to <span class="hljs-built_in">join</span><br>.<br>&gt;&gt;&gt; Performing Cluster Check (using node 10.0.0.184:6379)<br>M: cdf92d28ccbf42767778bf65cacb6eda1c406257 10.0.0.184:6379<br>   slots:[0-5460] (5461 slots) master<br>   1 additional replica(s)<br>M: 56efb05a636f587fd11775f702a427291d4c1cb6 10.0.0.186:6379<br>   slots:[10923-16383] (5461 slots) master<br>   1 additional replica(s)              <span class="hljs-comment">#表示分配了一个从节点</span><br>S: 40bbd63934b4201e370de7424b1a8317715c8207 10.0.0.187:6379<br>   slots: (0 slots) slave               <span class="hljs-comment">#从节点没有槽位</span><br>   replicates 56efb05a636f587fd11775f702a427291d4c1cb6<br>S: 3c15e99e9430bde6184a65554127cd0669b41b05 10.0.0.216:6379<br>   slots: (0 slots) slave<br>   replicates 2ca4e638bd3fa22ad94cc238907faf6b613d0b88  <span class="hljs-comment">#此从节点对应的主节点的ID</span><br>M: 2ca4e638bd3fa22ad94cc238907faf6b613d0b88 10.0.0.185:6379<br>   slots:[5461-10922] (5462 slots) master<br>   1 additional replica(s)<br>S: c6ef7581a4752b8e786a4585778427502defd6d5 10.0.0.188:6379<br>   slots: (0 slots) slave<br>   replicates cdf92d28ccbf42767778bf65cacb6eda1c406257<br>[OK] All nodes agree about slots configuration.<br>&gt;&gt;&gt; Check <span class="hljs-keyword">for</span> open slots...<br>&gt;&gt;&gt; Check slots coverage...<br>[OK] All 16384 slots covered.<br><br><span class="hljs-comment">#此时可以看出对应关系</span><br>master：10.0.0.184    slave：10.0.0.188<br>master：10.0.0.185    slave：10.0.0.216<br>master：10.0.0.186    slave：10.0.0.187<br><span class="hljs-comment">#为了方便，将对应的主机名称更改</span><br>master1：10.0.0.184    slave1：10.0.0.188<br>master2：10.0.0.185    slave2：10.0.0.216<br>master3：10.0.0.186    slave3：10.0.0.187<br></code></pre></td></tr></table></figure><h5 id="1-2-4、验证集群"><a href="#1-2-4、验证集群" class="headerlink" title="1.2.4、验证集群"></a>1.2.4、验证集群</h5><h6 id="1-2-4-1、查看主从状态"><a href="#1-2-4-1、查看主从状态" class="headerlink" title="1.2.4.1、查看主从状态"></a>1.2.4.1、查看主从状态</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@slave3 ~]<span class="hljs-comment">#redis-cli -a 123456 cluster nodes</span><br><br>40bbd63934b4201e370de7424b1a8317715c8207 10.0.0.187:6379@16379 myself,slave 56efb05a636f587fd11775f702a427291d4c1cb6 0 1668131120000 3 connected<br><br>c6ef7581a4752b8e786a4585778427502defd6d5 10.0.0.188:6379@16379 slave cdf92d28ccbf42767778bf65cacb6eda1c406257 0 1668131122687 1 connected<br><br>56efb05a636f587fd11775f702a427291d4c1cb6 10.0.0.186:6379@16379 master - 0 1668131121648 3 connected 10923-16383<br><br>2ca4e638bd3fa22ad94cc238907faf6b613d0b88 10.0.0.185:6379@16379 master - 0 1668131122000 2 connected 5461-10922<br><br>cdf92d28ccbf42767778bf65cacb6eda1c406257 10.0.0.184:6379@16379 master - 0 1668131122000 1 connected 0-5460<br><br>3c15e99e9430bde6184a65554127cd0669b41b05 10.0.0.216:6379@16379 slave 2ca4e638bd3fa22ad94cc238907faf6b613d0b88 0 1668131120000 2 connected<br></code></pre></td></tr></table></figure><h6 id="1-2-4-2、验证集群状态"><a href="#1-2-4-2、验证集群状态" class="headerlink" title="1.2.4.2、验证集群状态"></a>1.2.4.2、验证集群状态</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@master1 ~]<span class="hljs-comment">#redis-cli -a 123456 CLUSTER INFO</span><br>Warning: Using a password with <span class="hljs-string">&#x27;-a&#x27;</span> or <span class="hljs-string">&#x27;-u&#x27;</span> option on the <span class="hljs-built_in">command</span> line interface may not be safe.<br>cluster_state:ok<br>cluster_slots_assigned:16384<br>cluster_slots_ok:16384<br>cluster_slots_pfail:0<br>cluster_slots_fail:0<br>cluster_known_nodes:6            <span class="hljs-comment">#节点数</span><br>cluster_size:3                   <span class="hljs-comment">#3个集群</span><br><br><span class="hljs-comment">#查看任意节点的集群状态</span><br>[root@master1 ~]<span class="hljs-comment">#redis-cli -a 123456 --cluster info 10.0.0.187:6379</span><br>10.0.0.186:6379 (56efb05a...) -&gt; 0 keys | 5461 slots | 1 slaves.<br>10.0.0.185:6379 (2ca4e638...) -&gt; 0 keys | 5462 slots | 1 slaves.<br>10.0.0.184:6379 (cdf92d28...) -&gt; 0 keys | 5461 slots | 1 slaves.<br>[OK] 0 keys <span class="hljs-keyword">in</span> 3 masters.<br>0.00 keys per slot on average.<br></code></pre></td></tr></table></figure><h6 id="1-2-4-3、查看对应关系"><a href="#1-2-4-3、查看对应关系" class="headerlink" title="1.2.4.3、查看对应关系"></a>1.2.4.3、查看对应关系</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@master1 ~]<span class="hljs-comment">#redis-cli -a 123456 --cluster check 10.0.0.216:6379</span><br>Warning: Using a password with <span class="hljs-string">&#x27;-a&#x27;</span> or <span class="hljs-string">&#x27;-u&#x27;</span> option on the <span class="hljs-built_in">command</span> line interface may not be safe.<br>10.0.0.184:6379 (cdf92d28...) -&gt; 0 keys | 5461 slots | 1 slaves.<br>10.0.0.185:6379 (2ca4e638...) -&gt; 0 keys | 5462 slots | 1 slaves.<br>10.0.0.186:6379 (56efb05a...) -&gt; 0 keys | 5461 slots | 1 slaves.<br>[OK] 0 keys <span class="hljs-keyword">in</span> 3 masters.<br>0.00 keys per slot on average.<br>&gt;&gt;&gt; Performing Cluster Check (using node 10.0.0.216:6379)<br>S: 3c15e99e9430bde6184a65554127cd0669b41b05 10.0.0.216:6379<br>   slots: (0 slots) slave<br>   replicates 2ca4e638bd3fa22ad94cc238907faf6b613d0b88<br>M: cdf92d28ccbf42767778bf65cacb6eda1c406257 10.0.0.184:6379<br>   slots:[0-5460] (5461 slots) master<br>   1 additional replica(s)<br>M: 2ca4e638bd3fa22ad94cc238907faf6b613d0b88 10.0.0.185:6379<br>   slots:[5461-10922] (5462 slots) master<br>   1 additional replica(s)<br>S: c6ef7581a4752b8e786a4585778427502defd6d5 10.0.0.188:6379<br>   slots: (0 slots) slave<br>   replicates cdf92d28ccbf42767778bf65cacb6eda1c406257<br>M: 56efb05a636f587fd11775f702a427291d4c1cb6 10.0.0.186:6379<br>   slots:[10923-16383] (5461 slots) master<br>   1 additional replica(s)<br>S: 40bbd63934b4201e370de7424b1a8317715c8207 10.0.0.187:6379<br>   slots: (0 slots) slave<br>   replicates 56efb05a636f587fd11775f702a427291d4c1cb6<br></code></pre></td></tr></table></figure><h5 id="1-2-5测试集群写入数据"><a href="#1-2-5测试集群写入数据" class="headerlink" title="1.2.5测试集群写入数据"></a>1.2.5测试集群写入数据</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@master1 ~]<span class="hljs-comment">#redis-cli -a 123456</span><br>127.0.0.1:6379&gt; dbsize                       <span class="hljs-comment">#查看此节点数据，数据为0</span><br>(<span class="hljs-built_in">integer</span>) 0<br>127.0.0.1:6379&gt; <span class="hljs-built_in">set</span> a b                      <span class="hljs-comment">#写入数据</span><br>(error) MOVED 15495 10.0.0.186:6379          <span class="hljs-comment">#提示此数据写入到10.0.0.186这个节点</span><br><span class="hljs-comment">#此时需要到10.0.0.186这台主机去写入</span><br>[root@master3 ~]<span class="hljs-comment">#redis-cli -a 123456</span><br>127.0.0.1:6379&gt; dbsize<br>(<span class="hljs-built_in">integer</span>) 0<br>127.0.0.1:6379&gt; <span class="hljs-built_in">set</span> a b<br>OK                                          <span class="hljs-comment">#写入成功</span><br><br><span class="hljs-comment">#造成此现象的是因为通过算法计算，当前key的槽位需要写入指定的node</span><br><span class="hljs-comment">#为了不需要输入2次，可以加-c（表示集群模式）</span><br>[root@master1 ~]<span class="hljs-comment">#redis-cli -a 123456 -c</span><br>127.0.0.1:6379&gt; <span class="hljs-built_in">set</span> a w               <span class="hljs-comment">#此时再输入数据，自动转换到10.0.0.186节点，写入数据</span><br>-&gt; Redirected to slot [15495] located at 10.0.0.186:6379<br>OK<br>10.0.0.186:6379&gt; <br></code></pre></td></tr></table></figure><h5 id="1-2-6、模拟故障实现故障转移"><a href="#1-2-6、模拟故障实现故障转移" class="headerlink" title="1.2.6、模拟故障实现故障转移"></a>1.2.6、模拟故障实现故障转移</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#将10.0.0.185停止服务</span><br>[root@master2 ~]<span class="hljs-comment">#systemctl stop redis</span><br><span class="hljs-comment">#此时查看10.0.0.185的记录已发生变化</span><br>[root@slave1 ~]<span class="hljs-comment">#cat /apps/redis/data/nodes-6379.conf</span><br>2ca4e638bd3fa22ad94cc238907faf6b613d0b88 10.0.0.185:6379@16379 master,fail - 1668132519648 1668132516486 2 disconnected      <span class="hljs-comment">#master,fail失败的主节点</span><br><br>cdf92d28ccbf42767778bf65cacb6eda1c406257 10.0.0.184:6379@16379 master - 0 1668132534993 1 connected 0-5460<br><br>3c15e99e9430bde6184a65554127cd0669b41b05 10.0.0.216:6379@16379 master - 0 1668132536008 7 connected 5461-10922       <span class="hljs-comment">#10.0.0.216变成主节点了</span><br><br>40bbd63934b4201e370de7424b1a8317715c8207 10.0.0.187:6379@16379 slave 56efb05a636f587fd11775f702a427291d4c1cb6 0 1668132535000 3 connected<br><br>c6ef7581a4752b8e786a4585778427502defd6d5 10.0.0.188:6379@16379 myself,slave cdf92d28ccbf42767778bf65cacb6eda1c406257 0 1668132534000 1 connected<br><br>56efb05a636f587fd11775f702a427291d4c1cb6 10.0.0.186:6379@16379 master - 0 1668132534000 3 connected 10923-16383<br><br>[root@master2 ~]<span class="hljs-comment">#systemctl start redis</span><br>[root@slave3 ~]<span class="hljs-comment">#redis-cli -a 123456 cluster nodes</span><br>40bbd63934b4201e370de7424b1a8317715c8207 10.0.0.187:6379@16379 myself,slave 56efb05a636f587fd11775f702a427291d4c1cb6 0 1668132977000 3 connected<br><br>c6ef7581a4752b8e786a4585778427502defd6d5 10.0.0.188:6379@16379 slave cdf92d28ccbf42767778bf65cacb6eda1c406257 0 1668132979881 1 connected<br><br>56efb05a636f587fd11775f702a427291d4c1cb6 10.0.0.186:6379@16379 master - 0 1668132978841 3 connected 10923-16383<br><br>2ca4e638bd3fa22ad94cc238907faf6b613d0b88 10.0.0.185:6379@16379 slave 3c15e99e9430bde6184a65554127cd0669b41b05 0 1668132977798 7 connected<br><span class="hljs-comment">#10.0.0.185恢复后自动变成10.0.0.216的从节点了</span><br>cdf92d28ccbf42767778bf65cacb6eda1c406257 10.0.0.184:6379@16379 master - 0 1668132978000 1 connected 0-5460<br><br>3c15e99e9430bde6184a65554127cd0669b41b05 10.0.0.216:6379@16379 master - 0 1668132979000 7 connected 5461-10922<br><br></code></pre></td></tr></table></figure><h5 id="1-2-7、验证数据是否同步"><a href="#1-2-7、验证数据是否同步" class="headerlink" title="1.2.7、验证数据是否同步"></a>1.2.7、验证数据是否同步</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@master1 ~]<span class="hljs-comment">#redis-cli -a 123456 -c</span><br>Warning: Using a password with <span class="hljs-string">&#x27;-a&#x27;</span> or <span class="hljs-string">&#x27;-u&#x27;</span> option on the <span class="hljs-built_in">command</span> line interface may not be safe.<br>127.0.0.1:6379&gt; dbsize<br>(<span class="hljs-built_in">integer</span>) 0<br>127.0.0.1:6379&gt; <span class="hljs-built_in">set</span> a w<br>-&gt; Redirected to slot [15495] located at 10.0.0.186:6379<br>OK<br>10.0.0.186:6379&gt; <br><br><span class="hljs-comment">#然后看看186的从节点187是否有此数据</span><br>[root@slave3 ~]<span class="hljs-comment">#redis-cli -a 123456</span><br>127.0.0.1:6379&gt; get a                        <span class="hljs-comment">#查看不了具体数据</span><br>(error) MOVED 15495 10.0.0.186:6379          <br>127.0.0.1:6379&gt; dbsize                       <span class="hljs-comment">#只能看见有1个数据</span><br>(<span class="hljs-built_in">integer</span>) 1<br><span class="hljs-comment">#说明集群里的从节点既不能写也不能读</span><br></code></pre></td></tr></table></figure><h3 id="二、LVS常用模型工作原理，及实现"><a href="#二、LVS常用模型工作原理，及实现" class="headerlink" title="二、LVS常用模型工作原理，及实现"></a>二、LVS常用模型工作原理，及实现</h3><h4 id="2-1、LVS的工作原理"><a href="#2-1、LVS的工作原理" class="headerlink" title="2.1、LVS的工作原理"></a>2.1、LVS的工作原理</h4><p>VS根据请求报文的目标IP和目标协议及端口将其调度转发至某RS，根据调度算法来挑选RS。LVS是内核级功能，工作在INPUT链的位置，将发往INPUT的流量进行“处理”</p><p>2.2、DR模型实现过程</p><p>LVS-DR：Direct Routing，直接路由，LVS默认模式,应用最广泛,通过为请求报文重新封装一个MAC首部进行转发，源MAC是DIP所在的接口的MAC，目标MAC是某挑选出的RS的RIP所在接口的MAC地址；源IP/PORT，以及目标IP/PORT均保持不变</p><p><a href=""><img src="image-20221112162015705.png" alt="image-20221112162015705"></a></p><p><a href=""><img src="image-20221112161725974.png" alt="image-20221112161725974"></a></p><p>①Director和各RS都配置有VIP</p><p>②确保前端路由器将目标IP为VIP的请求报文发往Director</p><p>​    ——在前端网关做静态绑定VIP和Director的MAC地址</p><p>​    ——在RS上使用arptables工具</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">arptables -A IN -d <span class="hljs-variable">$VIP</span> -j DROP<br>arptables -A OUT -s <span class="hljs-variable">$VIP</span> -j mangle --mangle-ip-s <span class="hljs-variable">$RIP</span><br></code></pre></td></tr></table></figure><p>​    ——在RS上修改内核参数以限制arp通告及应答级别</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">/proc/sys/net/ipv4/conf/all/arp_ignore<br>/proc/sys/net/ipv4/conf/all/arp_announce<br></code></pre></td></tr></table></figure><p>③ RS的RIP可以使用私网地址，也可以是公网地址；RIP与DIP在同一IP网络；RIP的网关不能指向DIP，以确保响应报文不会经由Director</p><p>④ RS和Director要在同一个物理网络</p><p>⑤请求报文要经由Director，但响应报文不经由Director，而由RS直接发往Client</p><p>⑥不支持端口映射（端口不能修改）</p><p>⑦无需开启 ip_forward</p><h3 id="三、LVS的负载策略有哪些，各应用在什么场景，通过LVS-DR任意实现1-2种场景"><a href="#三、LVS的负载策略有哪些，各应用在什么场景，通过LVS-DR任意实现1-2种场景" class="headerlink" title="三、LVS的负载策略有哪些，各应用在什么场景，通过LVS DR任意实现1-2种场景"></a>三、LVS的负载策略有哪些，各应用在什么场景，通过LVS DR任意实现1-2种场景</h3><h4 id="3-1、负载策略及应用场景"><a href="#3-1、负载策略及应用场景" class="headerlink" title="3.1、负载策略及应用场景"></a>3.1、负载策略及应用场景</h4><p>①NAT模型：由于配置简单，请求和回应都涉及LVS服务器（LVS服务器压力大），所以应用于并发量不大的中小企业。Real server服务器数量控制在10-20</p><p>②DR模型：并发量非常大的企业（DR模型的并发处理量能达到硬件级别的能力）。Real server服务器数量可以达到100</p><p>③TUN模型：TUN模式常会用来负载调度缓存服务器组，这些缓存服务器一般放置在不同的网络环境，可以就近折返给客户端。在请求对象不在Cache服务器本地命中的情况下，Cache服务器要向源服务器发送请求，将结果取回，最后将结果返回给用户。Real server服务器数量可以达到100</p><p>④FULLNAT模型：此模型主要是阿里云的二次开发使用。</p><h4 id="3-2、LVS-DR模式单网段案例"><a href="#3-2、LVS-DR模式单网段案例" class="headerlink" title="3.2、LVS-DR模式单网段案例"></a>3.2、LVS-DR模式单网段案例</h4><h5 id="3-2-1、环境"><a href="#3-2-1、环境" class="headerlink" title="3.2.1、环境"></a>3.2.1、环境</h5><p><a href=""><img src="image-20221112170014075.png" alt="image-20221112170014075"></a></p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs dns">环境：<span class="hljs-number">5</span>台主机<br>一台：客户端 （主机名：Internet）<br>eth0:仅主机模式 <span class="hljs-number">192.168.10.184</span>/<span class="hljs-number">24</span>  GW:<span class="hljs-number">192.168.10.185</span><br><br>一台：路由器（主机名：ROUTER）<br>eth0:NAT <span class="hljs-number">10.0.0.185</span>/<span class="hljs-number">24</span><br>eth1:仅主机模式 <span class="hljs-number">192.168.10.185</span>/<span class="hljs-number">24</span><br><br>一台：LVS（主机名LVS）<br>eth0:NAT DIP:<span class="hljs-number">10.0.0.186</span>/<span class="hljs-number">24</span>   GW:<span class="hljs-number">10.0.0.185</span><br>lo VIP:<span class="hljs-number">10.0.0.100</span>/<span class="hljs-number">32</span><br><br>两台：RS（主机名web1、web2）<br>RS1： eth0:NAT RIP:<span class="hljs-number">10.0.0.187</span>/<span class="hljs-number">24</span>   GW:<span class="hljs-number">10.0.0.185</span><br>      lo VIP:<span class="hljs-number">10.0.0.100</span>/<span class="hljs-number">32</span><br>RS2:  eth0:NAT RIP:<span class="hljs-number">10.0.0.188</span>/<span class="hljs-number">24</span>   GW:<span class="hljs-number">10.0.0.185</span><br>      lo VIP:<span class="hljs-number">10.0.0.100</span>/<span class="hljs-number">32</span><br></code></pre></td></tr></table></figure><h5 id="3-2-2、LVS的网络配置"><a href="#3-2-2、LVS的网络配置" class="headerlink" title="3.2.2、LVS的网络配置"></a>3.2.2、LVS的网络配置</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#所有主机禁用iptables和SELinux</span><br><br><span class="hljs-comment">#internet主机环境</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br>IPADDR=192.168.10.184<br>NETMASK=255.255.255.0<br>GATEWAY=192.168.10.185<br>:wq<br>[root@Rocky ~]<span class="hljs-comment">#nmcli connection reload</span><br>[root@Rocky ~]<span class="hljs-comment">#nmcli connection up eth0</span><br><span class="hljs-comment">#然后从本地将网卡有NAT模式改为仅主机模式</span><br>[root@Rocky ~]<span class="hljs-comment">#hostnamectl set-hostname internet</span><br>[root@internet ~]<span class="hljs-comment">#hostname -I</span><br>192.168.10.184 <br><br><span class="hljs-comment">###########################################################################</span><br><span class="hljs-comment">#路由器的网络配置</span><br>[root@Rocky ~]<span class="hljs-comment">#hostnamectl set-hostname ROUTER     #更改主机名</span><br>[root@ROUTER ~]<span class="hljs-comment">#echo &#x27;net.ipv4.ip_forward=1&#x27; &gt;&gt; /etc/sysctl.conf</span><br>[root@ROUTER ~]<span class="hljs-comment">#sysctl -p                         #重新加载</span><br>[root@ROUTER ~]<span class="hljs-comment">#cd /etc/sysconfig/network-scripts/</span><br>[root@ROUTER network-scripts]<span class="hljs-comment">#ls</span><br>backup  ifcfg-eth0<br>[root@ROUTER network-scripts]<span class="hljs-comment">#cp ifcfg-eth0 ifcfg-eth1   #创建eth1网卡配置文件</span><br>[root@ROUTER network-scripts]<span class="hljs-comment">#ls</span><br>backup  ifcfg-eth0  ifcfg-eth1<br>[root@ROUTER network-scripts]<span class="hljs-comment">#vim ifcfg-eth1            #编辑eth1网卡配置文件</span><br>PROXY_METHOD=none<br>BOOTPROTO=none<br>NAME=eth1<br>DEVICE=eth1<br>IPADDR=192.168.10.185<br>NETMASK=255.255.255.0<br>:wq<br>[root@ROUTER network-scripts]<span class="hljs-comment">#nmcli connection        #查看现在的网卡</span><br>NAME                UUID                                  TYPE      DEVICE <br>eth0                9aee0c40-97c5-361f-a1e6-9c0b37325423  ethernet  eth0   <br>Wired connection 1  32b154a4-7f4d-32f0-aa39-a0cc460bd562  ethernet  eth1   <br>eth1                9c92fad9-6ecb-3e6c-eb4d-8a47c6f50c04  ethernet  --     <br>[root@ROUTER network-scripts]<span class="hljs-comment">#nmcli connection delete Wired\ connection\ 1 </span><br>Connection <span class="hljs-string">&#x27;Wired connection 1&#x27;</span> (32b154a4-7f4d-32f0-aa39-a0cc460bd562) successfully deleted.<br>[root@ROUTER network-scripts]<span class="hljs-comment">#nmcli connection</span><br>NAME  UUID                                  TYPE      DEVICE <br>eth0  9aee0c40-97c5-361f-a1e6-9c0b37325423  ethernet  eth0   <br>eth1  9c92fad9-6ecb-3e6c-eb4d-8a47c6f50c04  ethernet  eth1 <br>[root@ROUTER network-scripts]<span class="hljs-comment">#nmcli connection reload         #重新加载</span><br>[root@ROUTER network-scripts]<span class="hljs-comment">#nmcli connection up eth1        #重新挂载eth1生效</span><br>Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/4)<br>[root@ROUTER network-scripts]<span class="hljs-comment">#hostname -I</span><br>10.0.0.185 192.168.10.185 <br><br><span class="hljs-comment">###########################################################################</span><br><span class="hljs-comment">#RS1的网络配置</span><br>[root@Rocky ~]<span class="hljs-comment">#hostnamectl set-hostname web1          #修改主机名</span><br>[root@web1 ~]<span class="hljs-comment">#yum -y install httpd</span><br>[root@web1 ~]<span class="hljs-comment">#systemctl enable --now httpd</span><br>[root@web1 ~]<span class="hljs-comment">#hostname &gt; /var/www/html/index.html    #将主机名写入网页内</span><br>[root@web1 ~]<span class="hljs-comment">#cat /var/www/html/index.html</span><br>web1<br>[root@web1 ~]<span class="hljs-comment">#vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br>GATEWAY=10.0.0.185<br>:wq<br>[root@web1 ~]<span class="hljs-comment">#nmcli connection reload</span><br>[root@web1 ~]<span class="hljs-comment">#nmcli connection up eth0</span><br><br><span class="hljs-comment">#RS2 的网络配置</span><br>[root@Rocky ~]<span class="hljs-comment">#hostnamectl set-hostname web2</span><br>[root@web2 ~]<span class="hljs-comment">#yum -y install httpd</span><br>[root@web2 ~]<span class="hljs-comment">#systemctl enable --now httpd</span><br>[root@web2 ~]<span class="hljs-comment">#hostname &gt; /var/www/html/index.html</span><br>[root@web2 ~]<span class="hljs-comment">#cat /var/www/html/index.html</span><br>web2<br>[root@web2 ~]<span class="hljs-comment">#vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br>GATEWAY=10.0.0.185<br>:wq<br>[root@web2 ~]<span class="hljs-comment">#nmcli connection reload</span><br>[root@web2 ~]<span class="hljs-comment">#nmcli connection up eth0</span><br><br><span class="hljs-comment">###########################################################################</span><br><span class="hljs-comment">#LVS的网络配置</span><br>[root@Rocky ~]<span class="hljs-comment">#hostnamectl set-hostname LVS</span><br>[root@LVS ~]<span class="hljs-comment">#vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br>GATEWAY=10.0.0.185<br>:wq<br>[root@LVS ~]<span class="hljs-comment">#nmcli connection reload</span><br>[root@LVS ~]<span class="hljs-comment">#nmcli connection up eth0</span><br></code></pre></td></tr></table></figure><h5 id="3-2-3、后端RS的IPVS配置"><a href="#3-2-3、后端RS的IPVS配置" class="headerlink" title="3.2.3、后端RS的IPVS配置"></a>3.2.3、后端RS的IPVS配置</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#RS1的IPVS配置</span><br>[root@web1 ~]<span class="hljs-comment">#echo 1 &gt;   /proc/sys/net/ipv4/conf/all/arp_ignore</span><br>[root@web1 ~]<span class="hljs-comment">#echo 2 &gt;   /proc/sys/net/ipv4/conf/all/arp_announce</span><br>[root@web1 ~]<span class="hljs-comment">#echo 1 &gt;   /proc/sys/net/ipv4/conf/lo/arp_ignore</span><br>[root@web1 ~]<span class="hljs-comment">#echo 2 &gt;   /proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="hljs-comment">#此为临时生效，想永久生效可将其写入/etc/sysctl.conf文件里</span><br>net.ipv4.conf.all.arp_ignore=1<br>net.ipv4.conf.all.arp_announce=2<br>net.ipv4.conf.lo.arp_ignore=1<br>net.ipv4.conf.lo.arp_announce=2<br><span class="hljs-comment">#注意：必须先设置，然后才能添加VIP</span><br><br><span class="hljs-comment">#限制响应级别：arp_ignore</span><br>0：默认值，表示可使用本地任意接口上配置的任意地址进行响应<br>1：仅在请求的目标IP配置在本地主机的接收到请求报文的接口上时，才给予响应<br><span class="hljs-comment">#限制通告级别：arp_announce</span><br>0：默认值，把本机所有接口的所有信息向每个接口的网络进行通告<br>1：尽量避免将接口信息向非直接连接网络进行通告<br>2：必须避免将接口信息向非本网络进行通告<br><br>[root@web1 ~]<span class="hljs-comment">#ifconfig lo:1 10.0.0.100/32      #添加回环ip</span><br>[root@web1 ~]<span class="hljs-comment">#ip a</span><br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    <span class="hljs-built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet 10.0.0.100/0 scope global lo:1<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host <br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000<br>    <span class="hljs-built_in">link</span>/ether 00:50:56:2c:b4:3c brd ff:ff:ff:ff:ff:ff<br>    inet 10.0.0.187/24 brd 10.0.0.255 scope global noprefixroute eth0<br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::250:56ff:fe2c:b43c/64 scope <span class="hljs-built_in">link</span> <br>       valid_lft forever preferred_lft forever<br><br><span class="hljs-comment">#RS2的IPVS配置</span><br>[root@web2 ~]<span class="hljs-comment">#echo 1 &gt;   /proc/sys/net/ipv4/conf/all/arp_ignore</span><br>[root@web2 ~]<span class="hljs-comment">#echo 2 &gt;   /proc/sys/net/ipv4/conf/all/arp_announce</span><br>[root@web2 ~]<span class="hljs-comment">#echo 1 &gt;   /proc/sys/net/ipv4/conf/lo/arp_ignore</span><br>[root@web2 ~]<span class="hljs-comment">#echo 2 &gt;   /proc/sys/net/ipv4/conf/lo/arp_announce</span><br>[root@web2 ~]<span class="hljs-comment">#ip a a 10.0.0.100/32 dev lo:1   #此命令也可添加ip</span><br>[root@web2 ~]<span class="hljs-comment">#ip a</span><br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    <span class="hljs-built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet 10.0.0.100/32 scope global lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host <br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000<br>    <span class="hljs-built_in">link</span>/ether 00:50:56:3c:10:b0 brd ff:ff:ff:ff:ff:ff<br>    inet 10.0.0.188/24 brd 10.0.0.255 scope global noprefixroute eth0<br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::250:56ff:fe3c:10b0/64 scope <span class="hljs-built_in">link</span> <br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure><h5 id="3-2-4、LVS主机的配置"><a href="#3-2-4、LVS主机的配置" class="headerlink" title="3.2.4、LVS主机的配置"></a>3.2.4、LVS主机的配置</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#在LVS上添加VIP</span><br>[root@LVS ~]<span class="hljs-comment">#ip a a 10.0.0.100/32 dev lo label lo:1</span><br>[root@LVS ~]<span class="hljs-comment">#ip a</span><br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    <span class="hljs-built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet 10.0.0.100/32 scope global lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host <br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000<br>    <span class="hljs-built_in">link</span>/ether 00:50:56:3d:ba:4d brd ff:ff:ff:ff:ff:ff<br>    inet 10.0.0.186/24 brd 10.0.0.255 scope global noprefixroute eth0<br>       valid_lft forever preferred_lft forever<br><br><span class="hljs-comment">#实现LVS 规则</span><br>[root@LVS ~]<span class="hljs-comment">#yum -y install ipvsadm</span><br>[root@LVS ~]<span class="hljs-comment">#ipvsadm -A -t 10.0.0.100:80 -s rr</span><br>[root@LVS ~]<span class="hljs-comment">#ipvsadm -a -t 10.0.0.100:80 -r 10.0.0.187:80 -g</span><br>[root@LVS ~]<span class="hljs-comment">#ipvsadm -a -t 10.0.0.100:80 -r 10.0.0.188:80 -g</span><br>[root@LVS ~]<span class="hljs-comment">#ipvsadm -Ln</span><br>IP Virtual Server version 1.2.1 (size=4096)<br>Prot LocalAddress:Port Scheduler Flags<br>  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn<br>TCP  10.0.0.100:80 rr<br>  -&gt; 10.0.0.187:80                Route   1      0          0         <br>  -&gt; 10.0.0.188:80                Route   1      0          0 <br></code></pre></td></tr></table></figure><h5 id="3-2-5、测试访问"><a href="#3-2-5、测试访问" class="headerlink" title="3.2.5、测试访问"></a>3.2.5、测试访问</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@internet ~]<span class="hljs-comment">#curl 10.0.0.100</span><br>web1<br>[root@internet ~]<span class="hljs-comment">#curl 10.0.0.100</span><br>web2<br></code></pre></td></tr></table></figure><h3 id="四、web-http协议通信过程，相关技术术语总结"><a href="#四、web-http协议通信过程，相关技术术语总结" class="headerlink" title="四、web http协议通信过程，相关技术术语总结"></a>四、web http协议通信过程，相关技术术语总结</h3><h4 id="4-1、http协议通信过程"><a href="#4-1、http协议通信过程" class="headerlink" title="4.1、http协议通信过程"></a>4.1、http协议通信过程</h4><p><a href=""><img src="image-20221113094804559.png" alt="image-20221113094804559"></a></p><h4 id="4-2、相关技术术语总结"><a href="#4-2、相关技术术语总结" class="headerlink" title="4.2、相关技术术语总结"></a>4.2、相关技术术语总结</h4><h5 id="4-2-1、WEB开发语言"><a href="#4-2-1、WEB开发语言" class="headerlink" title="4.2.1、WEB开发语言"></a>4.2.1、WEB开发语言</h5><p>http：Hyper Text Transfer Protocol 应用层协议，默认端口： 80/tcp</p><p>①<strong>html</strong>：Hyper Text Markup Language 超文本标记语言，编程语言，主要负责实现页面的结构</p><p>②<strong>CSS</strong>：Cascading Style Sheet 层叠样式表， 定义了如何显示（装扮） HTML 元素，比如：字体大小和颜色属性等。样式通常保存在外部的 .css 文件中,用于存放一些HTML文件的公共属性,从而通过仅编辑一个简单的 CSS 文档，可以同时改变站点中所有页面的布局和外观。</p><p>③<strong>Js</strong>：javascript，实现网页的动画效果，但实属于静态资源</p><h5 id="4-2-2、MIME"><a href="#4-2-2、MIME" class="headerlink" title="4.2.2、MIME"></a>4.2.2、MIME</h5><p><strong>MIME</strong> : Multipurpose Internet Mail Extensions 多用途互联网邮件扩展</p><p>文件 /etc/mime.types ,来自于mailcap包</p><p>MIME格式：type/subtype txt html jpg bmp </p><h5 id="4-2-3、URI和URL"><a href="#4-2-3、URI和URL" class="headerlink" title="4.2.3、URI和URL"></a>4.2.3、URI和URL</h5><p><strong>URI</strong>： Uniform Resource Identifier 统一资源标识，分为URL 和 URN</p><p><strong>URN</strong>：Uniform Resource Naming，统一资源命名</p><p>示例： P2P下载使用的磁力链接是URN的一种实现 magnet:?xt=urn:btih:660557A6890EF888666</p><p><strong>URL</strong>：Uniform Resorce Locator，统一资源定位符，用于描述某服务器某特定资源位置</p><p><strong>两者区别</strong>：URN如同一个人的名称，而URL代表一个人的住址。换言之，URN定义某事物的身份，而</p><p>URL提供查找该事物的方法。URN仅用于命名，而不指定地址。</p><p>URL组成</p><p><a href=""><img src="image-20221113182755150.png" alt="image-20221113182755150"></a></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">scheme:</span>方案，访问服务器以获取资源时要使用哪种协议<br><span class="hljs-symbol">user:</span>用户，某些方案访问资源时需要的用户名<br><span class="hljs-symbol">password:</span>密码，用户对应的密码，中间用：分隔<br><span class="hljs-symbol">Host:</span>主机，资源宿主服务器的主机名或IP地址<br><span class="hljs-symbol">port:</span>端口,资源宿主服务器正在监听的端口号，很多方案有默认端口号<br><span class="hljs-symbol">path:</span>路径,服务器资源的本地名，由一个/将其与前面的URL组件分隔<br><span class="hljs-symbol">params:</span>参数，指定输入的参数，参数为名/值对，多个参数，用<span class="hljs-comment">;分隔</span><br><span class="hljs-symbol">query:</span>查询，传递参数给程序，如数据库，用？分隔,多个查询用&amp;分隔<br><span class="hljs-symbol">frag:</span>片段,一小片或一部分资源的名字，此组件在客户端使用，用<span class="hljs-meta">#分隔</span><br></code></pre></td></tr></table></figure><h3 id="五、总结网络IO模型和nginx架构"><a href="#五、总结网络IO模型和nginx架构" class="headerlink" title="五、总结网络IO模型和nginx架构"></a>五、总结网络IO模型和nginx架构</h3><h4 id="5-1、网络IO模型"><a href="#5-1、网络IO模型" class="headerlink" title="5.1、网络IO模型"></a>5.1、网络IO模型</h4><p>阻塞型、非阻塞型、复用型、信号驱动型、异步</p><h5 id="5-1-1、阻塞型I-O模型（blocking-IO）"><a href="#5-1-1、阻塞型I-O模型（blocking-IO）" class="headerlink" title="5.1.1、阻塞型I/O模型（blocking IO）"></a>5.1.1、阻塞型I/O模型（blocking IO）</h5><p><a href=""><img src="image-20221113183313090.png" alt="image-20221113183313090"></a></p><p>①阻塞IO模型是最简单的I/O模型，用户线程在内核进行IO操作时被阻塞</p><p>②用户线程通过系统调用read发起I/O读操作，由用户空间转到内核空间。内核等到数据包到达后，然后将</p><p>接收的数据拷贝到用户空间，完成read操作</p><p>③用户需要等待read将数据读取到buffer后，才继续处理接收的数据。整个I/O请求的过程中，用户线程是</p><p>被阻塞的，这导致用户在发起IO请求时，不能做任何事情，对CPU的资源利用率不够</p><p><strong>优点</strong>：程序简单，在阻塞等待数据期间进程/线程挂起，基本不会占用 CPU 资源</p><p><strong>缺点</strong>：每个连接需要独立的进程/线程单独处理，当并发请求量大时为了维护程序，内存、线程切换开销</p><p>较大，apache 的prefork使用的是这种模式。</p><h5 id="5-1-2、非阻塞型I-O模型-nonblocking-IO"><a href="#5-1-2、非阻塞型I-O模型-nonblocking-IO" class="headerlink" title="5.1.2、非阻塞型I/O模型(nonblocking IO)"></a>5.1.2、非阻塞型I/O模型(nonblocking IO)</h5><p><a href=""><img src="image-20221113183553729.png" alt="image-20221113183553729"></a></p><p>用户线程发起IO请求时立即返回。但并未读取到任何数据，用户线程需要不断地发起IO请求，直到数据</p><p>到达后，才真正读取到数据，继续执行。即 “轮询”机制存在两个问题：如果有大量文件描述符都要等，</p><p>那么就得一个一个的read。这会带来大量的Context Switch（read是系统调用，每调用一次就得在用户</p><p>态和核心态切换一次）。轮询的时间不好把握。这里是要猜多久之后数据才能到。等待时间设的太长，</p><p>程序响应延迟就过大;设的太短，就会造成过于频繁的重试，干耗CPU而已，是比较浪费CPU的方式，一</p><p>般很少直接使用这种模型，而是在其他IO模型中使用非阻塞IO这一特性。</p><h5 id="5-1-3、I-O多路复用型-I-O-multiplexing"><a href="#5-1-3、I-O多路复用型-I-O-multiplexing" class="headerlink" title="5.1.3、I/O多路复用型(I/O multiplexing)"></a>5.1.3、I/O多路复用型(I/O multiplexing)</h5><p>①多路复用IO指一个线程可以同时（实际是交替实现，即并发完成）监控和处理多个文件描述符对应各自</p><p>的IO，即复用同一个线程</p><p>②一个线程之所以能实现同时处理多个IO,是因为这个线程调用了内核中的SELECT,POLL或EPOLL等系统调</p><p>用，从而实现多路复用IO</p><p><a href=""><img src="image-20221113183810139.png" alt="image-20221113183810139"></a></p><p>③它的基本原理就是select/poll/epoll这个function会不断的轮询所负责的所有socket，当某个socket有数</p><p>据到达了，就通知用户进程。</p><p>④当用户进程调用了select，那么整个进程会被block，而同时，kernel会“监视”所有select负责的socket，</p><p>当任何一个socket中的数据准备好了，select就会返回。这个时候用户进程再调用read操作，将数据从</p><p>kernel拷贝到用户进程。</p><p><strong>优点</strong>：可以基于一个阻塞对象，同时在多个描述符上等待就绪，而不是使用多个线程(每个文件描述</p><p>符一个线程)，这样可以大大节省系统资源</p><p><strong>缺点</strong>：当连接数较少时效率相比多线程+阻塞 I/O 模型效率较低，可能延迟更大，因为单个连接处</p><p>理需要 2 次系统调用，占用时间会有增加</p><p><strong>IO多路复用适用如下场合</strong>：</p><p>当客户端处理多个描述符时（一般是交互式输入和网络套接口），必须使用I/O复用</p><p>当一个客户端同时处理多个套接字时，此情况可能的但很少出现</p><p>当一个服务器既要处理监听套接字，又要处理已连接套接字，一般也要用到I/O复用</p><p>当一个服务器即要处理TCP，又要处理UDP，一般要使用I/O复用</p><p>当一个服务器要处理多个服务或多个协议，一般要使用I/O复用</p><h5 id="5-1-4、信号驱动式I-O模型-signal-driven-IO"><a href="#5-1-4、信号驱动式I-O模型-signal-driven-IO" class="headerlink" title="5.1.4、信号驱动式I/O模型(signal-driven IO)"></a>5.1.4、信号驱动式I/O模型(signal-driven IO)</h5><p><a href=""><img src="image-20221113184103536.png" alt="image-20221113184103536"></a></p><p>信号驱动I/O的意思就是进程现在不用傻等着，也不用去轮询。而是让内核在数据就绪时，发送信号通知</p><p>进程。</p><p><strong>调用的步骤</strong>：通过系统调用 sigaction ，并注册一个信号处理的回调函数，该调用会立即返回，然后</p><p>主程序可以继续向下执行，当有I/O操作准备就绪,即内核数据就绪时，内核会为该进程产生一个 SIGIO</p><p>信号，并回调注册的信号回调函数，这样就可以在信号回调函数中系统调用 recvfrom 获取数据,将用户</p><p>进程所需要的数据从内核空间拷贝到用户空间</p><p>此模型的优势在于等待数据报到达期间进程不被阻塞。用户主程序可以继续执行，只要等待来自信号处</p><p>理函数的通知。</p><p>在信号驱动式 I/O 模型中，应用程序使用套接口进行信号驱动 I/O，并安装一个信号处理函数，进程继</p><p>续运行并不阻塞</p><p>当数据准备好时，进程会收到一个 SIGIO 信号，可以在信号处理函数中调用 I/O 操作函数处理数据。</p><p><strong>优点</strong>：线程并没有在等待数据时被阻塞，内核直接返回调用接收信号，不影响进程继续处理其他请求因此</p><p>可以提高资源的利用率</p><p><strong>缺点</strong>：信号 I/O 在大量 IO 操作时可能会因为信号队列溢出导致没法通知</p><h5 id="5-1-5、异步I-O模型-asynchronous-IO"><a href="#5-1-5、异步I-O模型-asynchronous-IO" class="headerlink" title="5.1.5、异步I/O模型(asynchronous IO)"></a>5.1.5、异步I/O模型(asynchronous IO)</h5><p><a href=""><img src="image-20221113184355631.png" alt="image-20221113184355631"></a></p><p><strong>执行过程</strong>：用户进程进行aio_read系统调用之后，无论内核数据是否准备好，都会直接返回给用户进程，然后用户态进程可以去做别的事情。等到socket数据准备好了，内核直接复制数据给进程，然后从内核向进程发送通知。IO两个阶段，进程都是非阻塞的。</p><p>信号驱动IO当内核通知触发信号处理程序时，信号处理程序还需要阻塞在从内核空间缓冲区拷贝数据到</p><p>用户空间缓冲区这个阶段，而异步IO直接是在第二个阶段完成后，内核直接通知用户线程可以进行后续</p><p>操作了</p><p><strong>优点</strong>：异步 I/O 能够充分利用 DMA 特性，让 I/O 操作与计算重叠</p><p><strong>缺点</strong>：要实现真正的异步 I/O，操作系统需要做大量的工作。目前 Windows 下通过 IOCP 实现了真正的</p><p>异步 I/O，在 Linux 系统下，Linux 2.6才引入，目前 AIO 并不完善，因此在 Linux 下实现高并发网络编</p><p>程时以 IO 复用模型模式+多线程任务的架构基本可以满足需求</p><h4 id="5-2、Nginx架构"><a href="#5-2、Nginx架构" class="headerlink" title="5.2、Nginx架构"></a>5.2、Nginx架构</h4><p><a href=""><img src="image-20221118084915567.png" alt="image-20221118084915567"></a></p><h3 id="六、nginx总结核心配置和优化"><a href="#六、nginx总结核心配置和优化" class="headerlink" title="六、nginx总结核心配置和优化"></a>六、nginx总结核心配置和优化</h3><h4 id="6-1、Nginx的配置文件的组成部分"><a href="#6-1、Nginx的配置文件的组成部分" class="headerlink" title="6.1、Nginx的配置文件的组成部分"></a>6.1、Nginx的配置文件的组成部分</h4><p>①主配置文件：nginx.conf</p><p>②子配置文件: include conf.d/*.conf</p><p>③fastcgi， uwsgi，scgi 等协议相关的配置文件</p><p>④mime.types：支持的mime类型，MIME(Multipurpose Internet Mail Extensions)多用途互联网邮件扩展类型，MIME消息能包含文本、图像、音频、视频以及其他应用程序专用的数据，是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。</p><p>MIME参考文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_Types">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_Types</a></p><h4 id="6-2、nginx-配置文件格式说明"><a href="#6-2、nginx-配置文件格式说明" class="headerlink" title="6.2、nginx 配置文件格式说明"></a>6.2、nginx 配置文件格式说明</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">配置文件由指令与指令块构成<br>每条指令以;分号结尾，指令与值之间以空格符号分隔<br>可以将多条指令放在同一行,用分号分隔即可,但可读性差,不推荐<br>指令块以&#123; &#125;大括号将多条指令组织在一起,且可以嵌套指令块<br>include语句允许组合多个配置文件以提升可维护性<br>使用#符号添加注释，提高可读性<br>使用$符号使用变量<br>部分指令的参数支持正则表达式<br></code></pre></td></tr></table></figure><h4 id="6-3、主配置文件结构：四部分"><a href="#6-3、主配置文件结构：四部分" class="headerlink" title="6.3、主配置文件结构：四部分"></a>6.3、主配置文件结构：四部分</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs sh">directive value [value2 ...];<br>注意<br>(1) 指令必须以分号结尾<br>(2) 支持使用配置变量<br> 内建变量：由Nginx模块引入，可直接引用<br> 自定义变量：由用户使用<span class="hljs-built_in">set</span>命令定义,格式: <span class="hljs-built_in">set</span> variable_name value;<br> 引用变量：<span class="hljs-variable">$variable_name</span><br>主配置文件结构：四部分<br>main block：主配置段，即全局配置段，对http,mail都有效<br><span class="hljs-comment">#事件驱动相关的配置</span><br>event &#123;<br> ...<br>&#125;   <br><span class="hljs-comment">#http/https 协议相关配置段</span><br>http &#123;<br> ...<br>&#125;          <br><span class="hljs-comment">#默认配置文件不包括下面两个块</span><br><span class="hljs-comment">#mail 协议相关配置段</span><br>mail &#123;<br> ...<br>&#125;    <br><span class="hljs-comment">#stream 服务器相关配置段</span><br>stream &#123;<br> ...<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="6-4、全局配置中的必备配置和优化"><a href="#6-4、全局配置中的必备配置和优化" class="headerlink" title="6.4、全局配置中的必备配置和优化"></a>6.4、全局配置中的必备配置和优化</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs sh">user nginx nginx; <span class="hljs-comment">#启动Nginx工作进程的用户和组</span><br>worker_processes [number | auto]; <span class="hljs-comment">#启动Nginx工作进程的数量,一般设为和CPU核心数相同</span><br>worker_cpu_affinity 00000001 00000010 00000100 00001000 | auto ; <span class="hljs-comment">#将Nginx工作进程绑定到指定的CPU核心，默认Nginx是不进行进程绑定的，绑定并不是意味着当前nginx进程独占以一核心CPU，但是可以保证此进程不会运行在其他核心上，这就极大减少了nginx的工作进程在不同的cpu核心上的来回跳转，减少了CPU对进程的资源分配与回收以及内存管理等，因此可以有效的提升nginx服务器的性能。</span><br>CPU MASK: 00000001：0号CPU<br>          00000010：1号CPU<br>  10000000：7号CPU<br><span class="hljs-comment">#示例:</span><br>worker_cpu_affinity 0001 0010 0100 1000;第0号---第3号CPU<br>worker_cpu_affinity 0101 1010;<br><br><span class="hljs-comment">#错误日志记录配置，语法：error_log file [debug | info | notice | warn | error | crit | alert | emerg]</span><br><span class="hljs-comment">#error_log logs/error.log;</span><br><span class="hljs-comment">#error_log logs/error.log notice;</span><br>error_log /apps/nginx/logs/error.log error; <br><br><span class="hljs-comment">#pid文件保存路径</span><br>pid       /apps/nginx/logs/nginx.pid;<br><br>worker_priority 0; <span class="hljs-comment">#工作进程优先级，-20~20(19)</span><br>worker_rlimit_nofile 65536; <span class="hljs-comment">#所有worker进程能打开的文件数量上限,包括:Nginx的所有连接（例如与代理服务器的连接等），而不仅仅是与客户端的连接,另一个考虑因素是实际的并发连接数不能超过系统级别的最大打开文件数的限制.最好与ulimit -n 或者limits.conf的值保持一致,</span><br><br>daemon off;  <span class="hljs-comment">#前台运行Nginx服务用于测试、或者以容器运行时，需要设为off</span><br>master_process off|on; <span class="hljs-comment">#是否开启Nginx的master-worker工作模式，仅用于开发调试场景,默认为on</span><br><br>events &#123;<br>   worker_connections  65536;  <span class="hljs-comment">#设置单个工作进程的最大并发连接数</span><br>   use epoll; <span class="hljs-comment">#使用epoll事件驱动，Nginx支持众多的事件驱动，比如:select、poll、epoll，只能设置在events模块中设置。</span><br>   accept_mutex on; <span class="hljs-comment">#on为同一时刻一个请求轮流由worker进程处理,而防止被同时唤醒所有worker,避免多个睡眠进程被唤醒的设置，默认为off，新请求会唤醒所有worker进程,此过程也称为&quot;惊 群&quot;，因此nginx刚安装完以后要进行适当的优化。建议设置为on</span><br>   multi_accept on; <span class="hljs-comment">#on时Nginx服务器的每个工作进程可以同时接受多个新的网络连接，此指令默认为off，即默认为一个工作进程只能一次接受一个新的网络连接，打开后几个同时接受多个。建议设置为on</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="6-5、http-协议配置中的必备配置和优化"><a href="#6-5、http-协议配置中的必备配置和优化" class="headerlink" title="6.5、http 协议配置中的必备配置和优化"></a>6.5、http 协议配置中的必备配置和优化</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs sh">http &#123;<br>   include       mime.types; <span class="hljs-comment">#导入支持的文件类型,是相对于/apps/nginx/conf的目录</span><br>   default_type application/octet-stream; <span class="hljs-comment">#除mime.types中文件类型外,设置其它文件默认类型，访问其它类型时会提示下载不匹配的类型文件</span><br>   <br><span class="hljs-comment">#日志配置部分</span><br>    <span class="hljs-comment">#log_format main &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br>    <span class="hljs-comment">#                 &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br>    <span class="hljs-comment">#                 &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br>    <span class="hljs-comment">#access_log logs/access.log main;</span><br>    <br><span class="hljs-comment">#自定义优化参数</span><br>   sendfile       on; <br>    <span class="hljs-comment">#tcp_nopush     on; #在开启了sendfile的情况下，合并请求后统一发送给客户端,必须开启sendfile</span><br>    <span class="hljs-comment">#tcp_nodelay   off; #在开启了keepalived模式下的连接是否启用TCP_NODELAY选项，当为off时，延迟0.2s发送，默认On时，不延迟发送，立即发送用户响应报文。</span><br>    <span class="hljs-comment">#keepalive_timeout 0;</span><br>   keepalive_timeout  65 65; <span class="hljs-comment">#设置会话保持时间,第二个值为响应首部:keepAlived:timeout=65,可以和第一个值不同</span><br>    <span class="hljs-comment">#gzip on; #开启文件压缩</span><br>    <br>   server &#123;<br>       listen       80; <span class="hljs-comment">#设置监听地址和端口</span><br>       server_name localhost; <span class="hljs-comment">#设置server name，可以以空格隔开写多个并支持正则表达式，如:*.magedu.com www.magedu.* ~^www\d+\.magedu\.com$ default_server </span><br>        <span class="hljs-comment">#charset koi8-r; #设置编码格式，默认是俄语格式，建议改为utf-8</span><br>        <span class="hljs-comment">#access_log logs/host.access.log main;</span><br>       location / &#123;<br>           root   html;<br>           index index.html index.htm;<br>       &#125;<br>       <br>        <span class="hljs-comment">#error_page 404             /404.html;</span><br>        <span class="hljs-comment"># redirect server error pages to the static page /50x.html</span><br>        <span class="hljs-comment">#</span><br>       error_page   500 502 503 504 /50x.html; <span class="hljs-comment">#定义错误页面</span><br>       location = /50x.html &#123;<br>           root   html;<br>       &#125;<br>       <br>        <span class="hljs-comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123; #以http的方式转发php请求到指定web服务器</span><br>        <span class="hljs-comment">#   proxy_pass   http://127.0.0.1;</span><br>        <span class="hljs-comment">#&#125;</span><br>        <br>        <span class="hljs-comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123; #以fastcgi的方式转发php请求到php处理</span><br>        <span class="hljs-comment">#   root           html;</span><br>        <span class="hljs-comment">#   fastcgi_pass   127.0.0.1:9000;</span><br>        <span class="hljs-comment">#   fastcgi_index index.php;</span><br>        <span class="hljs-comment">#   fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name;</span><br>        <span class="hljs-comment">#   include       fastcgi_params;</span><br>        <span class="hljs-comment">#&#125;</span><br>        <br>          <span class="hljs-comment"># deny access to .htaccess files, if Apache&#x27;s document root</span><br>        <span class="hljs-comment"># concurs with nginx&#x27;s one</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ /\.ht &#123; #拒绝web形式访问指定文件，如很多的网站都是通过.htaccess文件来改变自己的重定向等功能。</span><br>        <span class="hljs-comment">#   deny all;</span><br>        <span class="hljs-comment">#&#125;</span><br>       location ~ /passwd.html &#123;<br>           deny all;<br>       &#125;<br>   &#125;<br>   <br>    <span class="hljs-comment"># another virtual host using mix of IP-, name-, and port-based configuration</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123; #自定义虚拟server</span><br>    <span class="hljs-comment">#   listen       8000;</span><br>    <span class="hljs-comment">#   listen       somename:8080;</span><br>    <span class="hljs-comment">#   server_name somename alias another.alias;</span><br>    <br>    <span class="hljs-comment">#   location / &#123; </span><br>    <span class="hljs-comment">#       root   html;</span><br>    <span class="hljs-comment">#       index index.html index.htm; #指定默认网页文件，此指令由</span><br>ngx_http_index_module模块提供<br>    <span class="hljs-comment">#   &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br>    <br>    <span class="hljs-comment"># HTTPS server</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123; #https服务器配置</span><br>    <span class="hljs-comment">#   listen       443 ssl;</span><br>    <span class="hljs-comment">#   server_name localhost;</span><br>    <br>    <span class="hljs-comment">#   ssl_certificate     cert.pem;</span><br>    <span class="hljs-comment">#   ssl_certificate_key cert.key;</span><br>    <br>    <span class="hljs-comment">#   ssl_session_cache   shared:SSL:1m;</span><br>    <span class="hljs-comment">#   ssl_session_timeout 5m;</span><br>    <br>    <span class="hljs-comment">#   ssl_ciphers HIGH:!aNULL:!MD5;</span><br>    <span class="hljs-comment">#   ssl_prefer_server_ciphers on;</span><br>    <br>    <span class="hljs-comment">#   location / &#123;</span><br>    <span class="hljs-comment">#       root   html;</span><br>    <span class="hljs-comment">#       index index.html index.htm;</span><br>    <span class="hljs-comment">#   &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br></code></pre></td></tr></table></figure><h3 id="七、使用脚本完成一键编译安装nginx任意版本"><a href="#七、使用脚本完成一键编译安装nginx任意版本" class="headerlink" title="七、使用脚本完成一键编译安装nginx任意版本"></a>七、使用脚本完成一键编译安装nginx任意版本</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs vim">#!/bin/bash<br>SRC_DIR=/usr/local/src<br>NGINX_URL=http://nginx.org/download/<br>NGINX_FILE=nginx-<span class="hljs-number">1.20</span>.<span class="hljs-number">2</span><br>TAR=.tar.gz<br>NGINX_INSTALL_DIR=/apps/nginx<br>CPUS=`lscpu |awk <span class="hljs-string">&#x27;/^CPU\(s\)/&#123;print $2&#125;&#x27;</span>`<br>. /etc/os-release<br><br>os_type () &#123;<br>   awk -F<span class="hljs-string">&#x27;[ &quot;]&#x27;</span> <span class="hljs-string">&#x27;/^NAME/&#123;print $2&#125;&#x27;</span> /etc/os-release<br>&#125;<br><br>os_version () &#123;<br>   awk -F<span class="hljs-string">&#x27;&quot;&#x27;</span> <span class="hljs-string">&#x27;/^VERSION_ID/&#123;print $2&#125;&#x27;</span> /etc/os-release<br>&#125;<br><br>check () &#123;<br>    [ -<span class="hljs-keyword">e</span> $&#123;NGINX_INSTALL_DIR&#125; ] &amp;&amp; &#123; color <span class="hljs-string">&quot;nginx 已安装,请卸载后再安装&quot;</span> <span class="hljs-number">1</span>; <span class="hljs-keyword">exit</span>; &#125;<br>    <span class="hljs-keyword">cd</span>  $&#123;SRC_DIR&#125;<br>    <span class="hljs-keyword">if</span> [  -<span class="hljs-keyword">e</span> $&#123;NGINX_FILE&#125;$&#123;TAR&#125; ];then<br>        color <span class="hljs-string">&quot;相关文件已准备好&quot;</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">else</span><br>        color <span class="hljs-string">&#x27;开始下载 nginx 源码包&#x27;</span> <span class="hljs-number">0</span><br>        wget $&#123;NGINX_URL&#125;$&#123;NGINX_FILE&#125;$&#123;TAR&#125; <br>        [ $? -ne <span class="hljs-number">0</span> ] &amp;&amp; &#123; color <span class="hljs-string">&quot;下载 $&#123;NGINX_FILE&#125;$&#123;TAR&#125;文件失败&quot;</span> <span class="hljs-number">1</span>; <span class="hljs-keyword">exit</span>; &#125; <br>    fi<br>&#125; <br><br>install () &#123;<br>    color <span class="hljs-string">&quot;开始安装 nginx&quot;</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">if</span> id nginx  &amp;&gt; /dev/null;then<br>        color <span class="hljs-string">&quot;nginx 用户已存在&quot;</span> <span class="hljs-number">1</span> <br>    <span class="hljs-keyword">else</span><br>        useradd -s /sbin/nologin -r  nginx<br>        color <span class="hljs-string">&quot;创建 nginx 用户&quot;</span> <span class="hljs-number">0</span> <br>    fi<br>    color <span class="hljs-string">&quot;开始安装 nginx 依赖包&quot;</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">if</span> [ $ID == <span class="hljs-string">&quot;centos&quot;</span> ] ;then<br>    <span class="hljs-keyword">if</span> [[ $VERSION_ID =~ ^<span class="hljs-number">7</span> ]];then<br>            yum -<span class="hljs-keyword">y</span> -q  install <span class="hljs-keyword">make</span> gcc pcre-devel openssl-devel zlib-devel <span class="hljs-keyword">perl</span>-ExtUtils-Embed<br>elif [[ $VERSION_ID =~ ^<span class="hljs-number">8</span> ]];then<br>            yum -<span class="hljs-keyword">y</span> -q install <span class="hljs-keyword">make</span> gcc-<span class="hljs-keyword">c</span>++ libtool pcre pcre-devel zlib zlib-devel openssl openssl-devel <span class="hljs-keyword">perl</span>-ExtUtils-Embed <br><span class="hljs-keyword">else</span> <br>            color <span class="hljs-string">&#x27;不支持此系统!&#x27;</span>  <span class="hljs-number">1</span><br>            <span class="hljs-keyword">exit</span><br>        fi<br>    elif [ $ID == <span class="hljs-string">&quot;rocky&quot;</span>  ];then<br>    yum -<span class="hljs-keyword">y</span> -q install <span class="hljs-keyword">make</span> gcc-<span class="hljs-keyword">c</span>++ libtool pcre pcre-devel zlib zlib-devel openssl openssl-devel <span class="hljs-keyword">perl</span>-ExtUtils-Embed <br><span class="hljs-keyword">else</span><br>        apt <span class="hljs-keyword">update</span> &amp;&gt; /dev/null<br>        apt -<span class="hljs-keyword">y</span> install <span class="hljs-keyword">make</span> gcc libpcre3 libpcre3-dev openssl libssl-dev zlib1g-dev &amp;&gt; /dev/null<br>    fi<br>    <span class="hljs-keyword">cd</span> $SRC_DIR<br>    tar xf $&#123;NGINX_FILE&#125;$&#123;TAR&#125;<br>    NGINX_DIR=`<span class="hljs-keyword">echo</span> $&#123;NGINX_FILE&#125;$&#123;TAR&#125;| sed -nr <span class="hljs-string">&#x27;s/^(.*[0-9]).*/\1/p&#x27;</span>`<br>    <span class="hljs-keyword">cd</span> $&#123;NGINX_DIR&#125;<br>    ./configure --prefix=$&#123;NGINX_INSTALL_DIR&#125; --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module --with-stream_realip_module <br>    <span class="hljs-keyword">make</span> -<span class="hljs-keyword">j</span> $CPUS &amp;&amp; <span class="hljs-keyword">make</span> install <br>    [ $? -eq <span class="hljs-number">0</span> ] &amp;&amp; color <span class="hljs-string">&quot;nginx 编译安装成功&quot;</span> <span class="hljs-number">0</span> ||  &#123; color <span class="hljs-string">&quot;nginx 编译安装失败,退出!&quot;</span> <span class="hljs-number">1</span> ;<span class="hljs-keyword">exit</span>; &#125;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;PATH=$&#123;NGINX_INSTALL_DIR&#125;/sbin:$&#123;PATH&#125;&quot;</span> &gt; /etc/<span class="hljs-keyword">profile</span>.d/nginx.<span class="hljs-keyword">sh</span><br>    <span class="hljs-keyword">cat</span> &gt; /lib/systemd/<span class="hljs-built_in">system</span>/nginx.service &lt;&lt;EOF<br>[Unit]<br>Description=The nginx HTTP <span class="hljs-built_in">and</span> <span class="hljs-built_in">reverse</span> proxy server<br>After=network.target remote-fs.target nss-lookup.target<br><br>[Service]<br>Type=forking<br>PIDFile=$&#123;NGINX_INSTALL_DIR&#125;/logs/nginx.pid<br>ExecStartPre=/bin/rm -<span class="hljs-keyword">f</span> $&#123;NGINX_INSTALL_DIR&#125;/logs/nginx.pid<br>ExecStartPre=$&#123;NGINX_INSTALL_DIR&#125;/sbin/nginx -t<br>ExecStart=$&#123;NGINX_INSTALL_DIR&#125;/sbin/nginx<br>ExecReload=/bin/kill -s HUP \$MAINPID<br>KillSignal=SIGQUIT<br>TimeoutStopSec=<span class="hljs-number">5</span><br>KillMode=process<br>PrivateTmp=true<br>LimitNOFILE=<span class="hljs-number">100000</span><br><br>[Install]<br>WantedBy=multi-user.target<br>EOF<br>    systemctl daemon-reload<br>    systemctl enable --now nginx &amp;&gt; /dev/null <br>    systemctl <span class="hljs-keyword">is</span>-active nginx &amp;&gt; /dev/null ||  &#123; color <span class="hljs-string">&quot;nginx 启动失败,退出!&quot;</span> <span class="hljs-number">1</span> ; <span class="hljs-keyword">exit</span>; &#125;<br>    color <span class="hljs-string">&quot;nginx 安装完成&quot;</span> <span class="hljs-number">0</span><br>&#125;<br><br>check<br>install<br><br></code></pre></td></tr></table></figure><h3 id="八、任意编译一个第3方nginx模块，并使用"><a href="#八、任意编译一个第3方nginx模块，并使用" class="headerlink" title="八、任意编译一个第3方nginx模块，并使用"></a>八、任意编译一个第3方nginx模块，并使用</h3><p><strong>nginx-module-vts模块实现流量监控</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">https://github.com/vozlt/nginx-module-vts<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221127183749418.png" alt="image-20221127183749418"></a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#cd /usr/local/src</span><br>[root@Rocky src]<span class="hljs-comment">#wget https://github.com/vozlt/nginx-module-vts/archive/refs/tags/v0.2.1.tar.gz</span><br>[root@Rocky src]<span class="hljs-comment">#tar xf v0.2.1.tar.gz</span><br>[root@Rocky src]<span class="hljs-comment">#ls</span><br>nginx-1.22.1  nginx-1.22.1.tar.gz  nginx-module-vts-0.2.1  v0.2.1.tar.gz<br>[root@Rocky src]<span class="hljs-comment">#cd nginx-1.22.1/</span><br>[root@Rocky nginx-1.22.1]<span class="hljs-comment">#nginx -V    #查看Nginx已安装的模块</span><br>nginx version: nginx/1.23.2<br>built by gcc 8.5.0 20210514 (Red Hat 8.5.0-10) (GCC) <br>built with OpenSSL 1.1.1k  FIPS 25 Mar 2021<br>TLS SNI support enabled<br>configure arguments: --prefix=/apps/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module --with-stream_realip_module<br><span class="hljs-comment">#添加新模块--add-module=/usr/local/src/nginx-module-vts-0.2.1</span><br>[root@Rocky nginx-1.22.1]<span class="hljs-comment">#./configure --prefix=/apps/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module --with-stream_realip_module --add-module=/usr/local/src/nginx-module-vts-0.2.1</span><br>[root@Rocky nginx-1.22.1]<span class="hljs-comment">#make -j 2 &amp;&amp; make install</span><br><br>http &#123;<br>  ......<br>  vhost_traffic_status_zone;             <span class="hljs-comment">#添加此行</span><br>  ......<br>  server &#123;<br>     ......<br>     location /status &#123;<br>           vhost_traffic_status_display;<br>           vhost_traffic_status_display_format html;<br>     &#125;<br>  ......<br>  &#125;<br>&#125;<br>:wq<br>[root@Rocky nginx-1.20.2]<span class="hljs-comment">#systemctl restart nginx</span><br></code></pre></td></tr></table></figure><p>添加监控模块前</p><p><a href=""><img src="image-20221127192944905.png" alt="image-20221127192944905"></a></p><p>添加监控模块后</p><p><a href=""><img src="image-20221127192850248.png" alt="image-20221127192850248"></a></p><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第七周作业</title>
    <link href="/2022/11/01/%E7%AC%AC%E4%B8%83%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/11/01/%E7%AC%AC%E4%B8%83%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="一、postgresql架构与原理"><a href="#一、postgresql架构与原理" class="headerlink" title="一、postgresql架构与原理"></a>一、postgresql架构与原理</h3><h4 id="1-1、体系架构概览"><a href="#1-1、体系架构概览" class="headerlink" title="1.1、体系架构概览"></a>1.1、体系架构概览</h4><p>①PostgreSQL和MySQL相似,也采用典型的C/S模型。</p><p>②PostgreSQL体系结构分两部分</p><p>​    ——实例 instance</p><p>​    ——磁盘存储</p><p>③实例 instance 包括</p><p>   ——进程</p><p>   ——内存存储结构</p><p><a href=""><img src="image-20221102160659303.png" alt="image-20221102160659303"></a></p><h4 id="1-2、进程和内存结构"><a href="#1-2、进程和内存结构" class="headerlink" title="1.2、进程和内存结构"></a>1.2、进程和内存结构</h4><p>PostgreSQL是进程架构模型，MySQL是线程架构模型。</p><p><a href=""><img src="image-20221102160919783.png" alt="image-20221102160919783"></a></p><h5 id="1-2-1、进程"><a href="#1-2-1、进程" class="headerlink" title="1.2.1、进程"></a>1.2.1、进程</h5><p><strong>Postmaster 主进程</strong></p><p>​    它是整个数据库实例的主控制进程，负责启动和关闭该数据库实例。</p><p>​    实际上,使用pg ctl来启动数据库时，pg_ctl也是通过运行postgres来启动数据库的，只是它做了一些包装,更容易启动数据库。</p><p>​    它是第一个PostgreSQL进程，此主进程还会fork出其他子进程，并管理它们。</p><p>​    当用户和PostgreSQL建立连接时，首先是和Postmaster进程建立连接。首先，客户端会发出身份验证的信息给Postmaster进程，Postmaster进程根据消息中的信息进行身份验证判断，如果验证通过，它会fork出一个会话子进程为这个连接服务。</p><p>​    当某个服务进程出现错误的时候，Postmaster主进程会自动完成系统的恢复。恢复过程中会停掉所有的服务进程,然后进行数据库数据的一致性恢复,等恢复完成后，数据库又可以接受新的连接。</p><p>​    验证功能是通过配置文件pg_hba.conf和用户验证模块来提供。</p><p>​    postmaster 程序是指向postgres的软链接</p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">[root@ubuntu2004 ~]<span class="hljs-comment">#ll /apps/pgsql/bin/postmaster </span><br>lrwxrwxrwx 1 root root 8 Dec 28 01:19 /apps/pgsql/bin/postmaster -&gt; <br>postgres*<br></code></pre></td></tr></table></figure><p><strong>BgWriter 后台写进程</strong></p><p>​    为了提高插入、删除和更新数据的性能，当往数据库中插入或者更新数据时，并不会马上把数据持久化到数据文件中,而是先写入Buffer中</p><p>​    该辅助进程可以周期性的把内存中的脏数据刷新到磁盘中</p><p><strong>WalWriter 预写式日志进程</strong></p><p>​    WAL是write ahead log的缩写，WAL log旧版中称为xlog，相当于MySQL中Redo log</p><p>​    预写式日志是在修改数据之前，必须把这些修改操作记录到磁盘中，这样后面更新实际数据时，就不需要实时的把数据持久化到文件中了。即使机器突然宕机或者数据库异常退出， 导致一部分内存中的脏数据没有及时的刷新到文件中，在数据库重启后，通过读取WAL日志，并把最后一部分WAL日志重新执行一遍，就能恢复到宕机时的状态了</p><p>​    WAL日志保存在pg_wal目录(早期版本为pg_xlog) 下。每个xlog 文件默认是16MB,为了满足恢复要求，在pg_wal目录下会产生多个WAL日志，这样就可保证在宕机后，未持久化的数据都可以通过WAL日志来恢复，那些不需要的WAL日志将会被自动覆盖</p><p><strong>Checkpointer 检查点进程</strong></p><p>​    检查点(Checkpoints)是事务序列中的点,保证在该点之前的所有日志信息都更新到数据文件</p><p>中。</p><p>​    在检查点时，所有脏数据页都冲刷到磁盘并且向日志文件中写入一条特殊的检查点记录。在发生崩溃的时候，恢复器就知道应该从日志中的哪个点（称做 redo 记录）开始做 REDO 操作，因为在该记录前的对数据文件的任何修改都已经在磁盘上了。在完成检查点处理之后，任何在redo记录之前写的日志段都不再需要，因此可以循环使用或者删除。在进行 WAL 归档的时候，这些日志在循环利用或者删除之前应该必须先归档保存</p><p>​    检查点进程 (CKPT) 在特定时间自动执行一个检查点,通过向数据库写入进程 (BgWriter) 传递消息来启动检查点请求</p><p><strong>AutoVacuum 自动清理进程</strong></p><p>​    执行delete操作时，旧的数据并不会立即被删除，在更新数据时，也不会在旧的数据上做更新，而是新生成一行数据。旧的数据只是被标识为删除状态，在没有并发的其他事务读到这些旧数据时，它们才会被清除掉</p><p>​    autovacuum lanucher 负责回收垃圾数据的master进程,如果开启了autovacuum的话,那么postmaster会fork这个进程</p><p>​    autovacuum worker 负责回收垃圾数据的worker进程,是lanucher进程fork出来的</p><p><strong>PgStat 统计数据收集进程</strong></p><p>​    此进程主要做数据的统计收集工作</p><p>​    收集的信息主要用于查询优化时的代价估算。统计的数据包括对一个表或索引进行的插入、删除、更新操作，磁盘块读写的次数以及行的读次数等。</p><p>​    系统表pg_statistic中存储了PgStat收集的各类统计信息</p><p><strong>PgArch 归档进程</strong></p><p>​    默认没有此进程,开启归档功能后才会启动archiver进程</p><p>​    WAL日志文件会被循环使用，也就是说WAL日志会被覆盖,利用PgArch进程会在覆盖前把WAL日志备份出来,类似于binlog,可用于备份功能</p><p>​    PostgreSQL 从8.X版本开始提供了PITR ( Point-In-Time-Recovery)技术，即就是在对数据厍进行过一次全量备份后，该技术将备份时间点后面的WAL日志通过归档进行备份，将来可以使用数据库的全量备份再加上后面产生的WAL 日志，即可把数据库向前恢复到全量备份后的任意一个时间点的状态</p><p><strong>SysLogger 系统日志进程</strong></p><p>​    默认没有此进程,配置文件 postgresql.conf 设置参数logging_collect设置为“on”时，主进程才会启动SysLogger辅助进程</p><p>​    它从Postmaster主进程、所有的服务进程以及其他辅助进程收集所有的stderr输出，并将这些输出写入到日志文件中</p><p><strong>startup 启动进程</strong></p><p>​    用于数据库恢复的进程</p><p><strong>Session 会话进程</strong></p><p>​    每一个用户发起连接后，一旦验证成功,postmaster进程就会fork—个新的子进程负责连接此</p><p>用户。</p><p>​    通常表现为进程形式： postgres postgres [local] idle</p><p>案例: 查看进程</p><p><a href=""><img src="image-20221102161934614.png" alt="image-20221102161934614"></a></p><h5 id="1-2-2、内存结构"><a href="#1-2-2、内存结构" class="headerlink" title="1.2.2、内存结构"></a>1.2.2、内存结构</h5><p>PostgreSQL的内存空间包括共享内存和本地内存两部分</p><p><strong>共享内存</strong></p><p>​    PostgreSQL启动后，会生成一块共享内存，共享内存主要用做数据块的缓冲区，以便提高读写性能。WAL日志缓冲区和CLOG(Commit log)缓冲区也存在于共享内存中。除此以外，一些全局信息也保存在共享内存中，如进程信息、锁的信息、全局统计信息等。</p><p>​    PostgreSQL 9.3之前的版本与Oracle数据库一样，都是使用“System V”类型的共享内存，但到PostgreSQL9.3之后，PostgreSQL使用mmap()方式共享内存,好处能使用较大的共享内存。</p><p>​    可以通过配置postgresql.conf文件中shared_buffers 指定，默认128M，建议是内存的50%</p><p><strong>本地内存</strong></p><p>​    后台服务进程除访问共享内存外，还会申请分配一些本地内存，以便暂存一些不需要全局存储的数据。</p><p>​    都可以通过在配置postgresql.conf文件中指定</p><p>​    这些内存缓冲区主要有以下几类：</p><p>​        temp_buffers :用于访问临时表的本地缓冲区，默认为8M</p><p>​        work_mem:内部排序操作和Hash表在使用临时磁盘文件之前使用的内存缓冲区,默认为4M</p><p>​        maintenance_work_mem:在维护性操作(比如 VACUUM、CREATE INDEX和ALTERTABLE ADD FOREIGN KEY 等）中使用的内存缓冲区，默认为64M</p><h4 id="1-3、数据更新过程"><a href="#1-3、数据更新过程" class="headerlink" title="1.3、数据更新过程"></a>1.3、数据更新过程</h4><p><a href=""><img src="image-20221102163110717.png" alt="image-20221102163110717"></a></p><p>①先将数据库文件中的更改的数据加载至内存</p><p>②在内存更新数据</p><p>③将日志写入内存WAL的缓存区</p><p>④将日志提交，将日志写入操作系统 cache</p><p>⑤同步日志到磁盘</p><p>⑥后台写数据库的更新后的数据到操作系统 cache</p><p>⑦写完数据后，更新检查点checkpoint</p><p>⑧同步数据到磁盘</p><h3 id="二、基于流复制完成postgresql的高可用"><a href="#二、基于流复制完成postgresql的高可用" class="headerlink" title="二、基于流复制完成postgresql的高可用"></a>二、基于流复制完成postgresql的高可用</h3><h4 id="2-1、基础环境准备"><a href="#2-1、基础环境准备" class="headerlink" title="2.1、基础环境准备"></a>2.1、基础环境准备</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#两个主机节点</span><br>10.0.0.184 Master<br>10.0.0.185 Standby<br></code></pre></td></tr></table></figure><h4 id="2-2、Master节点配置"><a href="#2-2、Master节点配置" class="headerlink" title="2.2、Master节点配置"></a>2.2、Master节点配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#创建复制的用户并授权</span><br>[postgres@Rocky ~]<span class="hljs-variable">$psql</span><br>postgres=<span class="hljs-comment"># create role repluser with replication login password &#x27;123456&#x27;;</span><br><br><span class="hljs-comment">#修改pg_hba.conf进行授权</span><br>[postgres@Rocky ~]<span class="hljs-variable">$vim</span> /pgsql/data/pg_hba.conf<br>host    replication     repluser        10.0.0.0/24             md5<br><br><span class="hljs-comment">#修改配置(可选):</span><br>[postgres@Rocky ~]<span class="hljs-variable">$vim</span> /pgsql/data/postgresql.conf<br>archive_mode = on   <span class="hljs-comment">#建议打开归档模式,防止长时间无法同步,WAL被覆盖造成数据丢失</span><br>archive_command = <span class="hljs-string">&#x27;[ ! -f /archive/%f ] &amp;&amp; cp %p /archive/%f&#x27;</span><br>:wq<br>[root@Rocky ~]<span class="hljs-comment">#mkdir /archive</span><br>[root@Rocky ~]<span class="hljs-comment">#chown -R postgres. /archive</span><br><br>[postgres@Rocky ~]<span class="hljs-variable">$pg_ctl</span> restart<br></code></pre></td></tr></table></figure><h4 id="2-3、Standby节点配置"><a href="#2-3、Standby节点配置" class="headerlink" title="2.3、Standby节点配置"></a>2.3、Standby节点配置</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#清空数据和归档</span><br>[postgres@Rocky ~]<span class="hljs-variable">$pg_ctl</span> stop<br>[postgres@Rocky ~]<span class="hljs-variable">$rm</span> -rf /pgsql/data/*           <span class="hljs-comment">#清空数据库</span><br>[postgres@Rocky ~]<span class="hljs-variable">$rm</span> -rf /archive/*              <span class="hljs-comment">#清空归档，归档最好开启，此目录需要自己创建</span><br>[postgres@Rocky ~]<span class="hljs-variable">$rm</span> -rf /pgsql/backup/*         <span class="hljs-comment">#清空以前的备份，如果没有则需要穿件备份目录</span><br><br>[root@Rocky ~]<span class="hljs-comment">#mkdir /pgsql/backup</span><br>[root@Rocky ~]<span class="hljs-comment">#chown postgres. /pgsql/backup</span><br>[root@Rocky ~]<span class="hljs-comment">#mkdir /archive</span><br>[root@Rocky ~]<span class="hljs-comment">#chown postgres. /archive</span><br><br><span class="hljs-comment">#备份主库数据到备库</span><br>[postgres@Rocky ~]<span class="hljs-variable">$pg_basebackup</span> -D /pgsql/backup/ -Ft -Pv -Urepluser -h 10.0.0.184 -p 5432 -R                         <span class="hljs-comment">#-R：必须有 -Pv：是显示复制过程</span><br>[postgres@Rocky ~]<span class="hljs-variable">$ls</span> /pgsql/backup           <span class="hljs-comment">#查看数据已备份</span><br>backup_manifest  base.tar  pg_wal.tar<br><br><span class="hljs-comment">#还原备份的数据,实现初始的主从数据同步</span><br>[postgres@Rocky ~]<span class="hljs-variable">$tar</span> xf /pgsql/backup/base.tar -C /pgsql/data<br>[postgres@Rocky ~]<span class="hljs-variable">$tar</span> xf /pgsql/backup/pg_wal.tar -C /archive/<br>[postgres@Rocky ~]<span class="hljs-variable">$ls</span> /archive           <span class="hljs-comment">#查看归档日志已解压</span><br>000000010000000000000003<br>[postgres@Rocky ~]<span class="hljs-variable">$ls</span> /pgsql/data        <span class="hljs-comment">#查看数据已解压</span><br>backup_label    pg_dynshmem   pg_multixact  pg_snapshots  pg_tblspc    pg_xact      standby.signal  base          pg_hba.conf   pg_notify     pg_stat      pg_twophase    tablespace_map  global        pg_ident.conf pg_replslot   pg_stat_tmp  PG_VERSION   postgresql.conf pg_commit_ts  pg_logical    pg_serial     pg_subtrans  pg_wal       serverlog       postgresql.auto.conf<br><br><span class="hljs-comment">#修改postgresql.conf文件</span><br>[postgres@Rocky ~]<span class="hljs-variable">$vim</span> /pgsql/data/postgresql.conf<br>primary_conninfo = <span class="hljs-string">&#x27;host=10.0.0.184 port=5432 user=repluser password=123456&#x27;</span><br>restore_command = <span class="hljs-string">&#x27;cp /archive/%f %p&#x27;</span> <span class="hljs-comment">#此项可不配置</span><br>:wq<br><br>[postgres@Rocky ~]<span class="hljs-variable">$pg_ctl</span> start<br></code></pre></td></tr></table></figure><h4 id="2-4、监控同步状态"><a href="#2-4、监控同步状态" class="headerlink" title="2.4、监控同步状态"></a>2.4、监控同步状态</h4><h5 id="2-4-1、查看主库状态"><a href="#2-4-1、查看主库状态" class="headerlink" title="2.4.1、查看主库状态"></a>2.4.1、查看主库状态</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#pg_controldata</span><br>pg_control version number:            1300<br>Catalog version number:               202107181<br>Database system identifier:           7160103462514775493<br>Database cluster state:               <span class="hljs-keyword">in</span> production    <span class="hljs-comment">#主库状态</span><br><br>postgres=<span class="hljs-comment"># select pid,state,client_addr,sync_priority,sync_state from pg_stat_replication;</span><br> pid  |   state   | client_addr | sync_priority | sync_state <br>------+-----------+-------------+---------------+------------<br> 4499 | streaming | 10.0.0.185  |             0 | async<br><span class="hljs-comment">#                    从服务器ip                   异步（sync：同步）</span><br><br><span class="hljs-comment">#下面只在主节点查看同步模式,注意:如果无从节点连接,将无任何显示信息</span><br>postgres=<span class="hljs-comment"># SELECT pg_current_wal_insert_lsn(),* from pg_stat_replication;</span><br>-[ RECORD 1 ]-------------+------------------------------<br>pg_current_wal_insert_lsn | 0/4000148              <span class="hljs-comment">#当前的lsn号</span><br>pid                       | 4499<br>usesysid                  | 16384<br>usename                   | repluser<br>application_name          | walreceiver<br>client_addr               | 10.0.0.185<br>client_hostname           | <br>client_port               | 34426<br>backend_start             | 2022-11-02 17:33:24.681961+08<br>backend_xmin              | <br>state                     | streaming<br>sent_lsn                  | 0/4000148  <span class="hljs-comment">#同步的lsn号,和上面一致,说明同步,有差表示有同步延迟</span><br>write_lsn                 | 0/4000148<br>flush_lsn                 | 0/4000148<br>replay_lsn                | 0/4000148<br>write_lag                 | <br>flush_lag                 | <br>replay_lag                | <br>sync_priority             | 0<br>sync_state                | async<br>reply_time                | 2022-11-02 17:41:55.510802+08<br><br><span class="hljs-comment">#服务器查看数据库是否为备库，f表主库 t表示为备库</span><br>postgres=<span class="hljs-comment"># select * from pg_is_in_recovery();</span><br> pg_is_in_recovery <br>-------------------<br> f<br><br></code></pre></td></tr></table></figure><h5 id="2-4-2、查看从库状态"><a href="#2-4-2、查看从库状态" class="headerlink" title="2.4.2、查看从库状态"></a>2.4.2、查看从库状态</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#从节点可以读</span><br>postgres=<span class="hljs-comment"># select * from student;</span><br> <span class="hljs-built_in">id</span> |              name              <br>----+--------------------------------<br>  1 | zhang <br>  <br><span class="hljs-comment">#从节点不支持写</span><br>postgres=<span class="hljs-comment"># insert into student(name)values(&#x27;wang&#x27;);</span><br>ERROR:  cannot execute INSERT <span class="hljs-keyword">in</span> a read-only transaction<br><br>[root@Rocky ~]<span class="hljs-comment">#pg_controldata</span><br>pg_control version number:            1300<br>Catalog version number:               202107181<br>Database system identifier:           7160103462514775493<br>Database cluster state:               <span class="hljs-keyword">in</span> archive recovery   <span class="hljs-comment">#从库状态</span><br></code></pre></td></tr></table></figure><h4 id="2-5、切换主从"><a href="#2-5、切换主从" class="headerlink" title="2.5、切换主从"></a>2.5、切换主从</h4><h5 id="2-5-1、将从库切换为主库"><a href="#2-5-1、将从库切换为主库" class="headerlink" title="2.5.1、将从库切换为主库"></a>2.5.1、将从库切换为主库</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sh">[postgres@Rocky ~]<span class="hljs-variable">$pg_ctl</span> promote<br>waiting <span class="hljs-keyword">for</span> server to promote.... <span class="hljs-keyword">done</span><br>server promoted<br><br>[postgres@Rocky ~]<span class="hljs-variable">$pg_controldata</span><br>pg_control version number:            1300<br>Catalog version number:               202107181<br>Database system identifier:           7160103462514775493<br>Database cluster state:               <span class="hljs-keyword">in</span> production     <span class="hljs-comment">#现在是主库状态了</span><br><br>[postgres@Rocky ~]<span class="hljs-variable">$pg_ctl</span> restart<br><br></code></pre></td></tr></table></figure><h5 id="2-5-2、将原主库切换为从库"><a href="#2-5-2、将原主库切换为从库" class="headerlink" title="2.5.2、将原主库切换为从库"></a>2.5.2、将原主库切换为从库</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#清空数据和归档</span><br>[postgres@Rocky ~]<span class="hljs-variable">$pg_ctl</span> stop<br>[postgres@Rocky ~]<span class="hljs-variable">$rm</span> -rf /pgsql/data/*          <br>[postgres@Rocky ~]<span class="hljs-variable">$rm</span> -rf /archive/*              <br>[postgres@Rocky ~]<span class="hljs-variable">$rm</span> -rf /pgsql/backup/*<br><br>[root@Rocky ~]<span class="hljs-comment">#mkdir /pgsql/backup</span><br>[root@Rocky ~]<span class="hljs-comment">#chown postgres. /pgsql/backup</span><br><br><span class="hljs-comment">#备份主库数据到备库</span><br>[postgres@Rocky ~]<span class="hljs-variable">$pg_basebackup</span> -D /pgsql/backup/ -Ft -Pv -Urepluser -h 10.0.0.185 -p 5432 -R                         <span class="hljs-comment">#-R：必须有 -Pv：是显示复制过程</span><br>[postgres@Rocky ~]<span class="hljs-variable">$ls</span> /pgsql/backup           <span class="hljs-comment">#查看数据已备份</span><br>backup_manifest  base.tar  pg_wal.tar<br><br><span class="hljs-comment">#还原备份的数据,实现初始的主从数据同步</span><br>[postgres@Rocky ~]<span class="hljs-variable">$tar</span> xf /pgsql/backup/base.tar -C /pgsql/data<br>[postgres@Rocky ~]<span class="hljs-variable">$tar</span> xf /pgsql/backup/pg_wal.tar -C /archive/<br><br><span class="hljs-comment">#修改postgresql.conf文件</span><br>[postgres@Rocky ~]<span class="hljs-variable">$vim</span> /pgsql/data/postgresql.conf<br>primary_conninfo = <span class="hljs-string">&#x27;host=10.0.0.185 port=5432 user=repluser password=123456&#x27;</span><br>restore_command = <span class="hljs-string">&#x27;cp /archive/%f %p&#x27;</span> <span class="hljs-comment">#此项可不配置</span><br>:wq<br><br>[postgres@Rocky ~]<span class="hljs-variable">$pg_ctl</span> start<br><br><span class="hljs-comment">#在原主库服务器查看状态</span><br>[postgres@Rocky ~]<span class="hljs-variable">$pg_controldata</span><br>pg_control version number:            1300<br>Catalog version number:               202107181<br>Database system identifier:           7160103462514775493<br>Database cluster state:               <span class="hljs-keyword">in</span> archive recovery  <span class="hljs-comment">#现在已是从服务状态</span><br><br>postgres=<span class="hljs-comment"># select * from pg_is_in_recovery();</span><br> pg_is_in_recovery <br>-------------------<br> t<br>(1 row)<br></code></pre></td></tr></table></figure><h5 id="2-5-3、验证同步状态"><a href="#2-5-3、验证同步状态" class="headerlink" title="2.5.3、验证同步状态"></a>2.5.3、验证同步状态</h5><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">#在新主服务器插入数据，看从服务器是否更新<br>#主服务器插入数据<br>postgres=# insert into student(name)values(<span class="hljs-emphasis">&#x27;li&#x27;</span>);<br>INSERT 0 1<br>postgres=# select * from student;<br><span class="hljs-section"> id |              name              </span><br><span class="hljs-section">----+--------------------------------</span><br><span class="hljs-code">  1 | zhang                         </span><br><span class="hljs-code"> 34 | li  </span><br><span class="hljs-code"> </span><br>#从服务器查看数据，已更新<br>postgres=# select * from student;<br><span class="hljs-section"> id |              name              </span><br><span class="hljs-section">----+--------------------------------</span><br><span class="hljs-code">  1 | zhang                         </span><br><span class="hljs-code"> 34 | li  </span><br></code></pre></td></tr></table></figure><h3 id="三、实现postgresql的时间点还原"><a href="#三、实现postgresql的时间点还原" class="headerlink" title="三、实现postgresql的时间点还原"></a>三、实现postgresql的时间点还原</h3><h4 id="3-1、备份"><a href="#3-1、备份" class="headerlink" title="3.1、备份"></a>3.1、备份</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#在服务器端开启归档设置</span><br>[root@server ~]<span class="hljs-comment">#su - postgres</span><br>[postgres@server ~]<span class="hljs-variable">$vim</span> /pgsql/data/postgresql.conf<br>archive_mode = on<br>archive_command = <span class="hljs-string">&#x27;test ! -f /archive/%f &amp;&amp;cp %p /archive/%f&#x27;</span><br>:wq<br>[root@server ~]<span class="hljs-comment">#mkdir /archive</span><br>[root@server ~]<span class="hljs-comment">#chown postgres. /archive</span><br>[postgres@server ~]<span class="hljs-variable">$pg_ctl</span> restart<br><br><span class="hljs-comment">#在服务器端创建复制的用户并授权</span><br>[postgres@server ~]<span class="hljs-variable">$psql</span><br>postgres=<span class="hljs-comment"># create role repluser with replication login password &#x27;123456&#x27;;</span><br><span class="hljs-comment">#修改pg_hba.conf进行授权</span><br>[postgres@server ~]<span class="hljs-variable">$vim</span> /pgsql/data/pg_hba.conf<br>host replication repluser 10.0.0.0/24 md5<br>:wq<br>[postgres@server ~]<span class="hljs-variable">$pg_ctl</span> restart<br><br><span class="hljs-comment">#在服务器端创建测试数据</span><br>[postgres@server ~]<span class="hljs-variable">$psql</span><br>postgres=<span class="hljs-comment"># create database test1;           #创建test1数据库</span><br>postgres=<span class="hljs-comment"># \c test1</span><br>test1=<span class="hljs-comment"># create table student(id int,name char(30));  #创建student表</span><br>test1=<span class="hljs-comment"># insert into student values(1,&#x27;zhang&#x27;);       #在表中插入数据</span><br>test1=<span class="hljs-comment"># insert into student values(2,&#x27;song&#x27;);</span><br>test1=<span class="hljs-comment"># insert into student values(3,&#x27;li&#x27;);</span><br>test1=<span class="hljs-comment"># insert into student values(4,&#x27;wang&#x27;);</span><br><br><span class="hljs-comment">#在测试服务器上进行备份</span><br>[postgres@<span class="hljs-built_in">test</span> ~]<span class="hljs-variable">$vim</span> /pgsql/data/postgresql.conf <br>archive_mode = on     <span class="hljs-comment">#开启归档</span><br>archive_command = <span class="hljs-string">&#x27;test ! -f /archive/%f  &amp;&amp; cp %p /archive/%f&#x27;</span><br>:wq<br>[root@<span class="hljs-built_in">test</span> ~]<span class="hljs-comment">#mkdir /archive</span><br>[root@<span class="hljs-built_in">test</span> ~]<span class="hljs-comment">#chown postgres. /archive</span><br>[postgres@Rocky ~]<span class="hljs-variable">$pg_ctl</span> restart<br>[root@<span class="hljs-built_in">test</span> ~]<span class="hljs-comment">#mkdir /pgsql/backup</span><br>[root@<span class="hljs-built_in">test</span> ~]<span class="hljs-comment">#chown postgres. /pgsql/backup/</span><br>[root@<span class="hljs-built_in">test</span> ~]<span class="hljs-comment">#pg_basebackup -D /pgsql/backup/ -Ft -Pv -Urepluser -h 10.0.0.184 -p 5432 -R                           #备份到/pgsql/backup/</span><br><br><span class="hljs-comment">#在PG服务器上继续生成测试数据</span><br>test1=<span class="hljs-comment"># insert into student values(5,&#x27;liu&#x27;);</span><br>test1=<span class="hljs-comment"># insert into student values(6,&#x27;han&#x27;);</span><br><br><span class="hljs-comment">#模拟数据库删除</span><br>postgres=<span class="hljs-comment"># drop database test1;</span><br><br><span class="hljs-comment">#发现故障，停止用户访问</span><br><span class="hljs-comment">#查看当前日志文件</span><br>postgres=<span class="hljs-comment"># select pg_walfile_name(pg_current_wal_lsn());</span><br>     pg_walfile_name      <br>--------------------------<br> 000000010000000000000004<br> <br><span class="hljs-comment">#查看当前事务ID</span><br>postgres=<span class="hljs-comment"># select txid_current();</span><br> txid_current <br>--------------<br>          744<br></code></pre></td></tr></table></figure><h4 id="3-2、还原"><a href="#3-2、还原" class="headerlink" title="3.2、还原"></a>3.2、还原</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在服务器上切换归档日志</span><br>postgres=# select pg_switch_wal();<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在测试机上还原，先停止服务</span><br>[postgres@test ~]$pg_ctl stop<br><span class="hljs-meta prompt_">#</span><span class="language-bash">在测试机上将数据进行还原</span><br>[root@test ~]#rm -rf /pgsql/data/*<br>[root@test ~]#rm -rf /archive/*<br>[root@test ~]#tar xf /pgsql/backup/base.tar -C /pgsql/data<br>[root@test ~]#rsync -a 10.0.0.184:/archive/ /archive/<br>[root@test ~]#ls /archive<br>000000010000000000000001  000000010000000000000003  000000010000000000000003.00000028.backup<br>000000010000000000000002  000000010000000000000004<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看故障点事务ID</span><br>[root@test ~]#pg_waldump /archive/000000010000000000000004<br>rmgr: Transaction len (rec/tot):     34/    34, tx:        742, lsn: 0/04000290, prev 0/04000230, desc: COMMIT 2022-11-03 11:39:07.796583 CST<br><br>rmgr: Database    len (rec/tot):     38/    38, tx:        743, lsn: 0/04000880, prev 0/04000808, desc: DROP dir 1663/16385<br><span class="hljs-meta prompt_">#</span><span class="language-bash">可以确认删库的事务<span class="hljs-built_in">id</span>是743，所有恢复到742即可（恢复到2022-11-03 11:39:07.796583时间点也可以）</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改配置文件postgresql.conf</span><br>[postgres@test ~]$vim /pgsql/data/postgresql.conf<br>restore_command = &#x27;cp /archive/%f %p&#x27;<br>recovery_target_xid = &#x27;742&#x27;<br>:wq<br><span class="hljs-meta prompt_">#</span><span class="language-bash">也可以通过下面方式指定还原至的位置</span><br>recovery_target_time = &#x27;2022-11-03 11:39:07&#x27;<br>recovery_target_lsn = &#x27;0/04000290&#x27;<br><br>[postgres@test ~]$pg_ctl start<br><br>[postgres@test ~]$psql<br>postgres=# \l             #可以看到test1数据库已恢复<br>                                  List of databases<br>   Name    |  Owner   | Encoding |   Collate   |    Ctype    |   Access privileges   <br>-----------+----------+----------+-------------+-------------+-----------------------<br> postgres  | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | <br> template0 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +<br>           |          |          |             |             | postgres=CTc/postgres<br> template1 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +<br>           |          |          |             |             | postgres=CTc/postgres<br> test1     | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | <br>test1=# select * from student;         #删库前的所有数据已恢复<br> id |              name              <br>----+--------------------------------<br>  1 | zhang                         <br>  2 | song                          <br>  3 | li                            <br>  4 | wang                          <br>  5 | liu                           <br>  6 | han <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">当前无法写入</span><br>test1=# insert into student values(7,&#x27;sun&#x27;);<br>2022-11-03 12:02:08.031 CST [35762] ERROR:  cannot execute INSERT in a read-only transaction<br>2022-11-03 12:02:08.031 CST [35762] STATEMENT:  insert into student values(7,&#x27;sun&#x27;);<br>ERROR:  cannot execute INSERT in a read-only transaction<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看此时的状态</span><br>[root@test ~]#pg_controldata<br>pg_control version number:            1300<br>Catalog version number:               202107181<br>Database system identifier:           7160103462514775493<br>Database cluster state:               in archive recovery     #此时状态不是production<br><br>test1=# select pg_wal_replay_resume();       #执行此命令可恢复到写状态<br>test1=# insert into student values(7,&#x27;sun&#x27;);  #可以添加数据了<br>INSERT 0 1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看此时的状态</span><br>[root@test ~]#pg_controldata<br>pg_control version number:            1300<br>Catalog version number:               202107181<br>Database system identifier:           7160103462514775493<br>Database cluster state:               in production<br></code></pre></td></tr></table></figure><h3 id="四、规划高可用的LAMP，要求wordpress网站放在NFS共享存储上，并且用户可以正常发布博客，上传图片。尝试更新wordpress版本，测试网站仍可用"><a href="#四、规划高可用的LAMP，要求wordpress网站放在NFS共享存储上，并且用户可以正常发布博客，上传图片。尝试更新wordpress版本，测试网站仍可用" class="headerlink" title="四、规划高可用的LAMP，要求wordpress网站放在NFS共享存储上，并且用户可以正常发布博客，上传图片。尝试更新wordpress版本，测试网站仍可用"></a>四、规划高可用的LAMP，要求wordpress网站放在NFS共享存储上，并且用户可以正常发布博客，上传图片。尝试更新wordpress版本，测试网站仍可用</h3><h4 id="4-1、环境准备"><a href="#4-1、环境准备" class="headerlink" title="4.1、环境准备"></a>4.1、环境准备</h4><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs dns">共设<span class="hljs-number">6</span>台主机<br>两台是web服务器，分别是：<br>LAP1              <span class="hljs-number">10.0.0.184</span><br>LAP2              <span class="hljs-number">10.0.0.185</span><br>一台是数据库服务器<br>mysql            <span class="hljs-number">10.0.0.186</span><br>两台是NFS服务器，分别是<br>NFS1（主服务器）    <span class="hljs-number">10.0.0.216</span><br>NFS2（备份服务器）  <span class="hljs-number">10.0.0.217</span><br>一台是DNS服务器<br>DNS               <span class="hljs-number">10.0.0.218</span><br></code></pre></td></tr></table></figure><h4 id="4-2、服务器配置"><a href="#4-2、服务器配置" class="headerlink" title="4.2、服务器配置"></a>4.2、服务器配置</h4><h5 id="4-2-1、web服务器配置"><a href="#4-2-1、web服务器配置" class="headerlink" title="4.2.1、web服务器配置"></a>4.2.1、web服务器配置</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs sh">安装LAP，需先安装以下包<br>[root@LAP1 ~]<span class="hljs-comment">#yum -y install httpd php php-mysqlnd php-json</span><br>[root@LAP1 ~]<span class="hljs-comment">#systemctl enable --now httpd       #设置开机启动，并立即启动</span><br><br><span class="hljs-comment">#下载wordpress软件，官网https://cn.wordpress.org/download/</span><br>[root@LAP1 ~]<span class="hljs-comment">#wget https://cn.wordpress.org/latest-zh_CN.tar.gz</span><br>[root@LAP1 ~]<span class="hljs-comment">#ls                  #查看已下载完成</span><br>anaconda-ks.cfg  latest-zh_CN.tar.gz<br>[root@LAP1 ~]<span class="hljs-comment">#tar xf latest-zh_CN.tar.gz     #解压到当前文件夹</span><br>[root@LAP1 ~]<span class="hljs-comment">#ls                             #解压后是wordpress文件</span><br>anaconda-ks.cfg  latest-zh_CN.tar.gz  wordpress<br>[root@LAP1 ~]<span class="hljs-comment">#mv wordpress/* /var/www/html   </span><br>[root@LAP1 ~]<span class="hljs-comment">#chown apache.apache /var/www/html -R    #将html文件的权限授予apache</span><br><br>[root@LAP2 ~]<span class="hljs-comment">#yum -y install httpd php php-mysqlnd php-json</span><br>[root@LAP2 ~]<span class="hljs-comment">#systemctl enable --now httpd</span><br>[root@LAP2 ~]<span class="hljs-comment">#wget https://cn.wordpress.org/latest-zh_CN.tar.gz</span><br>[root@LAP2 ~]<span class="hljs-comment">#tar xf latest-zh_CN.tar.gz</span><br>[root@LAP2 ~]<span class="hljs-comment">#ls</span><br>anaconda-ks.cfg  latest-zh_CN.tar.gz  wordpress<br>[root@LAP2 ~]<span class="hljs-comment">#mv wordpress/* /var/www/html</span><br>[root@LAP2 ~]<span class="hljs-comment">#chown apache.apache /var/www/html -R</span><br><br><span class="hljs-comment">#NFS服务器配置完成后，wep服务器需进行以下操作</span><br>[root@LAP1 html]<span class="hljs-comment">#yum -y install nfs-utils</span><br>[root@LAP1 html]<span class="hljs-comment">#showmount -e 10.0.0.216      #查看是否可以看到10.0.0.216的共享</span><br>Export list <span class="hljs-keyword">for</span> 10.0.0.216:<br>/data/www *<br>[root@LAP1 ~]<span class="hljs-comment">#cd /var/www/html/wp-content</span><br>[root@LAP1 wp-content]<span class="hljs-comment">#mkdir uploads         #创建文件夹</span><br>[root@LAP1 wp-content]<span class="hljs-comment">#chown apache.apache uploads  #更改所属用户和组</span><br>[root@LAP1 html]<span class="hljs-comment">#vim /etc/fstab              #永久挂载</span><br>10.0.0.216:/data/www    /var/www/html/wp-content/uploads   nfs   _netdev  0 0<br><span class="hljs-comment">#挂载文件                  挂载目录                          协议  没有网络不挂载</span><br>:wq<br>[root@LAP1 wp-content]<span class="hljs-comment">#mount -a      #将/etc/fstab的所有内容重新加载</span><br><br>[root@LAP2 html]<span class="hljs-comment">#yum -y install nfs-utils</span><br>[root@LAP2 html]<span class="hljs-comment">#showmount -e 10.0.0.216       #查看是否可以看到10.0.0.216的共享</span><br>Export list <span class="hljs-keyword">for</span> 10.0.0.216:<br>/data/www *                                    <span class="hljs-comment">#可以看到</span><br>[root@LAP2 ~]<span class="hljs-comment">#cd /var/www/html/wp-content</span><br>[root@LAP2 wp-content]<span class="hljs-comment">#mkdir uploads         #创建文件夹</span><br>[root@LAP2 wp-content]<span class="hljs-comment">#chown apache.apache uploads  #更改所属用户和组</span><br>[root@LAP2 html]<span class="hljs-comment">#vim /etc/fstab              #永久挂载</span><br>10.0.0.216:/data/www    /var/www/html/wp-content/uploads   nfs   _netdev  0 0<br>:wq<br>[root@LAP2 wp-content]<span class="hljs-comment">#mount -a      #将/etc/fstab的所有内容重新加载</span><br></code></pre></td></tr></table></figure><h5 id="4-2-2、NFS服务器配置"><a href="#4-2-2、NFS服务器配置" class="headerlink" title="4.2.2、NFS服务器配置"></a>4.2.2、NFS服务器配置</h5><h6 id="4-2-2-1、NFS1基于存储wordpress图片设置"><a href="#4-2-2-1、NFS1基于存储wordpress图片设置" class="headerlink" title="4.2.2.1、NFS1基于存储wordpress图片设置"></a>4.2.2.1、NFS1基于存储wordpress图片设置</h6><p>如果不设置NFS服务器，那wordpress里面的图片只储存在web服务器上（/var/www/html/wp-content/uploads)，如果服务器坏了，则图片会丢失（其他数据不会丢失，其他数据存储在mysql数据库里）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@nfs1 ~]#mkdir -p /data/www                      #此文件夹是存放共享图片的<br>[root@nfs1 ~]#useradd -u 666 www                      #创建id号为666的用户www，此账号用于后面的压榨账号<br>[root@nfs1 ~]#vim /etc/exports<br>/data/www  *(rw,all_squash,anonuid=666,anonuid=666)<br><span class="hljs-meta prompt_"># </span><span class="language-bash"> 共享地址    读写权限，压榨所有用户，指定压榨后映射的用户uid为666的用户</span><br>:wq<br><span class="hljs-meta prompt_">#</span><span class="language-bash">在往共享文件里存放图片，需要给权限</span><br>[root@nfs1 ~]#chown www.www /data/www       #将文件给与www用户权限<br>[root@nfs1 ~]#yum -y install nfs-utils      #安装nfs<br>[root@nfs1 ~]#systemctl enable --now nfs-server   #设置开机启动，并立即启动<br></code></pre></td></tr></table></figure><h6 id="4-2-2-2、基于主NFS服务器和备份NFS服务器进行配置"><a href="#4-2-2-2、基于主NFS服务器和备份NFS服务器进行配置" class="headerlink" title="4.2.2.2、基于主NFS服务器和备份NFS服务器进行配置"></a>4.2.2.2、基于主NFS服务器和备份NFS服务器进行配置</h6><p>rsync 常用于做为 linux系统下的数据镜像备份工具，实现远程同步，支持本地复制，或者与其他SSH、rsync主机同步数据，支持增量备份，配合任务计划，rsync能实现定时或间隔同步，配合inotify或sersync，可以实现触发式的实时数据同步</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@nfs2 ~]<span class="hljs-comment">#yum -y install rsync       #用于在备份NFS服务器上开启远程监听端口873（centos8安装rsync-daemon）</span><br>[root@nfs2 ~]<span class="hljs-comment">#systemctl enable --now  rsyncd.service</span><br>[root@nfs2 ~]<span class="hljs-comment">#ss -ntl                   #查看873端口已开启</span><br>State       Recv-Q Send-Q    Local Address:Port         Peer Address:Port           <br>LISTEN      0      128                   *:22           *:*                  <br>LISTEN      0      100           127.0.0.1:25           *:*                  <br>LISTEN      0      5                     *:873          *:*<br>[root@nfs2 ~]<span class="hljs-comment">#vim /etc/rsyncd.conf</span><br>uid = root       <span class="hljs-comment">#提定以哪个用户来访问共享目录，将之指定为生成的文件所有者，默认为nobody</span><br>gid = root       <span class="hljs-comment">#默认为nobody,Ubuntu中为nogroup</span><br>max connections = 0<br>ignore errors<br>exclude = lost+found/<br><span class="hljs-built_in">log</span> file = /var/log/rsyncd.log<br>pid file = /var/run/rsyncd.pid<br>lock file = /var/run/rsyncd.lock<br>reverse lookup = no<br><br>[backup]                  <span class="hljs-comment">#每个模块名对应一个不同的path目录，如果同名后面模块生效</span><br>path = /data/backup/      <span class="hljs-comment">#备份服务器共享的文件夹</span><br>comment = backup <span class="hljs-built_in">dir</span><br><span class="hljs-built_in">read</span> only = no           <span class="hljs-comment">#默认是yes,即只读</span><br>auth <span class="hljs-built_in">users</span> = rsyncuser   <span class="hljs-comment">#默认anonymous可以访问rsync服务器，指定访问账号rsyncuser</span><br>secrets file = /etc/rsync.pas  <span class="hljs-comment">#账号密码存放路径</span><br>:wq<br>[root@nfs2 ~]<span class="hljs-comment">#mkdir -p /data/backup    #创建共享文件夹</span><br><br><span class="hljs-comment">#此时在主NFS服务器上就可以看到备份服务器的共享文件了</span><br>[root@nfs1 ~]<span class="hljs-comment">#yum -y install rsync</span><br>[root@nfs1 ~]<span class="hljs-comment">#systemctl enable --now  rsyncd.service</span><br>[root@nfs1 ~]<span class="hljs-comment">#rsync rsync://10.0.0.217</span><br>backup         backup <span class="hljs-built_in">dir</span><br><br><span class="hljs-comment">#服务器端生成验证文件</span><br>[root@nfs2 ~]<span class="hljs-comment">#echo &quot;rsyncuser:magedu&quot; &gt; /etc/rsync.pas</span><br><span class="hljs-comment">#                         用户：密码</span><br>[root@nfs2 ~]<span class="hljs-comment">#chmod 600 /etc/rsync.pas      #指定只允许root用户读写</span><br><span class="hljs-comment">#此时主NFS服务器端想连接备份服务器，需要输入密码</span><br>[root@nfs1 ~]<span class="hljs-comment">#echo &quot;magedu&quot; &gt; /etc/rsync.pas   #直接创建个密码文件</span><br>[root@nfs1 ~]<span class="hljs-comment">#chmod 600 /etc/rsync.pas     #指定只允许root用户访问</span><br><br><br><span class="hljs-comment">#在数据服务器上下载sersync，并拷贝至相应的目录，</span><br>[root@nfs1 ~]<span class="hljs-comment">#tar xf sersync2.5.4_64bit_binary_stable_final.tar.gz  -C /opt/</span><br>    <span class="hljs-comment">#将包解压到/opt/目录下</span><br>[root@nfs1 ~]<span class="hljs-comment">#cd /opt</span><br>[root@nfs1 opt]<span class="hljs-comment">#ls</span><br>GNU-Linux-x86<br>[root@nfs1 opt]<span class="hljs-comment">#cd GNU-Linux-x86/</span><br>[root@nfs1 GNU-Linux-x86]<span class="hljs-comment">#ls</span><br>confxml.xml  sersync2              <br><span class="hljs-comment">#直接修改confxml.xml文件，后者将本地的直接拉进来</span><br>[root@nfs1 GNU-Linux-x86]<span class="hljs-comment">#mv confxml.xml&#123;,.bak&#125;</span><br>[root@nfs1 GNU-Linux-x86]<span class="hljs-comment">#ls</span><br>confxml.xml  confxml.xml.bak  sersync2<br>[root@nfs1 GNU-Linux-x86]<span class="hljs-comment">#./sersync2 -h     查看sersync2的帮助</span><br><span class="hljs-built_in">set</span> the system param<br>execute：<span class="hljs-built_in">echo</span> 50000000 &gt; /proc/sys/fs/inotify/max_user_watches<br>execute：<span class="hljs-built_in">echo</span> 327679 &gt; /proc/sys/fs/inotify/max_queued_events<br>parse the <span class="hljs-built_in">command</span> param<br>_______________________________________________________<br>参数-d:启用守护进程模式<br>参数-r:在监控前，将监控目录与远程主机用rsync命令推送一遍<br>c参数-n: 指定开启守护线程的数量，默认为10个<br>参数-o:指定配置文件，默认使用confxml.xml文件<br>参数-m:单独启用其他模块，使用 -m refreshCDN 开启刷新CDN模块<br>参数-m:单独启用其他模块，使用 -m socket 开启socket模块<br>参数-m:单独启用其他模块，使用 -m http 开启http模块<br>不加-m参数，则默认执行同步程序<br>________________________________________________________________<br>[root@nfs1 GNU-Linux-x86]<span class="hljs-comment">#./sersync2 -dro /opt/GNU-Linux-x86/confxml.xml</span><br><span class="hljs-comment">#d是后台执行   r是先同步一遍  o是指的文件路径</span><br><br><span class="hljs-comment">#为了实现开机启动此服务，可以将此命令写入/etc/rc.local，实现开机启动</span><br>[root@nfs1 ~]<span class="hljs-comment">#vim /etc/rc.local       </span><br>/opt/GNU-Linux-x86/sersync2 -dro /opt/GNU-Linux-x86/confxml.xml<br>:wq<br>[root@nfs1 ~]<span class="hljs-comment">#chmod +x /etc/rc.local</span><br></code></pre></td></tr></table></figure><h5 id="4-2-3、DNS配置"><a href="#4-2-3、DNS配置" class="headerlink" title="4.2.3、DNS配置"></a>4.2.3、DNS配置</h5><p>设置DNS，主要是为了将ip地址解析为网址</p><h6 id="4-2-3-1、DNS服务器配置"><a href="#4-2-3-1、DNS服务器配置" class="headerlink" title="4.2.3.1、DNS服务器配置"></a>4.2.3.1、DNS服务器配置</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@dns ~]<span class="hljs-comment">#yum -y install bind bind-utils      #安装DNS</span><br>[root@dns ~]<span class="hljs-comment">#vim /etc/named.conf                #修改配置文件</span><br>listen-on port 53 &#123; localhost; &#125;;               <span class="hljs-comment">#将172.0.0.1改为localhost，localhost表示本机所有IP；或者将此行用//注释掉；或者在127.0.0.1；后面添加其他允许访问的IP地址</span><br>allow-query     &#123; any; &#125;;                       <span class="hljs-comment">#将localhost改为any，localhost说的是只允许本机访问，需让其他机器也可以访问，方法有三种：①加//将此行注释，所有机器都可以访问②将localhost更改为any，所有机器都允许③在localhost;添加允许访问的IP地址</span><br>:wq<br>[root@dns ~]<span class="hljs-comment">#vim  /etc/named.rfc1912.zones      #修改配置文件，增加magedu.org</span><br>zone <span class="hljs-string">&quot;jiagoukecheng.org&quot;</span> IN &#123;<br>        <span class="hljs-built_in">type</span> master;<br>        file <span class="hljs-string">&quot;jiagoukecheng.org.zone&quot;</span>;<br>&#125;;<br>:wq<br>[root@dns named]<span class="hljs-comment">#named-checkconf            #检查配置文件是否有语法错误</span><br>[root@dns ~]<span class="hljs-comment">#cd /var/named</span><br>[root@dns named]<span class="hljs-comment">#vim jiagoukecheng.org.zone        #创建编辑magedu.org所属文件数据库</span><br><span class="hljs-variable">$TTL</span> 1D<br>@         IN      SOA      master       admin ( 0  1D 1H 1W 3H )<br>                  NS       master<br>master            A        10.0.0.218  <br>www               A        10.0.0.185<br>www               A        10.0.0.184<br>:wq<br>[root@dns named]<span class="hljs-comment">#chmod 640 jiagoukecheng.org.zone        #修改文件权限</span><br>[root@dns named]<span class="hljs-comment">#chgrp named jiagoukecheng.org.zone      #修改所属组</span><br>[root@dns named]<span class="hljs-comment">#ll</span><br>total 20<br>drwxrwx--- 2 named named    6 Oct 13  2020 data<br>drwxrwx--- 2 named named    6 Oct 13  2020 dynamic<br>-rw-r----- 1 root  named  225 Nov  5 16:02 magedu.org.zone<br>-rw-r----- 1 root  named 2253 Apr  5  2018 named.ca<br>-rw-r----- 1 root  named  152 Dec 15  2009 named.empty<br>-rw-r----- 1 root  named  152 Jun 21  2007 named.localhost<br>-rw-r----- 1 root  named  168 Dec 15  2009 named.loopback<br>drwxrwx--- 2 named named    6 Oct 13  2020 slaves<br>[root@dns named]<span class="hljs-comment">#named-checkzone jiagoukecheng.org /var/named/jiagoukecheng.org.zone  #检查是否有语法错误</span><br>zone magedu.org/IN: loaded serial 0<br>OK                                              <span class="hljs-comment">#没有错误</span><br>[root@dns named]<span class="hljs-comment">#systemctl enable --now named     #将DNS设为开机启动，并立即启动</span><br></code></pre></td></tr></table></figure><h6 id="4-2-3-2、本地DNS配置"><a href="#4-2-3-2、本地DNS配置" class="headerlink" title="4.2.3.2、本地DNS配置"></a>4.2.3.2、本地DNS配置</h6><p>将本地的DNS指向10.0.0.218</p><p><a href=""><img src="image-20221105162739622.png" alt="image-20221105162739622"></a></p><h5 id="4-2-4、mysql服务器配置"><a href="#4-2-4、mysql服务器配置" class="headerlink" title="4.2.4、mysql服务器配置"></a>4.2.4、mysql服务器配置</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@mysql ~]<span class="hljs-comment">#yum -y install mysql-server</span><br>[root@mysql ~]<span class="hljs-comment">#systemctl enable --now mysqld</span><br>[root@mysql ~]<span class="hljs-comment">#mysql</span><br>mysql&gt; create user wordpress@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> identified by <span class="hljs-string">&#x27;123456&#x27;</span>;  <span class="hljs-comment">#创建账号密码</span><br>mysql&gt; create database wordpress;              <span class="hljs-comment">#创建存放wordpress数据的数据库</span><br>mysql&gt; grant all on wordpress.* to wordpress@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span>;    <span class="hljs-comment">#授权</span><br></code></pre></td></tr></table></figure><h4 id="4-3、登录wordpress"><a href="#4-3、登录wordpress" class="headerlink" title="4.3、登录wordpress"></a>4.3、登录wordpress</h4><p>注意：网站创建完成后，登录前台网址是：<a href="http://www.jiagoukecheng.org/">www.jiagoukecheng.org</a></p><p>​                                          登录后台网址是：<a href="http://www.jiagoukecheng.org/wp-admin">www.jiagoukecheng.org/wp-admin</a></p><p>①浏览器输入网址：<a href="http://www.jiagoukecheng.org/">www.jiagoukecheng.org</a></p><p><a href=""><img src="image-20221105171422005.png" alt="image-20221105171422005"></a></p><p>②连接数据库</p><p><a href=""><img src="image-20221105171532771.png" alt="image-20221105171532771"></a></p><p>③运行安装程序，设置网站的用户名和密码</p><p><a href=""><img src="image-20221105171914241.png" alt="image-20221105171914241"></a></p><p>④登录网站</p><p><a href=""><img src="image-20221105172032598.png" alt="image-20221105172032598"></a></p><p><a href=""><img src="image-20221105172059569.png" alt="image-20221105172059569"></a></p><h4 id="4-4、编写文章，并查看"><a href="#4-4、编写文章，并查看" class="headerlink" title="4.4、编写文章，并查看"></a>4.4、编写文章，并查看</h4><p>①写文章插入图片</p><p><a href=""><img src="image-20221105183302080.png" alt="image-20221105183302080"></a></p><p>②直接网址查看</p><p><a href=""><img src="image-20221105183351587.png" alt="image-20221105183351587"></a></p><p>③web服务器查看存储位置</p><p><a href=""><img src="image-20221105183552699.png" alt="image-20221105183552699"></a></p><p>④nfs服务器查看是否存储</p><p><a href=""><img src="image-20221105183536464.png" alt="image-20221105183536464"></a></p><p>⑤查看NFS备份服务器是否共享</p><p><a href=""><img src="image-20221105205416647.png" alt="image-20221105205416647"></a></p><h3 id="五、redis数据类型有哪些"><a href="#五、redis数据类型有哪些" class="headerlink" title="五、redis数据类型有哪些"></a>五、redis数据类型有哪些</h3><p>共有5中类型：<strong>字符串string、列表list、集合set、有序集合sorted set、哈希hash</strong></p><h4 id="5-1、字符串string"><a href="#5-1、字符串string" class="headerlink" title="5.1、字符串string"></a>5.1、字符串string</h4><p>字符串是一种最基本的Redis值类型。Redis字符串是二进制安全的，这意味着一个Redis字符串能包含任意类型的数据，例如： 一张JPEG格式的图片或者一个序列化的Ruby对象。一个字符串类型的值最多能存储512M字节的内容。Redis 中所有 key 都是字符串类型的。此数据类型最为常用</p><p><a href=""><img src="image-20221107101739910.png" alt="image-20221107101739910"></a></p><p>利用INCR命令簇（INCR, DECR, INCRBY,DECRBY)来把字符串当作原子计数器使用。</p><h4 id="5-2、列表list"><a href="#5-2、列表list" class="headerlink" title="5.2、列表list"></a>5.2、列表list</h4><p>①Redis列表就是简单的字符串数组，按照插入顺序排序. 支持双向读写,可以添加一个元素到列表的头部（左边）或者尾部（右边），一个列表最多可以包含2^32-1=4294967295个元素，每个列表元素有下标来标识,下标 0 表示列表的第一个元素，以 1 表示列表的第二个元素，以此类推。 也可以使用负数下标，以 -1 表示列表的最后一个元素， -2 表示列表的倒数第二个元素，元素值可以重复，常用于存入日志等场景，此数据类型比较常用</p><p>②列表特点：<strong>有序、可重复、左右都可以操作</strong></p><p><a href=""><img src="image-20221107102111856.png" alt="image-20221107102111856"></a></p><h4 id="5-3、集合set"><a href="#5-3、集合set" class="headerlink" title="5.3、集合set"></a>5.3、集合set</h4><p>①Set 是一个无序的字符串合集，同一个集合中的每个元素是唯一无重复的，支持在两个不同的集合中对数据进行逻辑处理，常用于取交集,并集,统计等场景,例如: 实现共同的朋友</p><p>②集合特点：<strong>无序、无重复、集合间操作</strong></p><p><a href=""><img src="image-20221107102353593.png" alt="image-20221107102353593"></a></p><h4 id="5-4、有序集合sorted-set"><a href="#5-4、有序集合sorted-set" class="headerlink" title="5.4、有序集合sorted set"></a>5.4、有序集合sorted set</h4><p>①Redis有序集合和Redis集合类似，是不包含相同字符串的合集。它们的差别是，每个有序集合的成员都关联着一个双精度浮点型的评分，这个评分用于把有序集合中的成员按最低分到最高分排序。有序集合的成员不能重复,但评分可以重复,一个有序集合中最多的成员数为 2^32 - 1=4294967295个，经常用于排行榜的场景</p><p>②有序集合特点：<strong>有序、无重复元素、每个元素是由score和value组成、score 可以重复、value 不可以重复</strong></p><p><a href=""><img src="image-20221107102549480.png" alt="image-20221107102549480"></a></p><h4 id="5-5、哈希hash"><a href="#5-5、哈希hash" class="headerlink" title="5.5、哈希hash"></a>5.5、哈希hash</h4><p>①hash 即字典, 用于保存字符串字段field和字符串值value之间的映射，即key/value做为数据部分,hash特别适合用于存储对象场景。一个hash最多可以包含2^32-1 个key/value键值对</p><p>②哈希特点：<strong>无序、k/v 对、适用于存放相关的数据</strong></p><p><a href=""><img src="image-20221107102749619.png" alt="image-20221107102749619"></a></p><h3 id="六、redis-RDB和AOF比较"><a href="#六、redis-RDB和AOF比较" class="headerlink" title="六、redis RDB和AOF比较"></a>六、redis RDB和AOF比较</h3><h4 id="6-1、RDB的优缺点"><a href="#6-1、RDB的优缺点" class="headerlink" title="6.1、RDB的优缺点"></a>6.1、RDB的优缺点</h4><h5 id="6-1-1、RDB的优点"><a href="#6-1-1、RDB的优点" class="headerlink" title="6.1.1、RDB的优点"></a>6.1.1、RDB的优点</h5><p>①RDB快照只保存某个时间点的数据，恢复的时候直接加载到内存即可，不用做其他处理，这种文件适合用于做灾备处理.可以通过自定义时间点执行redis指令bgsave或者save保存快照，实现多个版本的备份。</p><p>比如: 可以在最近的24小时内，每小时备份一次RDB文件，并且在每个月的每一天，也备份一个RDB文件。这样的话，即使遇上问题，也可以随时将数据集还原到指定的不同的版本。</p><p>②RDB在大数据集时恢复的速度比AOF方式要快</p><h5 id="6-1-2、RDB的缺点"><a href="#6-1-2、RDB的缺点" class="headerlink" title="6.1.2、RDB的缺点"></a>6.1.2、RDB的缺点</h5><p>①不能实时保存数据，可能会丢失自上一次执行RDB备份到当前的内存数据</p><p>如果需要尽量避免在服务器故障时丢失数据，那么RDB并不适合。虽然Redis允许设置不同的保存点（save point）来控制保存RDB文件的频率，但是，因为RDB文件需要保存整个数据集的状态，所以它可能并不是一个非常快速的操作。因此一般会超过5分钟以上才保存一次RDB文件。在这种情况下，一旦发生故障停机，就可能会丢失较长时间的数据。</p><p>②在数据集比较庞大时，fork()子进程可能会非常耗时，造成服务器在一定时间内停止处理客户端请求,如果数据集非常巨大，并且CPU时间非常紧张的话，那么这种停止时间甚至可能会长达整整一秒或更久。另外子进程完成生成RDB文件的时间也会花更长时间</p><h4 id="6-2、AOF的优缺点"><a href="#6-2、AOF的优缺点" class="headerlink" title="6.2、AOF的优缺点"></a>6.2、AOF的优缺点</h4><h5 id="6-2-1、AOF的优点"><a href="#6-2-1、AOF的优点" class="headerlink" title="6.2.1、AOF的优点"></a>6.2.1、AOF的优点</h5><p>①数据安全性相对较高，根据所使用的fsync策略(fsync是同步内存中redis所有已经修改的文件到存储设备)，默认是appendfsync everysec，即每秒执行一次 fsync,在这种配置下，Redis 仍然可以保持良好的性能，并且就算发生故障停机，也最多只会丢失一秒钟的数据( fsync会在后台线程执行，所以主线程可以继续努力地处理命令请求)</p><p>②由于该机制对日志文件的写入操作采用的是append模式，因此在写入过程中不需要seek, 即使出现宕机现象，也不会破坏日志文件中已经存在的内容。然而如果本次操作只是写入了一半数据就出现了系统崩溃问题，不用担心，在Redis下一次启动之前，可以通过 redis-check-aof 工具来解决数据一致性的问题</p><p>③Redis可以在 AOF文件体积变得过大时，自动地在后台对AOF进行重写,重写后的新AOF文件包含了恢复当前数据集所需的最小命令集合。整个重写操作是绝对安全的，因为Redis在创建新 AOF文件的过程中，append模式不断的将修改数据追加到现有的 AOF文件里面，即使重写过程中发生停机，现有的 AOF文件也不会丢失。而一旦新AOF文件创建完毕，Redis就会从旧AOF文件切换到新AOF文件，并开始对新AOF文件进行追加操作。</p><p>④AOF包含一个格式清晰、易于理解的日志文件用于记录所有的修改操作。事实上，也可以通过该文件完成数据的重建</p><p>AOF文件有序地保存了对数据库执行的所有写入操作，这些写入操作以Redis协议的格式保存，因此 AOF文件的内容非常容易被人读懂，对文件进行分析(parse)也很轻松。导出（export)AOF文件也非常简单:举个例子，如果不小心执行了FLUSHALL.命令，但只要AOF文件未被重写，那么只要停止服务器，移除 AOF文件末尾的FLUSHAL命令，并重启Redis ,就可以将数据集恢复到FLUSHALL执行之前的状态。</p><h5 id="6-2-2、AOF的缺点"><a href="#6-2-2、AOF的缺点" class="headerlink" title="6.2.2、AOF的缺点"></a>6.2.2、AOF的缺点</h5><p>①即使有些操作是重复的也会全部记录，AOF 的文件大小一般要大于 RDB 格式的文件</p><p>②AOF 在恢复大数据集时的速度比 RDB 的恢复速度要慢</p><p>③如果 fsync 策略是appendfsync no, AOF保存到磁盘的速度甚至会可能会慢于RDB</p><p>④bug 出现的可能性更多</p><h4 id="6-3、RDB和AOF的选择"><a href="#6-3、RDB和AOF的选择" class="headerlink" title="6.3、RDB和AOF的选择"></a>6.3、RDB和AOF的选择</h4><p>①如果主要充当缓存功能,或者可以承受较长时间,比如数分钟数据的丢失, 通常生产环境一般只需启用RDB</p><p>即可,此也是默认值</p><p>②如果一点数据都不能丢失,可以选择同时开启RDB和AOF</p><p>③一般不建议只开启AOF</p><h3 id="七、redis配置文件详解"><a href="#七、redis配置文件详解" class="headerlink" title="七、redis配置文件详解"></a>七、redis配置文件详解</h3><p>resdis.conf文件内容的解释</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">bind</span> 0.0.0.0 <span class="hljs-comment">#指定监听地址，支持用空格隔开的多个监听IP</span><br><br>protected-mode <span class="hljs-built_in">yes</span> <span class="hljs-comment">#redis3.2之后加入的新特性，在没有设置bind IP和密码的时候,redis只允许访问127.0.0.1:6379，可以远程连接，但当访问将提示警告信息并拒绝远程访问</span><br><br>port 6379 <span class="hljs-comment">#监听端口,默认6379/tcp</span><br><br>tcp-backlog 511 <span class="hljs-comment">#三次握手的时候server端收到client ack确认号之后的队列值，即全连接队列长度</span><br><br><span class="hljs-built_in">timeout</span> 0 <span class="hljs-comment">#客户端和Redis服务端的连接超时时间，默认是0，表示永不超时</span><br><br>tcp-keepalive 300 <span class="hljs-comment">#tcp 会话保持时间300s</span><br><br>daemonize no <span class="hljs-comment">#默认no,即直接运行redis-server程序时,不作为守护进程运行，而是以前台方式运行，如果想在后台运行需改成yes,当redis作为守护进程运行的时候，它会写一个 pid 到/var/run/redis.pid 文件</span><br><br>supervised no <span class="hljs-comment">#和OS相关参数，可设置通过upstart和systemd管理Redis守护进程，centos7后都使用systemd</span><br><br>pidfile /var/run/redis_6379.pid <span class="hljs-comment">#pid文件路径,可以修改为/apps/redis/run/redis_6379.pid</span><br><br>loglevel notice <span class="hljs-comment">#日志级别</span><br><br>logfile <span class="hljs-string">&quot;/path/redis.log&quot;</span> <span class="hljs-comment">#日志路径,示例:logfile &quot;/apps/redis/log/redis_6379.log&quot;</span><br><br>databases 16 <span class="hljs-comment">#设置数据库数量，默认：0-15，共16个库</span><br><br>always-show-logo <span class="hljs-built_in">yes</span> <span class="hljs-comment">#在启动redis 时是否显示或在日志中记录记录redis的logo</span><br><br>save 900 1 <span class="hljs-comment">#在900秒内有1个key内容发生更改,就执行快照机制</span><br>save 300 10 <span class="hljs-comment">#在300秒内有10个key内容发生更改,就执行快照机制</span><br>save 60 10000  <span class="hljs-comment">#60秒内如果有10000个key以上的变化，就自动快照备份</span><br><br>stop-writes-on-bgsave-error <span class="hljs-built_in">yes</span> <span class="hljs-comment">#默认为yes时,可能会因空间满等原因快照无法保存出错时，会禁止redis写入操作，生产建议为no</span><br> <span class="hljs-comment">#此项只针对配置文件中的自动save有效</span><br> <br>rdbcompression <span class="hljs-built_in">yes</span> <span class="hljs-comment">#持久化到RDB文件时，是否压缩，&quot;yes&quot;为压缩，&quot;no&quot;则反之</span><br><br>rdbchecksum <span class="hljs-built_in">yes</span> <span class="hljs-comment">#是否对备份文件开启RC64校验，默认是开启</span><br><br>dbfilename dump.rdb <span class="hljs-comment">#快照文件名</span><br><br><span class="hljs-built_in">dir</span> ./ <span class="hljs-comment">#快照文件保存路径，示例：dir &quot;/apps/redis/data&quot;</span><br><br><span class="hljs-comment">#主从复制相关</span><br><span class="hljs-comment"># replicaof &lt;masterip&gt; &lt;masterport&gt; #指定复制的master主机地址和端口，5.0版之前的指令为</span><br>slaveof <br><span class="hljs-comment"># masterauth &lt;master-password&gt; #指定复制的master主机的密码</span><br><br>replica-serve-stale-data <span class="hljs-built_in">yes</span> <span class="hljs-comment">#当从库同主库失去连接或者复制正在进行，从机库有两种运行方式：</span><br>1、设置为<span class="hljs-built_in">yes</span>(默认设置)，从库会继续响应客户端的读请求，此为建议值<br>2、设置为no，除去特定命令外的任何请求都会返回一个错误<span class="hljs-string">&quot;SYNC with master in progress&quot;</span>。<br><br>replica-read-only <span class="hljs-built_in">yes</span> <span class="hljs-comment">#是否设置从库只读，建议值为yes,否则主库同步从库时可能会覆盖数据，造成数据丢失</span><br><br>repl-diskless-sync no <span class="hljs-comment">#是否使用socket方式复制数据(无盘同步)，新slave第一次连接master时需要做数据的全量同步，redis server就要从内存dump出新的RDB文件，然后从master传到slave，有两种方式把RDB文件传输给客户端：</span><br>1、基于硬盘（disk-backed）：为no时，master创建一个新进程dump生成RDB磁盘文件，RDB完成之后由<br>父进程（即主进程）将RDB文件发送给slaves，此为默认值<br>2、基于socket（diskless）：master创建一个新进程直接dump RDB至slave的网络socket，不经过主<br>进程和硬盘<br><span class="hljs-comment">#推荐使用基于硬盘（为no），是因为RDB文件创建后，可以同时传输给更多的slave，但是基于socket(为yes)， 新slave连接到master之后得逐个同步数据。只有当磁盘I/O较慢且网络较快时，可用diskless(yes),否则一般建议使用磁盘(no)</span><br><br>repl-diskless-sync-delay 5 <span class="hljs-comment">#diskless时复制的服务器等待的延迟时间，设置0为关闭，在延迟时间内到达的客户端，会一起通过diskless方式同步数据，但是一旦复制开始，master节点不会再接收新slave的复制请求，直到下一次同步开始才再接收新请求。即无法为延迟时间后到达的新副本提供服务，新副本将排队等待下一次RDB传输，因此服务器会等待一段时间才能让更多副本到达。推荐值：30-60</span><br><br>repl-ping-replica-period 10 <span class="hljs-comment">#slave根据master指定的时间进行周期性的PING master,用于监测master状态,默认10s</span><br><br>repl-timeout 60 <span class="hljs-comment">#复制连接的超时时间，需要大于repl-ping-slave-period，否则会经常报超时</span><br><br>repl-disable-tcp-nodelay no <span class="hljs-comment">#是否在slave套接字发送SYNC之后禁用 TCP_NODELAY，如果选择&quot;yes&quot;，Redis将合并多个报文为一个大的报文，从而使用更少数量的包向slaves发送数据，但是将使数据传输到slave上有延迟，Linux内核的默认配置会达到40毫秒，如果 &quot;no&quot; ，数据传输到slave的延迟将会减少，但要使用更多的带宽</span><br><br>repl-backlog-size 512mb <span class="hljs-comment">#复制缓冲区内存大小，当slave断开连接一段时间后，该缓冲区会累积复制副本数据，因此当slave 重新连接时，通常不需要完全重新同步，只需传递在副本中的断开连接后没有同步的部分数据即可。只有在至少有一个slave连接之后才分配此内存空间,建议建立主从时此值要调大一些或在低峰期配置,否则会导致同步到slave失败</span><br><br>repl-backlog-ttl 3600 <span class="hljs-comment">#多长时间内master没有slave连接，就清空backlog缓冲区</span><br><br>replica-priority 100 <span class="hljs-comment">#当master不可用，哨兵Sentinel会根据slave的优先级选举一个master，此值最低的slave会优先当选master，而配置成0，永远不会被选举，一般多个slave都设为一样的值，让其自动选择</span><br><br><span class="hljs-comment">#min-replicas-to-write 3 #至少有3个可连接的slave，mater才接受写操作</span><br><span class="hljs-comment">#min-replicas-max-lag 10 #和上面至少3个slave的ping延迟不能超过10秒，否则master也将停止写操作</span><br><br>requirepass foobared <span class="hljs-comment">#设置redis连接密码，之后需要AUTH pass,如果有特殊符号，用&quot; &quot;引起来,生产建议设置</span><br><br>rename-command <span class="hljs-comment">#重命名一些高危命令，示例：rename-command FLUSHALL &quot;&quot; 禁用命令</span><br>   <span class="hljs-comment">#示例: rename-command del magedu</span><br>   <br>maxclients 10000 <span class="hljs-comment">#Redis最大连接客户端</span><br><br>maxmemory &lt;bytes&gt; <span class="hljs-comment">#redis使用的最大内存，单位为bytes字节，0为不限制，建议设为物理内存一半，8G内存的计算方式8(G)*1024(MB)1024(KB)*1024(Kbyte)，需要注意的是缓冲区是不计算在maxmemory内,生产中如果不设置此项,可能会导致OOM</span><br><br><span class="hljs-comment">#maxmemory-policy noeviction 此为默认值</span><br><span class="hljs-comment"># MAXMEMORY POLICY：当达到最大内存时，Redis 将如何选择要删除的内容。您可以从以下行为中选择一种：</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># volatile-lru -&gt; Evict 使用近似 LRU，只有设置了过期时间的键。</span><br><span class="hljs-comment"># allkeys-lru -&gt; 使用近似 LRU 驱逐任何键。</span><br><span class="hljs-comment"># volatile-lfu -&gt; 使用近似 LFU 驱逐，只有设置了过期时间的键。</span><br><span class="hljs-comment"># allkeys-lfu -&gt; 使用近似 LFU 驱逐任何键。</span><br><span class="hljs-comment"># volatile-random -&gt; 删除设置了过期时间的随机密钥。</span><br><span class="hljs-comment"># allkeys-random -&gt; 删除一个随机密钥，任何密钥。</span><br><span class="hljs-comment"># volatile-ttl -&gt; 删除过期时间最近的key（次TTL）</span><br><span class="hljs-comment"># noeviction -&gt; 不要驱逐任何东西，只是在写操作时返回一个错误。</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># LRU 表示最近最少使用</span><br><span class="hljs-comment"># LFU 表示最不常用</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># LRU、LFU 和 volatile-ttl 都是使用近似随机算法实现的。</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 注意：使用上述任何一种策略，当没有合适的键用于驱逐时，Redis 将在需要更多内存的写操作时返回错误。这些通常是创建新密钥、添加数据或修改现有密钥的命令。一些示例是：SET、INCR、HSET、LPUSH、SUNIONSTORE、SORT（由于 STORE 参数）和 EXEC（如果事务包括任何需要内存的命令）。</span><br><br><span class="hljs-comment">#MAXMEMORY POLICY：当达到最大内存时，Redis 将如何选择要删除的内容。可以从下面行为中进行选择：</span><br><span class="hljs-comment"># volatile-lru -&gt; 在具有过期集的键中使用近似 LRU 驱逐。</span><br><span class="hljs-comment"># allkeys-lru -&gt; 使用近似 LRU 驱逐任何键。</span><br><span class="hljs-comment"># volatile-lfu -&gt; 在具有过期集的键中使用近似 LFU 驱逐。</span><br><span class="hljs-comment"># allkeys-lfu -&gt; 使用近似 LFU 驱逐任何键。</span><br><span class="hljs-comment"># volatile-random -&gt; 从具有过期设置的密钥中删除一个随机密钥。</span><br><span class="hljs-comment"># allkeys-random -&gt; 删除一个随机密钥，任何密钥。</span><br><span class="hljs-comment"># volatile-ttl -&gt; 删除过期时间最近的key（次TTL）</span><br><span class="hljs-comment"># noeviction -&gt; 不要驱逐任何东西，只是在写操作时返回一个错误。</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># LRU 表示最近最少使用</span><br><span class="hljs-comment"># LFU 表示最不常用</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># LRU、LFU 和 volatile-ttl 均使用近似实现随机算法。</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 注意：使用上述任何一种策略，Redis 都会在写入时返回错误操作，当没有合适的键用于驱逐时。</span><br><br>appendonly no <span class="hljs-comment">#是否开启AOF日志记录，默认redis使用的是rdb方式持久化，这种方式在许多应用中已经足够用了，但是redis如果中途宕机，会导致可能有几分钟的数据丢失(取决于dump数据的间隔时间)，根据save来策略进行持久化，Append Only File是另一种持久化方式，可以提供更好的持久化特性，Redis会把每次写入的数据在接收后都写入 appendonly.aof 文件，每次启动时Redis都会先把这个文件的数据读入内存里，先忽略RDB文件。默认不启用此功能</span><br><br>appendfilename <span class="hljs-string">&quot;appendonly.aof&quot;</span> <span class="hljs-comment">#文本文件AOF的文件名，存放在dir指令指定的目录中</span><br><br>appendfsync everysec <span class="hljs-comment">#aof持久化策略的配置</span><br><span class="hljs-comment">#no表示由操作系统保证数据同步到磁盘,Linux的默认fsync策略是30秒，最多会丢失30s的数据</span><br><span class="hljs-comment">#always表示每次写入都执行fsync，以保证数据同步到磁盘,安全性高,性能较差</span><br><span class="hljs-comment">#everysec表示每秒执行一次fsync，可能会导致丢失这1s数据,此为默认值,也生产建议值</span><br><br><span class="hljs-comment">#同时在执行bgrewriteaof操作和主进程写aof文件的操作，两者都会操作磁盘，而bgrewriteaof往往会涉及大量磁盘操作，这样就会造成主进程在写aof文件的时候出现阻塞的情形,以下参数实现控制</span><br>no-appendfsync-on-rewrite no <span class="hljs-comment">#在aof rewrite期间,是否对aof新记录的append暂缓使用文件同步策略,主要考虑磁盘IO开支和请求阻塞时间。</span><br><span class="hljs-comment">#默认为no,表示&quot;不暂缓&quot;,新的aof记录仍然会被立即同步到磁盘，是最安全的方式，不会丢失数据，但是要忍受阻塞的问题</span><br><span class="hljs-comment">#为yes,相当于将appendfsync设置为no，这说明并没有执行磁盘操作，只是写入了缓冲区，因此这样并不会造成阻塞（因为没有竞争磁盘），但是如果这个时候redis挂掉，就会丢失数据。丢失多少数据呢？Linux的默认fsync策略是30秒，最多会丢失30s的数据,但由于yes性能较好而且会避免出现阻塞因此比较推荐</span><br><br><span class="hljs-comment">#rewrite 即对aof文件进行整理,将空闲空间回收,从而可以减少恢复数据时间</span><br><br>auto-aof-rewrite-percentage 100 <span class="hljs-comment">#当Aof log增长超过指定百分比例时，重写AOF文件，设置为0表示不自动重写Aof日志，重写是为了使aof体积保持最小，但是还可以确保保存最完整的数据</span><br><br>auto-aof-rewrite-min-size 64mb <span class="hljs-comment">#触发aof rewrite的最小文件大小</span><br><br>aof-load-truncated <span class="hljs-built_in">yes</span> <span class="hljs-comment">#是否加载由于某些原因导致的末尾异常的AOF文件(主进程被kill/断电等)，建议yes</span><br><br>aof-use-rdb-preamble no <span class="hljs-comment">#redis4.0新增RDB-AOF混合持久化格式，在开启了这个功能之后，AOF重写产生的文件将同时包含RDB格式的内容和AOF格式的内容，其中RDB格式的内容用于记录已有的数据，而AOF格式的内容则用于记录最近发生了变化的数据，这样Redis就可以同时兼有RDB持久化和AOF持久化的优点（既能够快速地生成重写文件，也能够在出现问题时，快速地载入数据）,默认为no,即不启用此功能</span><br><br>lua-time-limit 5000 <span class="hljs-comment">#lua脚本的最大执行时间，单位为毫秒</span><br><br>cluster-enabled <span class="hljs-built_in">yes</span> <span class="hljs-comment">#是否开启集群模式，默认不开启,即单机模式</span><br><br>cluster-config-file nodes-6379.conf <span class="hljs-comment">#由node节点自动生成的集群配置文件名称</span><br><br>cluster-node-timeout 15000 <span class="hljs-comment">#集群中node节点连接超时时间，单位ms,超过此时间，会踢出集群</span><br><br>cluster-replica-validity-factor 10 <span class="hljs-comment">#单位为次,在执行故障转移的时候可能有些节点和master断开一段时间导致数据比较旧，这些节点就不适用于选举为master，超过这个时间的就不会被进行故障转移,不能当选master，计算公式：(node-timeout * replica-validity-factor) + repl-pingreplica-period</span><br><br>cluster-migration-barrier 1 <span class="hljs-comment">#集群迁移屏障，一个主节点至少拥有1个正常工作的从节点，即如果主节点的slave节点故障后会将多余的从节点分配到当前主节点成为其新的从节点。</span><br><br>cluster-require-full-coverage <span class="hljs-built_in">yes</span> <span class="hljs-comment">#集群请求槽位全部覆盖，如果一个主库宕机且没有备库就会出现集群槽位不全，那么yes时redis集群槽位验证不全,就不再对外提供服务(对key赋值时,会出现CLUSTERDOWN The cluster is down的提示,cluster_state:fail,但ping 仍PONG)，而no则可以继续使用,但是会出现查询数据查不到的情况(因为有数据丢失)。生产建议为no</span><br><br>cluster-replica-no-failover no <span class="hljs-comment">#如果为yes,此选项阻止在主服务器发生故障时尝试对其主服务器进行故障转移。 但是，主服务器仍然可以执行手动强制故障转移，一般为no</span><br><br><span class="hljs-comment">#Slow log 是 Redis 用来记录超过指定执行时间的日志系统，执行时间不包括与客户端交谈，发送回复等I/O操作，而是实际执行命令所需的时间（在该阶段线程被阻塞并且不能同时为其它请求提供服务）,由于slow log 保存在内存里面，读写速度非常快，因此可放心地使用，不必担心因为开启 slow log 而影响Redis 的速度</span><br><br>slowlog-log-slower-than 10000 <span class="hljs-comment">#以微秒为单位的慢日志记录，为负数会禁用慢日志，为0会记录每个命令操作。默认值为10ms,一般一条命令执行都在微秒级,生产建议设为1ms-10ms之间</span><br><br>slowlog-max-len 128 <span class="hljs-comment">#最多记录多少条慢日志的保存队列长度，达到此长度后，记录新命令会将最旧的命令从命令队列中删除，以此滚动删除,即,先进先出,队列固定长度,默认128,值偏小,生产建议设为1000以上</span><br></code></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第六周作业</title>
    <link href="/2022/10/22/%E7%AC%AC%E5%85%AD%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/10/22/%E7%AC%AC%E5%85%AD%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>[TOC]</p><h3 id="一、简述DDL-DML-DCL-DQL，并且说明mysql各个关键字查询时候的先后顺序"><a href="#一、简述DDL-DML-DCL-DQL，并且说明mysql各个关键字查询时候的先后顺序" class="headerlink" title="一、简述DDL,DML,DCL,DQL，并且说明mysql各个关键字查询时候的先后顺序"></a>一、简述DDL,DML,DCL,DQL，并且说明mysql各个关键字查询时候的先后顺序</h3><p>1、DDL：（数据定义语言）是指CREATE，ALTER，DROP语句</p><p>DDL允许添加、修改、删除包含数据的逻辑结构，或允许用户访问、维护数据（数据库、表、键、视图等）的逻辑结构。DDL是关于元数据的。</p><p>2、DML: （数据操纵语言）是指INSERT，DELETE，UPDATE语句</p><p>DML允许自己添加、删除、修改数据</p><p>3、DQL：（数据查询语言）是指SELECT，SHOW，HELP语句</p><p>SELECT是主要的DQL指令，它会检索需要的数据；SHOW检索有关元数据的信息；HELP是帮助查询命令的作用和用法</p><p>4、DCL：（数据控制语言）是指GRANT，REVOKE语句</p><p>DCL用于授予、撤销对数据库及其内容的权限。MySQL的权限相当复杂，DCL是关于安全性的。</p><p>SELECT查询语句执行的先后顺序：</p><figure class="highlight sas"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs sas"><span class="hljs-keyword">FROM</span> Clause --&gt; <span class="hljs-keyword">WHERE</span> Clause --&gt; <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> --&gt; <span class="hljs-keyword">HAVING</span> Clause --&gt;<span class="hljs-keyword">SELECT</span> --&gt; <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> --&gt; LIMIT<br></code></pre></td></tr></table></figure><h3 id="二、自行设计10个sql查询语句，需要用到关键字-GROUP-BY-HAVING-ORDER-BY-LIMIT-，至少同时用到两个"><a href="#二、自行设计10个sql查询语句，需要用到关键字-GROUP-BY-HAVING-ORDER-BY-LIMIT-，至少同时用到两个" class="headerlink" title="二、自行设计10个sql查询语句，需要用到关键字[GROUP BY/HAVING/ORDER BY/LIMIT]，至少同时用到两个"></a>二、自行设计10个sql查询语句，需要用到关键字[GROUP BY/HAVING/ORDER BY/LIMIT]，至少同时用到两个</h3><p>为了方便后续实验，导入一个数据库</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">[root<span class="hljs-meta">@Rocky</span> ~]<span class="hljs-comment">#mysql &lt; hellodb_innodb.sql</span><br>[root<span class="hljs-meta">@Rocky</span> ~]<span class="hljs-comment">#mysql</span><br>mysql&gt; show databases;<br>+--------------------+<br>|<span class="hljs-string"> Database           </span>|<br>+--------------------+<br>|<span class="hljs-string"> hellodb            </span>|<br>|<span class="hljs-string"> information_schema </span>|<br>|<span class="hljs-string"> mysql              </span>|<br>|<span class="hljs-string"> performance_schema </span>|<br>|<span class="hljs-string"> sys                </span>|<br>|<span class="hljs-string"> zabbix             </span>|<br>+--------------------+                           <span class="hljs-comment">#可以看见有hellodb数据库</span><br>mysql&gt; use hellodb                               <span class="hljs-comment">#进入hellodb数据库</span><br></code></pre></td></tr></table></figure><p>①将teachers表按年龄从小到大排序，取前两个（order by：以某条件进行排序，默认为正序排序）</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; select * from teachers order by age limit 2;</span><br><span class="hljs-section">+-----+---------------+-----+--------+</span><br><span class="hljs-section">| TID | Name          | Age | Gender |</span><br><span class="hljs-section">+-----+---------------+-----+--------+</span><br>|   1 | Song Jiang    |  45 | M      |<br><span class="hljs-section">|   3 | Miejue Shitai |  77 | F      |</span><br><span class="hljs-section">+-----+---------------+-----+--------+</span><br>2 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p>②将teachers表按年龄从小到大排序，取第2个和第3个（limit 2：取前2个；limit 1，2：取第一个后面的两个）</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; select * from teachers order by age limit 1,2;</span><br><span class="hljs-section">+-----+---------------+-----+--------+</span><br><span class="hljs-section">| TID | Name          | Age | Gender |</span><br><span class="hljs-section">+-----+---------------+-----+--------+</span><br>|   3 | Miejue Shitai |  77 | F      |<br><span class="hljs-section">|   4 | Lin Chaoying  |  93 | F      |</span><br><span class="hljs-section">+-----+---------------+-----+--------+</span><br>2 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p>③将teachers表按年龄从大到小排序，取前两个（ order by后添加desc，表示倒序排序 ）</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; select * from teachers order by age desc limit 2;</span><br><span class="hljs-section">+-----+---------------+-----+--------+</span><br><span class="hljs-section">| TID | Name          | Age | Gender |</span><br><span class="hljs-section">+-----+---------------+-----+--------+</span><br>|   2 | Zhang Sanfeng |  94 | M      |<br><span class="hljs-section">|   4 | Lin Chaoying  |  93 | F      |</span><br><span class="hljs-section">+-----+---------------+-----+--------+</span><br>2 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p>④学生表中以班级为组，求出每个班级有几个，并按正序排序（group by：以某条件进行筛选，然后进行聚合运算；count（*）：每个班级有几个）</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; select classid,count(*)数量 from students group by classid order by 数量;</span><br><span class="hljs-section">+---------+--------+</span><br><span class="hljs-section">| classid | 数量   |</span><br><span class="hljs-section">+---------+--------+</span><br>|       5 |      1 |<br>|    NULL |      2 |<br>|       2 |      3 |<br>|       7 |      3 |<br>|       1 |      4 |<br>|       4 |      4 |<br>|       3 |      4 |<br><span class="hljs-section">|       6 |      4 |</span><br><span class="hljs-section">+---------+--------+</span><br>8 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p>⑤学生表中以班级为组，求出每个班级有几个，并按正序排序，取前3个</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; select classid,count(*)数量 from students group by classid order by 数量 limit 3; </span><br><span class="hljs-section">+---------+--------+</span><br><span class="hljs-section">| classid | 数量   |</span><br><span class="hljs-section">+---------+--------+</span><br>|       5 |      1 |<br>|    NULL |      2 |<br><span class="hljs-section">|       2 |      3 |</span><br><span class="hljs-section">+---------+--------+</span><br>3 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p>⑥学生表中以班级为组，求出每个班级有几个，并取前3个</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; select classid,count(*)数量 from students group by classid limit 3; </span><br><span class="hljs-section">+---------+--------+</span><br><span class="hljs-section">| classid | 数量   |</span><br><span class="hljs-section">+---------+--------+</span><br>|       2 |      3 |<br>|       1 |      4 |<br><span class="hljs-section">|       4 |      4 |</span><br><span class="hljs-section">+---------+--------+</span><br>3 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p>⑦将学生表中男生划分成一组，取男生的平均年龄（avg():平均值；having：对分组聚合运算后的结果指定过滤条件）</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; select gender,avg(age)平均年龄 from students group by gender having gender=&#x27;M&#x27;;</span><br><span class="hljs-section">+--------+--------------+</span><br><span class="hljs-section">| gender | 平均年龄     |</span><br><span class="hljs-section">+--------+--------------+</span><br><span class="hljs-section">| M      |      33.0000 |</span><br><span class="hljs-section">+--------+--------------+</span><br>1 row in set (0.00 sec)<br></code></pre></td></tr></table></figure><p>⑧按不同班级进行分组，求每个班级的平均年龄，并取出平均年龄大于30的数据</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; select classid,avg(age)平均年龄 from students group by classid having 平均年龄 &gt;30;</span><br><span class="hljs-section">+---------+--------------+</span><br><span class="hljs-section">| classid | 平均年龄     |</span><br><span class="hljs-section">+---------+--------------+</span><br>|       2 |      36.0000 |<br>|       5 |      46.0000 |<br><span class="hljs-section">|    NULL |      63.5000 |</span><br><span class="hljs-section">+---------+--------------+</span><br>3 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p>⑨按不同班级进行分组，求每个班级的平均年龄，并取出平均年龄大于30的前2条数据</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; select classid,avg(age)平均年龄 from students group by classid having 平均年龄 &gt;30 limit 2;</span><br><span class="hljs-section">+---------+--------------+</span><br><span class="hljs-section">| classid | 平均年龄     |</span><br><span class="hljs-section">+---------+--------------+</span><br>|       2 |      36.0000 |<br><span class="hljs-section">|       5 |      46.0000 |</span><br><span class="hljs-section">+---------+--------------+</span><br>2 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><p>⑩按不同班级进行分组，求每个班级的平均年龄，并取出平均年龄大于30的数据，按照倒序排序</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">mysql&gt; select classid,avg(age)平均年龄 from students group by classid having 平均年龄 &gt;30 order by 平均年龄 desc;</span><br><span class="hljs-section">+---------+--------------+</span><br><span class="hljs-section">| classid | 平均年龄     |</span><br><span class="hljs-section">+---------+--------------+</span><br>|    NULL |      63.5000 |<br>|       5 |      46.0000 |<br><span class="hljs-section">|       2 |      36.0000 |</span><br><span class="hljs-section">+---------+--------------+</span><br>3 rows in set (0.00 sec)<br></code></pre></td></tr></table></figure><h3 id="三、xtrabackup备份和还原数据库练习"><a href="#三、xtrabackup备份和还原数据库练习" class="headerlink" title="三、xtrabackup备份和还原数据库练习"></a>三、xtrabackup备份和还原数据库练习</h3><p>在centos7及以前的版本中，EPEL源中带有percona-xtrabackup包，可以直接yum进行安装。</p><p>在centos8中没有percona-xtrabackup包，需要先在官网上下载percona-xtrabackup包</p><p>下载地址：<a href="https://www.percona.com/downloads/Percona-XtraBackup-LATEST/">https://www.percona.com/downloads/Percona-XtraBackup-LATEST/</a></p><p><a href=""><img src="image-20221022161404700.png" alt="image-20221022161404700"></a></p><p>只需下载percona-xtrabackup-80-8.0.29-22.1.el8.x86_64.rpm这个包即可，并将包导入到Linux中</p><p><strong>实验：利用xtrabackup8.0完全，增量备份及还原MySQL8.0</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-number">1</span>、备份过程<br><span class="hljs-meta">#第一步：完全备份</span><br>[<span class="hljs-meta">root@Rocky ~</span>]<span class="hljs-meta">#yum -y install percona-xtrabackup-80-8.0.29-22.1.el8.x86_64.rpm</span><br>                                  <span class="hljs-meta">#在原主机安装xtrabackup包</span><br>[<span class="hljs-meta">root@Rocky ~</span>]<span class="hljs-meta">#mkdir /backup      #在原主机上新建backup目录，用来存放备份的数据</span><br>[<span class="hljs-meta">root@Rocky ~</span>]<span class="hljs-meta">#xtrabackup -uroot --backup --target-dir=/backup/base</span><br><span class="hljs-number">2022</span><span class="hljs-number">-10</span><span class="hljs-number">-22</span>T16:<span class="hljs-number">36</span>:<span class="hljs-number">43.440670</span>+<span class="hljs-number">08</span>:<span class="hljs-number">00</span> <span class="hljs-number">0</span> [Note] [MY<span class="hljs-number">-011825</span>] [Xtrabackup] completed OK!                                       <span class="hljs-meta">#将数据备份到/backup/base，其中base目录会自动创建</span><br><br><span class="hljs-meta">#第二步：第一次修改数据</span><br>mysql&gt; <span class="hljs-function">insert <span class="hljs-title">teachers</span> (<span class="hljs-params">name,age,gender</span>) <span class="hljs-title">value</span>(<span class="hljs-params"><span class="hljs-string">&#x27;liu&#x27;</span>,<span class="hljs-number">40</span>,<span class="hljs-string">&#x27;M&#x27;</span></span>)</span>;<br><br><span class="hljs-meta">#第三步：第一次增量备份</span><br>[<span class="hljs-meta">root@Rocky ~</span>]<span class="hljs-meta">#xtrabackup -uroot --backup --target-dir=/backup/inc1 --incremental-basedir=/backup/base</span><br><span class="hljs-number">2022</span><span class="hljs-number">-10</span><span class="hljs-number">-22</span>T17:<span class="hljs-number">03</span>:<span class="hljs-number">23.595901</span>+<span class="hljs-number">08</span>:<span class="hljs-number">00</span> <span class="hljs-number">0</span> [Note] [MY<span class="hljs-number">-011825</span>] [Xtrabackup] completed OK!<br>                    <span class="hljs-meta">#将数据备份到/backup/inc1，基于/backup/base完全备份进行的增量备份</span><br><br><span class="hljs-meta">#第四步：第二次修改数据</span><br>mysql&gt; <span class="hljs-function">insert <span class="hljs-title">teachers</span> (<span class="hljs-params">name,age,gender</span>) <span class="hljs-title">value</span>(<span class="hljs-params"><span class="hljs-string">&#x27;xiaoyun&#x27;</span>,<span class="hljs-number">42</span>,<span class="hljs-string">&#x27;F&#x27;</span></span>)</span>;<br><br><span class="hljs-meta">#第五步：第二次增量备份</span><br>[<span class="hljs-meta">root@Rocky ~</span>]<span class="hljs-meta">#xtrabackup -uroot --backup --target-dir=/backup/inc2 --incremental-basedir=/backup/inc1</span><br><span class="hljs-number">2022</span><span class="hljs-number">-10</span><span class="hljs-number">-22</span>T17:<span class="hljs-number">10</span>:<span class="hljs-number">36.646597</span>+<span class="hljs-number">08</span>:<span class="hljs-number">00</span> <span class="hljs-number">0</span> [Note] [MY<span class="hljs-number">-011825</span>] [Xtrabackup] completed OK!<br>                   <span class="hljs-meta">#将数据备份到/backup/inc2，基于/backup/inc1备份进行的增量备份</span><br><br><span class="hljs-meta">#第六步：将数据复制到目标主机（目标主机不用创建backup目录，直接复制目录本身）</span><br>[<span class="hljs-meta">root@Rocky backup</span>]<span class="hljs-meta">#scp -r /backup/  10.0.0.128:/</span><br><br><span class="hljs-number">2</span>、还原过程<br><span class="hljs-meta">#第一步：预准备完成备份，此选项--apply-log-only 阻止回滚未完成的事务</span><br>[<span class="hljs-meta">root@Rocky8 ~</span>]<span class="hljs-meta">#yum -y install percona-xtrabackup-80-8.0.29-22.1.el8.x86_64.rpm             #在目标主机安装xtrabackup包</span><br>[<span class="hljs-meta">root@Rocky8 ~</span>]<span class="hljs-meta">#xtrabackup --prepare --apply-log-only --target-dir=/backup/base</span><br><span class="hljs-number">2022</span><span class="hljs-number">-10</span><span class="hljs-number">-22</span>T17:<span class="hljs-number">24</span>:<span class="hljs-number">54.399051</span>+<span class="hljs-number">08</span>:<span class="hljs-number">00</span> <span class="hljs-number">0</span> [Note] [MY<span class="hljs-number">-011825</span>] [Xtrabackup] completed OK!<br><br><span class="hljs-meta">#第二步：合并第一次增量备份到完全备份</span><br>[<span class="hljs-meta">root@Rocky8 ~</span>]<span class="hljs-meta">#xtrabackup --prepare --apply-log-only --target-dir=/backup/base --incremental-dir=/backup/inc1</span><br><span class="hljs-number">2022</span><span class="hljs-number">-10</span><span class="hljs-number">-22</span>T17:<span class="hljs-number">28</span>:<span class="hljs-number">03.937839</span>+<span class="hljs-number">08</span>:<span class="hljs-number">00</span> <span class="hljs-number">0</span> [Note] [MY<span class="hljs-number">-011825</span>] [Xtrabackup] completed OK!<br><br><span class="hljs-meta">#第三步：合并第二次增量备份到完全备份，最后一次还原不需要加选项--apply-log-only</span><br>[<span class="hljs-meta">root@Rocky8 ~</span>]<span class="hljs-meta">#xtrabackup --prepare --target-dir=/backup/base --incremental-dir=/backup/inc2</span><br><span class="hljs-number">2022</span><span class="hljs-number">-10</span><span class="hljs-number">-22</span>T17:<span class="hljs-number">30</span>:<span class="hljs-number">03.748682</span>+<span class="hljs-number">08</span>:<span class="hljs-number">00</span> <span class="hljs-number">0</span> [Note] [MY<span class="hljs-number">-011825</span>] [Xtrabackup] completed OK!<br><br><span class="hljs-meta">#第四步：复制到数据库目录（数据库目录必须为空，且mysql服务不能启动）</span><br>[<span class="hljs-meta">root@Rocky8 ~</span>]<span class="hljs-meta">#systemctl status mysqld</span><br>Active: inactive (dead) since Sat <span class="hljs-number">2022</span><span class="hljs-number">-10</span><span class="hljs-number">-22</span> <span class="hljs-number">16</span>:<span class="hljs-number">53</span>:<span class="hljs-number">19</span> CST; <span class="hljs-number">38</span>min ago<br>                                    <span class="hljs-meta">#查看可确认服务已关闭</span><br>[<span class="hljs-meta">root@Rocky8 ~</span>]<span class="hljs-meta">#ls /var/lib/mysql/    #查看确认为空</span><br>[<span class="hljs-meta">root@Rocky8 ~</span>]<span class="hljs-meta">#xtrabackup --copy-back --target-dir=/backup/base</span><br><span class="hljs-number">2022</span><span class="hljs-number">-10</span><span class="hljs-number">-22</span>T17:<span class="hljs-number">34</span>:<span class="hljs-number">33.338805</span>+<span class="hljs-number">08</span>:<span class="hljs-number">00</span> <span class="hljs-number">0</span> [Note] [MY<span class="hljs-number">-011825</span>] [Xtrabackup] completed OK!<br><br><span class="hljs-meta">#第五步：还原属性</span><br>[<span class="hljs-meta">root@Rocky8 ~</span>]<span class="hljs-meta">#chown -R mysql.mysql /var/lib/mysql   #将用户和组都更改为mysql</span><br><br><span class="hljs-meta">#第六步：启动服务</span><br>[<span class="hljs-meta">root@Rocky8 ~</span>]<span class="hljs-meta">#systemctl start mysqld</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221022174336407.png" alt="image-20221022174336407"></a></p><p>查看目标主机发现有hellodb数据库，且有增量备份的内容</p><h3 id="四、实现mysql主从复制，主主复制和半同步复制"><a href="#四、实现mysql主从复制，主主复制和半同步复制" class="headerlink" title="四、实现mysql主从复制，主主复制和半同步复制"></a>四、实现mysql主从复制，主主复制和半同步复制</h3><h4 id="1、主从复制"><a href="#1、主从复制" class="headerlink" title="1、主从复制"></a><strong>1、主从复制</strong></h4><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">主节点配置：<br>[root<span class="hljs-meta">@master</span> ~]<span class="hljs-comment">#vim /etc/my.cnf                  #添加mysql服务器设置</span><br>[mysqld]                                           <br>server-id=184                                   <span class="hljs-comment">#设置不同的id号便于主从复制，id号无要求</span><br>log-bin=/data/logbin/mysql-bin                  <span class="hljs-comment">#设置二进制存放位置</span><br>：wq<br>[root<span class="hljs-meta">@master</span> ~]<span class="hljs-comment">#mkdir -p /data/logbin           #创建二进制存放的目录，mysql-bin是自动生成的</span><br>[root<span class="hljs-meta">@master</span> ~]<span class="hljs-comment">#chown mysql.mysql /data/logbin  #更改用户和所属组</span><br>[root<span class="hljs-meta">@master</span> ~]<span class="hljs-comment">#systemctl restart mysqld        #重新启动服务</span><br>[root<span class="hljs-meta">@master</span> ~]<span class="hljs-comment">#ls /data/logbin                 #可以看到二进制已存放到新位置</span><br>mysql-bin.000001  mysql-bin.index<br>[root<span class="hljs-meta">@master</span> ~]<span class="hljs-comment">#mysql</span><br>mysql&gt; create user repluser<span class="hljs-meta">@&quot;10.0.0.%&quot;</span> identified by <span class="hljs-string">&quot;123456&quot;</span>; <span class="hljs-comment">#创建账号</span><br>mysql&gt; grant replication slave on <span class="hljs-symbol">*</span>.<span class="hljs-symbol">*</span> to repluser<span class="hljs-meta">@&#x27;10.0.0.%&#x27;;</span>  <span class="hljs-comment">#将所有数据库的replication slave权限授予账号</span><br>[root<span class="hljs-meta">@master</span> ~]<span class="hljs-comment">#mkdir /backup                  #创建备份数据的目录</span><br>[root<span class="hljs-meta">@master</span> ~]<span class="hljs-comment">#mysqldump -A -F --single-transaction --master-data &gt;/backup/full-`date +%F`.sql             #备份数据，full-`date +%F`.sql自动生成</span><br>[root<span class="hljs-meta">@master</span> ~]<span class="hljs-comment">#ls /backup                     #查看已生成</span><br>full-2022-10-24.sql<br><span class="hljs-comment">#此时主节点设置完成，但从节点还没设置，所以主节点还没有dump线程</span><br>mysql&gt; show processlist;<br>+----+---------------+---------+------+-------+------+------------------+----------+<br>|<span class="hljs-string"> Id </span>|<span class="hljs-string"> User          </span>|<span class="hljs-string"> Host    </span>|<span class="hljs-string"> db   </span>|<span class="hljs-string">Command</span>|<span class="hljs-string"> Time </span>|<span class="hljs-string"> State            </span>|<span class="hljs-string"> Info     </span>|<br>+----+---------------+---------+------+-------+------+------------+----------------+<br>|<span class="hljs-string">  5 </span>|<span class="hljs-string">event_scheduler</span>|<span class="hljs-string">localhost</span>|<span class="hljs-string"> NULL </span>|<span class="hljs-string"> Daemon</span>|<span class="hljs-string"> 1451 </span>|<span class="hljs-string">Waiting on empty queue</span>|<span class="hljs-string"> NULL </span>|<br>|<span class="hljs-string">  8 </span>|<span class="hljs-string"> root          </span>|<span class="hljs-string">localhost</span>|<span class="hljs-string"> NULL </span>|<span class="hljs-string"> Query </span>|<span class="hljs-string">    0 </span>|<span class="hljs-string">  init      </span>|<span class="hljs-string">show processlist</span>|<br>+----+--------------+----------+------+-------+------+------------+----------------+<br><br><br><br>从节点配置：<br>[root<span class="hljs-meta">@slave1</span> ~]<span class="hljs-comment">#vim /etc/my.cnf                #添加mysql服务器设置</span><br>[mysqld]<br>server-id=185<br>read-only                                     <span class="hljs-comment">#设置数据库只读，针对supper user无效</span><br>：wq<br>[root<span class="hljs-meta">@slave1</span> ~]<span class="hljs-comment">#systemctl restart mysqld    </span><br>[root<span class="hljs-meta">@slave1</span> ~]<span class="hljs-comment">#mkdir /backup</span><br><br>[root<span class="hljs-meta">@master</span> ~]<span class="hljs-comment">#scp /backup/full-2022-10-24.sql  10.0.0.185:/backup                                                         #将备份的数据复制到从服务器上</span><br>[root<span class="hljs-meta">@slave1</span> ~]<span class="hljs-comment">#ls /backup                          #查看已复制完成</span><br>fullbackup_2022-10-24.sql<br>[root<span class="hljs-meta">@slave1</span> ~]<span class="hljs-comment">#vim /backup/full-2022-10-24.sql</span><br>CHANGE MASTER TO                                  <span class="hljs-comment">#在此行后添加下面4行</span><br>  MASTER_HOST=&#x27;10.0.0.184&#x27;,<br>  MASTER_USER=&#x27;repluser&#x27;,<br>  MASTER_PASSWORD=&#x27;123456&#x27;,<br>  MASTER_PORT=3306,<br>：wq<br>[root<span class="hljs-meta">@slave1</span> ~]<span class="hljs-comment">#mysql</span><br>mysql&gt; set sql_log_bin=0;                       <span class="hljs-comment">#临时关闭二进制，防止复制数据时产生大量记录</span><br>mysql&gt; source /backup/fullbackup_2022-10-24.sql <span class="hljs-comment">#将数据导入从服务器</span><br>mysql&gt; set sql_log_bin=1;                       <span class="hljs-comment">#开启二进制</span><br>mysql&gt; show databases;                          <span class="hljs-comment">#查看确认数据已导入</span><br>+--------------------+<br>|<span class="hljs-string"> Database           </span>|<br>+--------------------+<br>|<span class="hljs-string"> hellodb            </span>|<br>|<span class="hljs-string"> information_schema </span>|<br>|<span class="hljs-string"> mysql              </span>|<br>|<span class="hljs-string"> performance_schema </span>|<br>|<span class="hljs-string"> sys                </span>|<br>|<span class="hljs-string"> zabbix             </span>|<br>+--------------------+<br><span class="hljs-comment">#此时主从服务器还没有正是连接，主服务器添加数据，不会同步到从服务器</span><br><span class="hljs-comment">#在主服务器上插入一条数据</span><br>mysql&gt; insert teachers (name,age,gender) values(&#x27;wang&#x27;,34,&#x27;M&#x27;);<br><span class="hljs-comment">#在从服务器上查看没有此数据</span><br>mysql&gt; select <span class="hljs-symbol">*</span> from teachers;<br>+-----+---------------+-----+--------+<br>|<span class="hljs-string"> TID </span>|<span class="hljs-string"> Name          </span>|<span class="hljs-string"> Age </span>|<span class="hljs-string"> Gender </span>|<br>+-----+---------------+-----+--------+<br>|<span class="hljs-string">   1 </span>|<span class="hljs-string"> Song Jiang    </span>|<span class="hljs-string">  45 </span>|<span class="hljs-string"> M      </span>|<br>|<span class="hljs-string">   2 </span>|<span class="hljs-string"> Zhang Sanfeng </span>|<span class="hljs-string">  94 </span>|<span class="hljs-string"> M      </span>|<br>|<span class="hljs-string">   3 </span>|<span class="hljs-string"> Miejue Shitai </span>|<span class="hljs-string">  77 </span>|<span class="hljs-string"> F      </span>|<br>|<span class="hljs-string">   4 </span>|<span class="hljs-string"> Lin Chaoying  </span>|<span class="hljs-string">  93 </span>|<span class="hljs-string"> F      </span>|<br>+-----+---------------+-----+--------+<br><span class="hljs-comment">#没有成功的原因是从服务器上的两个线程未开启</span><br>mysql&gt; show slave status\G<br><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span> 1. row <span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><span class="hljs-symbol">*</span><br>               Slave_IO_State: <br>                  Master_Host: 10.0.0.128<br>                  Master_User: REPLUSER<br>                  Master_Port: 3306<br>                Connect_Retry: 60<br>              Master_Log_File: mysql-bin.000005<br>          Read_Master_Log_Pos: 156<br>               Relay_Log_File: slave1-relay-bin.000001<br>                Relay_Log_Pos: 4<br>        Relay_Master_Log_File: mysql-bin.000005<br>             Slave_IO_Running: No                          <span class="hljs-comment">#线程关闭</span><br>            Slave_SQL_Running: No                          <span class="hljs-comment">#线程关闭</span><br><span class="hljs-comment">#此时只需要在从服务器上开启线程，即可实现主从复制</span><br>mysql&gt; start slave;                                        <span class="hljs-comment">#开启线程</span><br>mysql&gt; select <span class="hljs-symbol">*</span> from teachers;                             <span class="hljs-comment">#查看新数据已传送过来了</span><br>+-----+---------------+-----+--------+<br>|<span class="hljs-string"> TID </span>|<span class="hljs-string"> Name          </span>|<span class="hljs-string"> Age </span>|<span class="hljs-string"> Gender </span>|<br>+-----+---------------+-----+--------+<br>|<span class="hljs-string">   1 </span>|<span class="hljs-string"> Song Jiang    </span>|<span class="hljs-string">  45 </span>|<span class="hljs-string"> M      </span>|<br>|<span class="hljs-string">   2 </span>|<span class="hljs-string"> Zhang Sanfeng </span>|<span class="hljs-string">  94 </span>|<span class="hljs-string"> M      </span>|<br>|<span class="hljs-string">   3 </span>|<span class="hljs-string"> Miejue Shitai </span>|<span class="hljs-string">  77 </span>|<span class="hljs-string"> F      </span>|<br>|<span class="hljs-string">   4 </span>|<span class="hljs-string"> Lin Chaoying  </span>|<span class="hljs-string">  93 </span>|<span class="hljs-string"> F      </span>|<br>|<span class="hljs-string">   5 </span>|<span class="hljs-string"> wang          </span>|<span class="hljs-string">  34 </span>|<span class="hljs-string"> M      </span>|<br>+-----+---------------+-----+--------+<br></code></pre></td></tr></table></figure><h4 id="2、主主复制"><a href="#2、主主复制" class="headerlink" title="2、主主复制"></a><strong>2、主主复制</strong></h4><p>两个节点，都可以更新数据，并且互为主从</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs gherkin"><span class="hljs-comment">#前面已经将10.0.0.184设为主服务器了，10.0.0.185设为从服务器了</span><br><span class="hljs-comment">#现在只需也将10.0.0.184设置为10.0.0.185的从服务器即可</span><br><br><span class="hljs-comment">#先将10.0.0.185配置文件的设置read-only删除掉</span><br><span class="hljs-comment">#查看10.0.0.185现在的二进制文件位置</span><br>mysql&gt; show master logs;<br>+---------------+-----------+-----------+<br>|<span class="hljs-string"> Log_name      </span>|<span class="hljs-string"> File_size </span>|<span class="hljs-string"> Encrypted </span>|<br>+---------------+-----------+-----------+<br>|<span class="hljs-string"> binlog.000001 </span>|<span class="hljs-string">       459 </span>|<span class="hljs-string"> No        </span>|<br>+---------------+-----------+-----------+<br><span class="hljs-comment">#然后在10.0.0.184里面设置从10.0.0.185二进制什么位置进行复制</span><br>mysql&gt; CHANGE MASTER TO<br>    -&gt;   MASTER_HOST=&#x27;10.0.0.185&#x27;,<br>    -&gt;   MASTER_USER=&#x27;repluser&#x27;,<br>    -&gt;   MASTER_PASSWORD=&#x27;123456&#x27;,<br>    -&gt;   MASTER_PORT=3306,<br>    -&gt;   MASTER_LOG_FILE=&#x27;binlog.000002&#x27;, MASTER_LOG_POS=156;<br>mysql&gt; start slave;                        <span class="hljs-comment">#启动线程</span><br><span class="hljs-comment">#此时已完成主主复制设置</span><br><br><span class="hljs-comment">#在10.0.0.184新增数据</span><br>mysql&gt; insert teachers (name,age,gender) values(&#x27;li&#x27;,34,&#x27;M&#x27;);<br><span class="hljs-comment">#在10.0.0.185可以看见新增的数据</span><br>mysql&gt; select <span class="hljs-symbol">*</span> from teachers;<br>+-----+---------------+-----+--------+<br>|<span class="hljs-string"> TID </span>|<span class="hljs-string"> Name          </span>|<span class="hljs-string"> Age </span>|<span class="hljs-string"> Gender </span>|<br>+-----+---------------+-----+--------+<br>|<span class="hljs-string">   1 </span>|<span class="hljs-string"> Song Jiang    </span>|<span class="hljs-string">  45 </span>|<span class="hljs-string"> M      </span>|<br>|<span class="hljs-string">   2 </span>|<span class="hljs-string"> Zhang Sanfeng </span>|<span class="hljs-string">  94 </span>|<span class="hljs-string"> M      </span>|<br>|<span class="hljs-string">   3 </span>|<span class="hljs-string"> Miejue Shitai </span>|<span class="hljs-string">  77 </span>|<span class="hljs-string"> F      </span>|<br>|<span class="hljs-string">   4 </span>|<span class="hljs-string"> Lin Chaoying  </span>|<span class="hljs-string">  93 </span>|<span class="hljs-string"> F      </span>|<br>|<span class="hljs-string">   5 </span>|<span class="hljs-string"> wang          </span>|<span class="hljs-string">  34 </span>|<span class="hljs-string"> M      </span>|<br>|<span class="hljs-string">   6 </span>|<span class="hljs-string"> li            </span>|<span class="hljs-string">  34 </span>|<span class="hljs-string"> M      </span>|<br>+-----+---------------+-----+--------+<br><span class="hljs-comment">#在10.0.0.185新增数据</span><br>mysql&gt; insert teachers (name,age,gender) values(&#x27;sun&#x27;,34,&#x27;M&#x27;);<br><span class="hljs-comment">#在10.0.0.184可以看到新增的数据</span><br>mysql&gt; select <span class="hljs-symbol">*</span> from teachers;<br>+-----+---------------+-----+--------+<br>|<span class="hljs-string"> TID </span>|<span class="hljs-string"> Name          </span>|<span class="hljs-string"> Age </span>|<span class="hljs-string"> Gender </span>|<br>+-----+---------------+-----+--------+<br>|<span class="hljs-string">   1 </span>|<span class="hljs-string"> Song Jiang    </span>|<span class="hljs-string">  45 </span>|<span class="hljs-string"> M      </span>|<br>|<span class="hljs-string">   2 </span>|<span class="hljs-string"> Zhang Sanfeng </span>|<span class="hljs-string">  94 </span>|<span class="hljs-string"> M      </span>|<br>|<span class="hljs-string">   3 </span>|<span class="hljs-string"> Miejue Shitai </span>|<span class="hljs-string">  77 </span>|<span class="hljs-string"> F      </span>|<br>|<span class="hljs-string">   4 </span>|<span class="hljs-string"> Lin Chaoying  </span>|<span class="hljs-string">  93 </span>|<span class="hljs-string"> F      </span>|<br>|<span class="hljs-string">   5 </span>|<span class="hljs-string"> wang          </span>|<span class="hljs-string">  34 </span>|<span class="hljs-string"> M      </span>|<br>|<span class="hljs-string">   6 </span>|<span class="hljs-string"> li            </span>|<span class="hljs-string">  34 </span>|<span class="hljs-string"> M      </span>|<br>|<span class="hljs-string">   7 </span>|<span class="hljs-string"> sun           </span>|<span class="hljs-string">  34 </span>|<span class="hljs-string"> M      </span>|<br>+-----+---------------+-----+--------+<br><br><span class="hljs-comment">#但需要注意的是两个服务器不能同时进行更改数据库，否则会产生冲突</span><br></code></pre></td></tr></table></figure><h4 id="3、半同步复制"><a href="#3、半同步复制" class="headerlink" title="3、半同步复制"></a><strong>3、半同步复制</strong></h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#实现半同步主要依靠semisync包，mysql数据库自带的包，但需要在数据库里安装</span><br>[root@master ~]<span class="hljs-comment">#rpm -ql mysql-server | grep semisync</span><br>/usr/lib64/mysql/plugin/semisync_master.so<br>/usr/lib64/mysql/plugin/semisync_slave.so<br><br><span class="hljs-comment">#主服务器配置</span><br>[root@master ~]<span class="hljs-comment">#mysql</span><br>mysql&gt; INSTALL PLUGIN rpl_semi_sync_master SONAME <span class="hljs-string">&#x27;semisync_master.so&#x27;</span>;<br>mysql&gt; show plugins;                     <span class="hljs-comment">#可以查看到插件已安装</span><br>[root@master ~]<span class="hljs-comment">#vim /etc/my.cnf          #修改配置文件</span><br>[mysqld]<br>server-id=<span class="hljs-number">184</span><br>rpl_semi_sync_master_enabled             <span class="hljs-comment">#开启此项设置</span><br>rpl_semi_sync_master_timeout=<span class="hljs-number">3000</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@master ~]</span><span class="hljs-comment">#systemctl restart mysqld</span><br>[root@master ~]<span class="hljs-comment">#mysql</span><br>mysql&gt; create user repluser@&#x27;<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.%&#x27; identified by <span class="hljs-string">&#x27;123456&#x27;</span>; <span class="hljs-comment">#创建账号</span><br>mysql&gt; grant replication slave on *.* to repluser@&#x27;<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.%&#x27;; <span class="hljs-comment">#将所有数据库的replication slave权限授予账号</span><br>[root@master ~]<span class="hljs-comment">#mkdir /data                  #创建备份数据的目录</span><br>[root@master ~]<span class="hljs-comment">#mysqldump -A -F --single-transaction --master-data &gt; /data/all.sql             #备份数据，all.sql自动生成，注意mysql8.0.26版本及以后版本--master-data更改为--source-data</span><br><br><span class="hljs-comment">#配置从服务器</span><br>[root@slave1 ~]<span class="hljs-comment">#yum -y install mysql-server</span><br>[root@slave1 ~]<span class="hljs-comment">#systemctl enable --now mysqld</span><br>[root@slave1 ~]<span class="hljs-comment">#mkdir /data</span><br>[root@master ~]<span class="hljs-comment">#scp /data/all.sql 10.0.0.185:/data</span><br>[root@slave1 ~]<span class="hljs-comment">#mysql</span><br>mysql&gt;INSTALL PLUGIN rpl_semi_sync_slave SONAME <span class="hljs-string">&#x27;semisync_slave.so&#x27;</span>;<br>[root@master ~]<span class="hljs-comment">#vim /etc/my.cnf          #修改配置文件</span><br>[mysqld]<br>server-id=<span class="hljs-number">185</span><br><span class="hljs-keyword">read</span>-only<br>rpl_semi_sync_slave_enabled             <span class="hljs-comment">#开启此项设置</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@slave1 ~]</span><span class="hljs-comment">#systemctl restart mysqld    #或者可以进入mysql后输入mysql&gt;SET GLOBAL rpl_semi_sync_slave_enabled=1; 临时修改变量</span><br>[root@slave1 ~]<span class="hljs-comment">#vim /data/all.sql</span><br>CHANGE MASTER TO                                  <span class="hljs-comment">#在此行后添加下面4行</span><br>  MASTER_HOST=<span class="hljs-string">&#x27;10.0.0.184&#x27;</span>,<br>  MASTER_USER=<span class="hljs-string">&#x27;repluser&#x27;</span>,<br>  MASTER_PASSWORD=<span class="hljs-string">&#x27;123456&#x27;</span>,<br>  MASTER_PORT=<span class="hljs-number">3306</span>,<br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@slave1 ~]</span><span class="hljs-comment">#mysql &lt; /data/all.sql</span><br>[root@slave1 ~]<span class="hljs-comment">#mysql hellodb</span><br>mysql&gt;start slave;<br><br><span class="hljs-comment">#此时实现了半同步复制</span><br></code></pre></td></tr></table></figure><h3 id="五、用mycat实现mysql的读写分离"><a href="#五、用mycat实现mysql的读写分离" class="headerlink" title="五、用mycat实现mysql的读写分离"></a>五、用mycat实现mysql的读写分离</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">#先快速搭建mysql主从服务器<br>#主服务器<br>[root@master ~]#yum -y install mysql-<span class="hljs-keyword">server</span><br>[root@master ~]#systemctl <span class="hljs-keyword">enable</span> <span class="hljs-comment">--now mysqld</span><br>[root@master ~]#vim /etc/my.cnf                        #修改配置文件<br>[mysqld]<br><span class="hljs-keyword">server</span>-id=<span class="hljs-number">185</span><br><span class="hljs-keyword">log</span>-bin<br>:wq<br>[root@master ~]#systemctl <span class="hljs-keyword">restart</span> mysqld             #重新加载<br>[root@master ~]#mysql<br>mysql&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> repluser@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span>; #创建账号<br>mysql&gt; <span class="hljs-keyword">grant</span> <span class="hljs-keyword">replication</span> slave <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> repluser@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span>;  #账号授权<br>[root@master ~]#mkdir /backup                       #创建备份目录<br>[root@master ~]#mysqldump -A -F <span class="hljs-comment">--single-transaction --source-data &gt; /backup/full-`date +%F`.sql                         #备份数据</span><br>[root@master ~]#ls /backup                          #查看是否备份成功<br><span class="hljs-keyword">full</span><span class="hljs-number">-2022</span><span class="hljs-number">-10</span><span class="hljs-number">-25.</span><span class="hljs-keyword">sql</span><br><br><br><br><br>#从服务器<br>[root@slave ~]#yum -y install mysql-<span class="hljs-keyword">server</span><br>[root@slave ~]#systemctl <span class="hljs-keyword">enable</span> <span class="hljs-comment">--now mysqld</span><br>[root@slave ~]#vim /etc/my.cnf                          #修改配置文件<br>[mysqld]<br><span class="hljs-keyword">server</span>-id=<span class="hljs-number">186</span><br><span class="hljs-keyword">read</span>-<span class="hljs-keyword">only</span><br>:wq<br>[root@slave ~]#systemctl <span class="hljs-keyword">restart</span> mysqld<br>[root@slave ~]#mkdir /backup                             #创建备份接受目录<br>[root@master ~]#scp /backup/<span class="hljs-keyword">full</span><span class="hljs-number">-2022</span><span class="hljs-number">-10</span><span class="hljs-number">-25.</span><span class="hljs-keyword">sql</span>  <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.186</span>:/backup<br>                                                        #将备份数据复制到从服务器<br>[root@slave ~]#ls /backup                               #复制成功<br><span class="hljs-keyword">full</span><span class="hljs-number">-2022</span><span class="hljs-number">-10</span><span class="hljs-number">-25.</span><span class="hljs-keyword">sql</span><br>[root@slave ~]#vim /backup/<span class="hljs-keyword">full</span><span class="hljs-number">-2022</span><span class="hljs-number">-10</span><span class="hljs-number">-25.</span><span class="hljs-keyword">sql</span>          #编辑备份数据<br>CHANGE MASTER <span class="hljs-keyword">TO</span>                                        #在此行后面添加后面四行<br>MASTER_HOST=<span class="hljs-string">&#x27;10.0.0.185&#x27;</span>,<br>  MASTER_USER=<span class="hljs-string">&#x27;repluser&#x27;</span>,<br>  MASTER_PASSWORD=<span class="hljs-string">&#x27;123456&#x27;</span>,<br>  MASTER_PORT=<span class="hljs-number">3306</span>,<br>:wq<br>[root@slave ~]#mysql &lt; /backup/<span class="hljs-keyword">full</span><span class="hljs-number">-2022</span><span class="hljs-number">-10</span><span class="hljs-number">-25.</span><span class="hljs-keyword">sql</span>      #导入备份数据<br>[root@slave ~]#mysql<br>mysql&gt; <span class="hljs-keyword">start</span> slave;                                     #开启线程<br><br>#此时主从复制已完成，下一步安装并启动mycat<br>[root@mycat-<span class="hljs-keyword">server</span> ~]#mkdir /apps ; tar xf Mycat-<span class="hljs-keyword">server</span><span class="hljs-number">-1.6</span><span class="hljs-number">.7</span><span class="hljs-number">.4</span>-<span class="hljs-keyword">release</span><span class="hljs-number">-20200105164103</span>-linux.tar.gz -C /apps                    #创建/apps目录，并将安装包解压至/apps目录<br>[root@mycat-<span class="hljs-keyword">server</span> ~]#ls /apps/mycat/bin/               #可以看到mycat启动路径<br>dataMigrate.sh   mycat      startup_nowrap.sh     <span class="hljs-keyword">wrapper</span>-linux-x86<span class="hljs-number">-32</span><br>init_zk_data.sh  rehash.sh  <span class="hljs-keyword">wrapper</span>-linux-ppc<span class="hljs-number">-64</span>  <span class="hljs-keyword">wrapper</span>-linux-x86<span class="hljs-number">-64</span><br>#为了不输入路径也能启动mycat，将mycat启动路径写入<span class="hljs-type">PATH</span><br>[root@mycat-<span class="hljs-keyword">server</span> ~]#vi /etc/profile.d/mycat.sh<br><span class="hljs-type">PATH</span>=/apps/mycat/bin:$<span class="hljs-type">PATH</span><br>:wq<br>[root@mycat-<span class="hljs-keyword">server</span> ~]#. /etc/profile.d/mycat.sh         #运行脚本<br>#因为mycat需要用到java，所以需要安装Java（占空间大），将虚拟机内存调到<span class="hljs-number">3</span>G<br>[root@mycat-<span class="hljs-keyword">server</span> ~]#free -h                           #查看内存是否更改成功<br>              total        used        free      shared  buff/<span class="hljs-keyword">cache</span>   available<br>Mem:          <span class="hljs-number">2.7</span>Gi       <span class="hljs-number">275</span>Mi       <span class="hljs-number">2.2</span>Gi       <span class="hljs-number">9.0</span>Mi       <span class="hljs-number">303</span>Mi       <span class="hljs-number">2.3</span>Gi<br>Swap:         <span class="hljs-number">2.0</span>Gi          <span class="hljs-number">0</span>B       <span class="hljs-number">2.0</span>Gi<br>[root@mycat-<span class="hljs-keyword">server</span> ~]#yum -y install java               #安装java<br>#可以看到打开多个端口,其中<span class="hljs-number">8066</span>端口用于连接MyCAT<br>[root@mycat-<span class="hljs-keyword">server</span> ~]#ss -ntlp<br>State   Recv-Q Send-Q <span class="hljs-keyword">Local</span> Address:Port  Peer Address:Port   Process                                    <br><span class="hljs-keyword">LISTEN</span>  <span class="hljs-number">0</span>      <span class="hljs-number">128</span>     <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:<span class="hljs-number">22</span>         <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:*           users:((&quot;sshd&quot;,pid=<span class="hljs-number">956</span>,fd=<span class="hljs-number">4</span>))                                                                                                  <br><span class="hljs-keyword">LISTEN</span>  <span class="hljs-number">0</span>      <span class="hljs-number">1</span>       <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">32000</span>    <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:*           users:((&quot;java&quot;,pid=<span class="hljs-number">24596</span>,fd=<span class="hljs-number">4</span>))                                                                                                <br><span class="hljs-keyword">LISTEN</span>  <span class="hljs-number">0</span>      <span class="hljs-number">50</span>      *:<span class="hljs-number">38695</span>            *:*                 users:((&quot;java&quot;,pid=<span class="hljs-number">24596</span>,fd=<span class="hljs-number">66</span>))                                                                                               <br><span class="hljs-keyword">LISTEN</span>  <span class="hljs-number">0</span>      <span class="hljs-number">100</span>     *:<span class="hljs-number">9066</span>             *:*                users:((&quot;java&quot;,pid=<span class="hljs-number">24596</span>,fd=<span class="hljs-number">87</span>))                                                                                               <br><span class="hljs-keyword">LISTEN</span>  <span class="hljs-number">0</span>      <span class="hljs-number">50</span>      *:<span class="hljs-number">35117</span>            *:*                users:((&quot;java&quot;,pid=<span class="hljs-number">24596</span>,fd=<span class="hljs-number">68</span>))                                                                                                                     <br><span class="hljs-keyword">LISTEN</span>  <span class="hljs-number">0</span>     <span class="hljs-number">128</span>      [::]:<span class="hljs-number">22</span>            [::]:*              users:((&quot;sshd&quot;,pid=<span class="hljs-number">956</span>,fd=<span class="hljs-number">6</span>))                                                                                                  <br><span class="hljs-keyword">LISTEN</span>  <span class="hljs-number">0</span>     <span class="hljs-number">50</span>       *:<span class="hljs-number">1984</span>             *:*                 users:((&quot;java&quot;,pid=<span class="hljs-number">24596</span>,fd=<span class="hljs-number">67</span>))                                                                                               <br><span class="hljs-keyword">LISTEN</span>  <span class="hljs-number">0</span>     <span class="hljs-number">100</span>      *:<span class="hljs-number">8066</span>             *:*                 users:((&quot;java&quot;,pid=<span class="hljs-number">24596</span>,fd=<span class="hljs-number">91</span>)) <br>#查看日志，确认mycat是否启动成功<br>[root@mycat-<span class="hljs-keyword">server</span> ~]#tail /apps/mycat/logs/<span class="hljs-keyword">wrapper</span>.<span class="hljs-keyword">log</span><br><span class="hljs-keyword">INFO</span>   | jvm <span class="hljs-number">1</span>    | <span class="hljs-number">2022</span>/<span class="hljs-number">10</span>/<span class="hljs-number">25</span> <span class="hljs-number">09</span>:<span class="hljs-number">42</span>:<span class="hljs-number">33</span> | MyCAT <span class="hljs-keyword">Server</span> startup successfully. see logs <span class="hljs-keyword">in</span> logs/mycat.<span class="hljs-keyword">log</span>                     #startup successfully：启动成功<br><br>#客户端配置<br>[root@Centos7 ~]#yum -y install mariadb               #安装数据库<br>[root@Centos7 ~]#mysql -uroot -p123456 -h10<span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-number">.184</span> -P8066  #用户root，密码<span class="hljs-number">123456</span>是mycat自己自动生成的账号密码（/apps/mycat/conf/<span class="hljs-keyword">server</span>.xml可以在这修改账号密码）<br>MySQL [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">show</span> databases;                 #此时只有一个测试数据库（虚拟的）<br>+<span class="hljs-comment">----------+</span><br>| <span class="hljs-keyword">DATABASE</span> |<br>+<span class="hljs-comment">----------+</span><br>| TESTDB   |<br>+<span class="hljs-comment">----------+</span><br><br>#正常情况下mysql端口号是<span class="hljs-number">3306</span>，我们可以把mycat的端口号改为<span class="hljs-number">3306</span><br>[root@mycat-<span class="hljs-keyword">server</span> ~]#mycat stop<br>[root@mycat-<span class="hljs-keyword">server</span> ~]#vim /apps/mycat/conf/<span class="hljs-keyword">server</span>.xml<br>&lt;!<span class="hljs-comment">--分布式事务开关，0为不过滤分布式事务，1为过滤分布式事务，2为不过滤&gt;分布式事务,但是记录分布式事务日志--&gt;</span><br>&lt;property <span class="hljs-type">name</span>=&quot;serverPort&quot;&gt;<span class="hljs-number">3306</span>&lt;/property&gt; &lt;property <span class="hljs-type">name</span>=&quot;managerPort&quot;&gt;<span class="hljs-number">9066</span>&lt;/property&gt;                         #添加此行<br><br>#为了让客户端通过mycat可以连接到真正的数据库，需要将数据库映射到mycat的测试数据库。<br>#在mysql上创建mycat可以连接到mysql的账号密码<br>[root@master ~]#mysql<br>mysql&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">admin</span>@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br>                      #创建账号密码，此账号主要是用于mycat，可以指定具体地址（不用网段）<br>mysql&gt; <span class="hljs-keyword">grant</span> <span class="hljs-keyword">all</span> <span class="hljs-keyword">on</span> hellodb.* <span class="hljs-keyword">to</span> <span class="hljs-keyword">admin</span>@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span>;<br>                      #给账号授权，只想让mycat有访问hellodb的权限<br><br>#在mycat上添加mysql新建的账号<br>[root@mycat-<span class="hljs-keyword">server</span> ~]#vim /apps/mycat/conf/<span class="hljs-keyword">schema</span>.xml<br> &lt;<span class="hljs-keyword">schema</span> <span class="hljs-type">name</span>=&quot;TESTDB&quot; checkSQLschema=&quot;false&quot; sqlMaxLimit=&quot;100&quot;<br>dataNode=&quot;dn1&quot;&gt;                                     #将原单词改为<span class="hljs-keyword">false</span><br> &lt;dataNode <span class="hljs-type">name</span>=&quot;dn1&quot; dataHost=&quot;localhost1&quot; <span class="hljs-keyword">database</span>=&quot;hellodb&quot; /&gt;  #将原数据库改为hellodb<br> &lt;dataHost <span class="hljs-type">name</span>=&quot;localhost1&quot; maxCon=&quot;1000&quot; minCon=&quot;10&quot; balance=&quot;1&quot; #将balance=<span class="hljs-number">0</span>改为=<span class="hljs-number">1</span><br>  writeType=&quot;0&quot; dbType=&quot;mysql&quot; dbDriver=&quot;native&quot; switchType=&quot;1&quot;<br>slaveThreshold=&quot;100&quot;&gt;<br> &lt;heartbeat&gt;<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>()&lt;/heartbeat&gt;<br> &lt;writeHost host=&quot;host1&quot; url=&quot;10.0.0.18:3306&quot; <span class="hljs-keyword">user</span>=&quot;root&quot; <span class="hljs-keyword">password</span>=&quot;123456&quot;&gt;<br> &lt;readHost host=&quot;host2&quot; url=&quot;10.0.0.28:3306&quot; <span class="hljs-keyword">user</span>=&quot;root&quot; <span class="hljs-keyword">password</span>=&quot;123456&quot; /&gt;<br> #添加主从服务器地址账号密码<br>：wq<br>#上面配置中，balance改为<span class="hljs-number">1</span>，表示读写分离。以上配置达到的效果就是<span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.18</span>为主库，<span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.28</span>为从库<br><br>#修改完成后再重新启动mycat<br>[root@Rocky ~]#mycat <span class="hljs-keyword">start</span><br>[root@Rocky ~]#tail /apps/mycat/logs/<span class="hljs-keyword">wrapper</span>.<span class="hljs-keyword">log</span><br><span class="hljs-keyword">INFO</span>   | jvm <span class="hljs-number">1</span>    | <span class="hljs-number">2022</span>/<span class="hljs-number">10</span>/<span class="hljs-number">25</span> <span class="hljs-number">11</span>:<span class="hljs-number">22</span>:<span class="hljs-number">40</span> | MyCAT <span class="hljs-keyword">Server</span> startup successfully. see logs <span class="hljs-keyword">in</span> logs/mycat.<span class="hljs-keyword">log</span><br><br>#此时客户端可以通过mycat访问数据库中的hellodb<br>[root@Centos7 ~]#mysql -uroot -p123456 -h10<span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-number">.184</span>    #已经将端口号改为默认端口号<span class="hljs-number">3306</span>了，不用在输入了<br>MySQL [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">show</span> databases;<br>+<span class="hljs-comment">----------+</span><br>| <span class="hljs-keyword">DATABASE</span> |<br>+<span class="hljs-comment">----------+</span><br>| TESTDB   |<br>+<span class="hljs-comment">----------+</span><br>MySQL [(<span class="hljs-keyword">none</span>)]&gt; use TESTDB<br>MySQL [TESTDB]&gt; <span class="hljs-keyword">show</span> <span class="hljs-keyword">tables</span>;<br>+<span class="hljs-comment">-------------------+</span><br>| Tables_in_hellodb |<br>+<span class="hljs-comment">-------------------+</span><br>| classes           |<br>| coc               |<br>| courses           |<br>| scores            |<br>| students          |<br>| teachers          |<br>| toc               |<br>+<span class="hljs-comment">-------------------+</span><br>#已经可以看到数据库里的内容了<br></code></pre></td></tr></table></figure><h3 id="六、实现openvpn部署，并且测试通过，输出博客或者自己的文档存档"><a href="#六、实现openvpn部署，并且测试通过，输出博客或者自己的文档存档" class="headerlink" title="六、实现openvpn部署，并且测试通过，输出博客或者自己的文档存档"></a>六、实现openvpn部署，并且测试通过，输出博客或者自己的文档存档</h3><p><a href=""><img src="image-20221027083130582.png" alt="image-20221027083130582"></a></p><h4 id="1、阿里云网络配置"><a href="#1、阿里云网络配置" class="headerlink" title="1、阿里云网络配置"></a><strong>1、阿里云网络配置</strong></h4><p>①配置参数</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-number">1</span> 阿里云创建专有网络<br>指定城市和可用区<span class="hljs-symbol">:</span>华北<span class="hljs-number">3</span>张家口可用区A区<br>网段名magedu-net1和地址段<span class="hljs-number">172.16</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">12</span>,默认资源组<br>交换机名magedu-net1-n68 可用区A <span class="hljs-title class_">IPv4</span>的地址段 <span class="hljs-number">172.30</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">24</span><br>安全组开放<span class="hljs-number">22</span>端口<br><span class="hljs-number">2</span> 创建<span class="hljs-title class_">OpenVPN</span>服务器有公网<span class="hljs-title class_">IP</span>的实例<span class="hljs-number">1</span>个<br>指定城市和可用区<span class="hljs-symbol">:</span>华北<span class="hljs-number">3</span>张家口可用区A区<br>共享型s6 <span class="hljs-number">2</span>vCPU <span class="hljs-number">4</span>G<br>网络<span class="hljs-symbol">:magedu-net1</span> 交换机<span class="hljs-symbol">:magedu-net1-n68</span><br>公网<span class="hljs-title class_">IP</span> 私网<span class="hljs-title class_">IP</span>：<span class="hljs-number">172.30</span>.<span class="hljs-number">0.1</span>/<span class="hljs-number">24</span>  按量收费 <span class="hljs-number">100</span>M <br>默认安全组 默认配置 <span class="hljs-number">22</span>,<span class="hljs-number">3389</span>,icmp<br><span class="hljs-title class_">Rocky</span> <span class="hljs-title class_">Linux</span> <span class="hljs-number">8.6</span><br>系统盘 <span class="hljs-title class_">SSD</span>云盘<span class="hljs-number">40</span>G<br><span class="hljs-number">3</span> 创建局域网的服务器无公网<span class="hljs-title class_">IP</span>的实例<span class="hljs-number">2</span>个<br>按量付费<br>指定城市和可用区<span class="hljs-symbol">:</span>华北<span class="hljs-number">3</span>张家口可用区A区<br>共享型 <span class="hljs-number">1</span>vCPU2G<br><span class="hljs-title class_">Rocky</span> <span class="hljs-title class_">Linux</span> <span class="hljs-number">8.6</span><br>系统盘 <span class="hljs-title class_">ESSD</span>云盘<span class="hljs-number">40</span>G<br>网络<span class="hljs-symbol">:magedu-net1</span> magedu-net1-n68<br>无公网<span class="hljs-title class_">IP</span> 私网<span class="hljs-title class_">IP</span>：<span class="hljs-number">172.30</span>.<span class="hljs-number">0.100</span>/<span class="hljs-number">24</span> <span class="hljs-number">172.30</span>.<span class="hljs-number">0.200</span>/<span class="hljs-number">24</span>  <br>默认安全组<br>主网卡magedu-net1-n68<br><span class="hljs-number">4</span> 重设所有实例密码<br><span class="hljs-number">5</span> 修改安全组打开 <span class="hljs-number">1194</span>/<span class="hljs-title class_">TCP</span>/<span class="hljs-title class_">UDP</span><br></code></pre></td></tr></table></figure><p>②验证主机配置</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs pf">[root@Rocky ~]<span class="hljs-comment">#ssh 47.92.232.42                   #公网地址</span><br>The authenticity of host &#x27;<span class="hljs-number">47.92</span>.<span class="hljs-number">232.42</span> (<span class="hljs-number">47.92</span>.<span class="hljs-number">232.42</span>)&#x27; can&#x27;t be established.<br>ECDSA key fingerprint is SHA256:Bzrhb3djhiGwPo8sjkwu7loauam5plaqO9YlG2eyjE4. <br>Welcome <span class="hljs-keyword">to</span> Alibaba Cloud Elastic Compute Service !<br>Activate the web console with: systemctl enable --now cockpit.socket<br><br>[root@openvpn-server ~]<span class="hljs-comment"># ip a</span><br><span class="hljs-number">2</span>: eth0: <span class="hljs-variable">&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">1500</span> qdisc fq_codel <span class="hljs-keyword">state</span> UP <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> qlen <span class="hljs-number">1000</span><br>    link/ether <span class="hljs-number">00</span>:<span class="hljs-number">16</span>:<span class="hljs-number">3</span>e:<span class="hljs-number">21</span>:bc:<span class="hljs-number">7</span>f brd ff:ff:ff:ff:ff:ff<br>    <span class="hljs-keyword">inet</span> <span class="hljs-number">172.30</span>.<span class="hljs-number">0.1</span>/<span class="hljs-number">24</span> brd <span class="hljs-number">172.30</span>.<span class="hljs-number">0.255</span> scope <span class="hljs-keyword">global</span> dynamic noprefixroute eth0<br>    <br>[root@openvpn-server ~]<span class="hljs-comment"># ssh 172.30.0.100</span><br>root@<span class="hljs-number">172.30</span>.<span class="hljs-number">0.100</span>&#x27;s password: <br>Welcome <span class="hljs-keyword">to</span> Alibaba Cloud Elastic Compute Service !<br>Activate the web console with: systemctl enable --now cockpit.socket<br>Last login: Thu Oct <span class="hljs-number">27</span> <span class="hljs-number">09</span>:<span class="hljs-number">33</span>:<span class="hljs-number">58</span> <span class="hljs-number">2022</span> <span class="hljs-keyword">from</span> <span class="hljs-number">172.30</span>.<span class="hljs-number">0.1</span><br>[root@web01 ~]<span class="hljs-comment"># hostname -I</span><br><span class="hljs-number">172.30</span>.<span class="hljs-number">0.100</span> <br><br>[root@web01 ~]<span class="hljs-comment"># ssh 172.30.0.200</span><br>root@<span class="hljs-number">172.30</span>.<span class="hljs-number">0.200</span>&#x27;s password: <br>Welcome <span class="hljs-keyword">to</span> Alibaba Cloud Elastic Compute Service !<br>Activate the web console with: systemctl enable --now cockpit.socket<br>[root@web02 ~]<span class="hljs-comment"># hostname -I</span><br><span class="hljs-number">172.30</span>.<span class="hljs-number">0.200</span> <br></code></pre></td></tr></table></figure><p>③安装httpd</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@web02 ~]</span># yum -y install httpd;systemctl enable <span class="hljs-attr">--now</span> httpd;hostname &gt; /<span class="hljs-selector-tag">var</span>/www/<span class="hljs-selector-tag">html</span>/index<span class="hljs-selector-class">.html</span><br><br>#安装完后外部直接连接，查看网页打不开，需要openVPN的配置<br></code></pre></td></tr></table></figure><h4 id="2、安装openvpn"><a href="#2、安装openvpn" class="headerlink" title="2、安装openvpn"></a><strong>2、安装openvpn</strong></h4><p>①查看及安装</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs autoit">需要用到两个软件  openVPN和easy-rsa（openVPN系统自带，easy-rsa不自带需要配置epel源）<br>[root<span class="hljs-symbol">@openvpn</span>-server ~]<span class="hljs-meta"># yum list openvpn</span><br>Last metadata expiration check: <span class="hljs-number">0</span>:<span class="hljs-number">01</span>:<span class="hljs-number">14</span> ago on Thu <span class="hljs-number">27</span> Oct <span class="hljs-number">2022</span> <span class="hljs-number">10</span>:<span class="hljs-number">06</span>:<span class="hljs-number">06</span> AM CST.<br>Available Packages<br>openvpn.x86_64                       <span class="hljs-number">2.4</span><span class="hljs-number">.12</span><span class="hljs-number">-1.</span>el8                      epel<br>[root<span class="hljs-symbol">@openvpn</span>-server ~]<span class="hljs-meta"># yum list easy-rsa</span><br>Last metadata expiration check: <span class="hljs-number">0</span>:<span class="hljs-number">06</span>:<span class="hljs-number">25</span> ago on Thu <span class="hljs-number">27</span> Oct <span class="hljs-number">2022</span> <span class="hljs-number">09</span>:<span class="hljs-number">52</span>:<span class="hljs-number">01</span> AM CST.<br>Error: No matching Packages <span class="hljs-keyword">to</span> list<br><br><span class="hljs-meta">#配置epel源</span><br>[root<span class="hljs-symbol">@openvpn</span>-server ~]<span class="hljs-meta"># yum install -y https://mirrors.aliyun.com/epel/epel-release-latest-8.noarch.rpm</span><br>[root<span class="hljs-symbol">@openvpn</span>-server ~]<span class="hljs-meta"># sed -i <span class="hljs-string">&#x27;s|^#baseurl=https://download.example/pub|baseurl=https://mirrors.aliyun.com|&#x27;</span> /etc/yum.repos.d/epel*</span><br>[root<span class="hljs-symbol">@openvpn</span>-server ~]<span class="hljs-meta"># sed -i <span class="hljs-string">&#x27;s|^metalink|#metalink|&#x27;</span> /etc/yum.repos.d/epel*</span><br><br><span class="hljs-meta">#安装两个软件</span><br>[root<span class="hljs-symbol">@openvpn</span>-server ~]<span class="hljs-meta"># yum -y install easy-rsa        #证书管理软件</span><br>[root<span class="hljs-symbol">@openvpn</span>-server ~]<span class="hljs-meta"># yum -y install openvpn         #openvpn服务器端</span><br></code></pre></td></tr></table></figure><p>②准备相关配置文件</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#生成服务器配置文件</span><br>[root<span class="hljs-symbol">@openvpn</span>-server easy-rsa]<span class="hljs-meta"># cp /usr/share/doc/openvpn/sample/sample-config-files/server.conf /etc/openvpn/</span><br>[root<span class="hljs-symbol">@openvpn</span>-server easy-rsa]<span class="hljs-meta"># cd /etc/openvpn</span><br>[root<span class="hljs-symbol">@openvpn</span>-server openvpn]<span class="hljs-meta"># ls</span><br>certs  client  server  server.conf<br><br><span class="hljs-meta">#准备证书颁发相关文件</span><br>[root<span class="hljs-symbol">@openvpn</span>-server ~]<span class="hljs-meta"># mkdir -p /data/easy-rsa<span class="hljs-comment">; cp -r /usr/share/easy-rsa/3/* /data/easy-rsa          #将/usr/share/easy-rsa/3/里面的文件复制到/data/easy-rsa</span></span><br>[root<span class="hljs-symbol">@openvpn</span>-server ~]<span class="hljs-meta"># ls /data/easy-rsa          #查看复制结果</span><br>easyrsa  openssl-easyrsa.cnf  x509-types<br><span class="hljs-meta">#准备颁发证书相关变量的配置文件</span><br>[root<span class="hljs-symbol">@openvpn</span>-server ~]<span class="hljs-meta">#cp /usr/share/doc/easy-rsa/vars.example /data/easy-rsa/vars</span><br>[root<span class="hljs-symbol">@openvpn</span>-server ~]<span class="hljs-meta"># cd /data/easy-rsa</span><br>[root<span class="hljs-symbol">@openvpn</span>-server easy-rsa]<span class="hljs-meta"># ls</span><br>easyrsa  openssl-easyrsa.cnf  vars  x509-types<br><br><span class="hljs-meta">#修改给CA和OpenVPN服务器颁发的证书的有效期,可适当加长</span><br>[root<span class="hljs-symbol">@openvpn</span>-server easy-rsa]<span class="hljs-meta"># vim vars</span><br>set_var EASYRSA_CA_EXPIRE       <span class="hljs-number">36500</span>                <span class="hljs-meta">#CA的证书有效期</span><br>set_var EASYRSA_CA_EXPIRE       <span class="hljs-number">36500</span>                <span class="hljs-meta">#此次是指的openvpn的有效期，后面再配置客户端（用户）的有效期</span><br></code></pre></td></tr></table></figure><h4 id="3、准备证书相关文件"><a href="#3、准备证书相关文件" class="headerlink" title="3、准备证书相关文件"></a><strong>3、准备证书相关文件</strong></h4><p>①初始化PKI生成PK相关目录和文件</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs axapta">[root@openvpn-<span class="hljs-keyword">server</span> ~]<span class="hljs-meta"># cd /data/easy-rsa</span><br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># ./easyrsa init-pki</span><br>Note: <span class="hljs-keyword">using</span> Easy-RSA configuration <span class="hljs-keyword">from</span>: /data/easy-rsa/vars<br>init-pki complete; you may now create a CA or requests.<br>Your newly created PKI dir <span class="hljs-keyword">is</span>: /data/easy-rsa/pki<br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># tree</span><br>.<br>├── easyrsa<br>├── openssl-easyrsa.cnf<br>├── pki<br>│   ├── openssl-easyrsa.cnf<br>│   ├── <span class="hljs-keyword">private</span><br>│   ├── reqs<br>│   └── safessl-easyrsa.cnf<br>├── vars<br>└── x509-types<br>    ├── ca<br>    ├── <span class="hljs-keyword">client</span><br>    ├── code-signing<br>    ├── COMMON<br>    ├── email<br>    ├── kdc<br>    ├── <span class="hljs-keyword">server</span><br>    └── serverClient<br><br></code></pre></td></tr></table></figure><p>②创建CA机构环境</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-meta">#给CA颁发证书（自签名证书）</span><br>[root@openvpn-<span class="hljs-keyword">server</span> ~]<span class="hljs-meta"># cd /data/easy-rsa</span><br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># ./easyrsa build-ca nopass</span><br>                               <span class="hljs-meta">#nopass表示生成的私钥没有设置密码，生产中要设置</span><br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># tree          #生成了ca.crt文件和其他文件</span><br>.<br>├── easyrsa<br>├── openssl-easyrsa.cnf<br>├── pki<br>│   ├── ca.crt                             <span class="hljs-meta">#CA的证书</span><br>│   ├── certs_by_serial<br>│   ├── <span class="hljs-keyword">index</span>.txt                          <span class="hljs-meta">#颁发证书生成的索引信息</span><br>│   ├── <span class="hljs-keyword">index</span>.txt.attr<br>│   ├── issued<br>│   ├── openssl-easyrsa.cnf<br>│   ├── <span class="hljs-keyword">private</span><br>│   │   └── ca.key<br>│   ├── renewed<br>│   │   ├── certs_by_serial<br>│   │   ├── private_by_serial<br>│   │   └── reqs_by_serial<br>│   ├── reqs<br>│   ├── revoked<br>│   │   ├── certs_by_serial<br>│   │   ├── private_by_serial<br>│   │   └── reqs_by_serial<br>│   ├── safessl-easyrsa.cnf<br>│   └── serial<br>├── vars<br>└── x509-types<br>    ├── ca<br>    ├── <span class="hljs-keyword">client</span><br>    ├── code-signing<br>    ├── COMMON<br>    ├── email<br>    ├── kdc<br>    ├── <span class="hljs-keyword">server</span><br>    └── serverClient<br><br></code></pre></td></tr></table></figure><p>③创建openVPN服务器证书申请</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-meta">#创建服务器证书申请文件，其中server是文件前缀</span><br>[root@openvpn-<span class="hljs-keyword">server</span> ~]<span class="hljs-meta"># cd /data/easy-rsa</span><br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># ./easyrsa gen-req server nopass</span><br>Keypair and certificate request completed. Your files are:<br>req: /data/easy-rsa/pki/reqs/<span class="hljs-keyword">server</span>.req            <span class="hljs-meta">#证书申请文件</span><br>key: /data/easy-rsa/pki/<span class="hljs-keyword">private</span>/<span class="hljs-keyword">server</span>.key         <span class="hljs-meta">#私钥文件</span><br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># tree</span><br>.<br>├── easyrsa<br>├── openssl-easyrsa.cnf<br>├── pki<br>│   ├── ca.crt<br>│   ├── certs_by_serial<br>│   ├── <span class="hljs-keyword">index</span>.txt<br>│   ├── <span class="hljs-keyword">index</span>.txt.attr<br>│   ├── issued<br>│   ├── openssl-easyrsa.cnf<br>│   ├── <span class="hljs-keyword">private</span><br>│   │   ├── ca.key<br>│   │   └── <span class="hljs-keyword">server</span>.key                         <span class="hljs-meta">#此时新增了私钥文件</span><br>│   ├── renewed<br>│   │   ├── certs_by_serial<br>│   │   ├── private_by_serial<br>│   │   └── reqs_by_serial<br>│   ├── reqs<br>│   │   └── <span class="hljs-keyword">server</span>.req                       <span class="hljs-meta">#新增了证书申请文件</span><br>│   ├── revoked<br>│   │   ├── certs_by_serial<br>│   │   ├── private_by_serial<br>│   │   └── reqs_by_serial<br>│   ├── safessl-easyrsa.cnf<br>│   └── serial<br>├── vars<br>└── x509-types<br>    ├── ca<br>    ├── <span class="hljs-keyword">client</span><br>    ├── code-signing<br>    ├── COMMON<br>    ├── email<br>    ├── kdc<br>    ├── <span class="hljs-keyword">server</span><br>    └── serverClient<br></code></pre></td></tr></table></figure><p>④给openVPN服务器颁发证书</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs axapta">[root@openvpn-<span class="hljs-keyword">server</span> ~]<span class="hljs-meta"># cd /data/easy-rsa</span><br><span class="hljs-meta">#第一个server表示证书的类型,第二个server表示请求文件名的前缀</span><br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># ./easyrsa sign server server</span><br>Certificate created at: /data/easy-rsa/pki/issued/<span class="hljs-keyword">server</span>.crt<br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># tree</span><br>.<br>├── easyrsa<br>├── openssl-easyrsa.cnf<br>├── pki<br>│   ├── ca.crt<br>│   ├── certs_by_serial<br>│   │   └── <span class="hljs-number">746</span>A3EC66A04B10F5BEAABC519143A3F.pem   <span class="hljs-meta">#颁发证书的备份文件</span><br>│   ├── <span class="hljs-keyword">index</span>.txt<br>│   ├── <span class="hljs-keyword">index</span>.txt.attr<br>│   ├── <span class="hljs-keyword">index</span>.txt.attr.old<br>│   ├── <span class="hljs-keyword">index</span>.txt.old<br>│   ├── issued<br>│   │   └── <span class="hljs-keyword">server</span>.crt                        <span class="hljs-meta">#给服务器颁发的证书</span><br>│   ├── openssl-easyrsa.cnf<br>│   ├── <span class="hljs-keyword">private</span><br>│   │   ├── ca.key<br>│   │   └── <span class="hljs-keyword">server</span>.key<br>│   ├── renewed<br>│   │   ├── certs_by_serial<br>│   │   ├── private_by_serial<br>│   │   └── reqs_by_serial<br>│   ├── reqs<br>│   │   └── <span class="hljs-keyword">server</span>.req<br>│   ├── revoked<br>│   │   ├── certs_by_serial<br>│   │   ├── private_by_serial<br>│   │   └── reqs_by_serial<br>│   ├── safessl-easyrsa.cnf<br>│   ├── serial<br>│   └── serial.old<br>├── vars<br>└── x509-types<br>    ├── ca<br>    ├── <span class="hljs-keyword">client</span><br>    ├── code-signing<br>    ├── COMMON<br>    ├── email<br>    ├── kdc<br>    ├── <span class="hljs-keyword">server</span><br>    └── serverClient<br></code></pre></td></tr></table></figure><p>⑤创建Diffie-Hellman密钥</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs axapta">[root@openvpn-<span class="hljs-keyword">server</span> ~]<span class="hljs-meta"># cd /data/easy-rsa</span><br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># ./easyrsa gen-dh</span><br>DH parameters of size <span class="hljs-number">2048</span> created at /data/easy-rsa/pki/dh.pem<br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># tree</span><br>.<br>├── easyrsa<br>├── openssl-easyrsa.cnf<br>├── pki<br>│   ├── ca.crt<br>│   ├── certs_by_serial<br>│   │   └── <span class="hljs-number">746</span>A3EC66A04B10F5BEAABC519143A3F.pem<br>│   ├── dh.pem                           <span class="hljs-meta">#生成的加密文件</span><br>│   ├── <span class="hljs-keyword">index</span>.txt<br>│   ├── <span class="hljs-keyword">index</span>.txt.attr<br>│   ├── <span class="hljs-keyword">index</span>.txt.attr.old<br>│   ├── <span class="hljs-keyword">index</span>.txt.old<br>│   ├── issued<br>│   │   └── <span class="hljs-keyword">server</span>.crt<br>│   ├── openssl-easyrsa.cnf<br>│   ├── <span class="hljs-keyword">private</span><br>│   │   ├── ca.key<br>│   │   └── <span class="hljs-keyword">server</span>.key<br>│   ├── renewed<br>│   │   ├── certs_by_serial<br>│   │   ├── private_by_serial<br>│   │   └── reqs_by_serial<br>│   ├── reqs<br>│   │   └── <span class="hljs-keyword">server</span>.req<br>│   ├── revoked<br>│   │   ├── certs_by_serial<br>│   │   ├── private_by_serial<br>│   │   └── reqs_by_serial<br>│   ├── safessl-easyrsa.cnf<br>│   ├── serial<br>│   └── serial.old<br>├── vars<br>└── x509-types<br>    ├── ca<br>    ├── <span class="hljs-keyword">client</span><br>    ├── code-signing<br>    ├── COMMON<br>    ├── email<br>    ├── kdc<br>    ├── <span class="hljs-keyword">server</span><br>    └── serverClient<br></code></pre></td></tr></table></figure><p>⑥创建客户端证书申请</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-meta">#为了快捷，目录仍使用服务器端目录（正常最好设置客户端目录，进行区分）</span><br>[root@openvpn-<span class="hljs-keyword">server</span> ~]<span class="hljs-meta"># cd /data/easy-rsa</span><br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># ./easyrsa gen-req magekecheng  nopass</span><br>req: /data/easy-rsa/pki/reqs/magekecheng.req<br>key: /data/easy-rsa/pki/<span class="hljs-keyword">private</span>/magekecheng.key<br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># tree</span><br>.<br>├── easyrsa<br>├── openssl-easyrsa.cnf<br>├── pki<br>│   ├── ca.crt<br>│   ├── certs_by_serial<br>│   │   └── <span class="hljs-number">746</span>A3EC66A04B10F5BEAABC519143A3F.pem<br>│   ├── dh.pem<br>│   ├── <span class="hljs-keyword">index</span>.txt<br>│   ├── <span class="hljs-keyword">index</span>.txt.attr<br>│   ├── <span class="hljs-keyword">index</span>.txt.attr.old<br>│   ├── <span class="hljs-keyword">index</span>.txt.old<br>│   ├── issued<br>│   │   └── <span class="hljs-keyword">server</span>.crt<br>│   ├── openssl-easyrsa.cnf<br>│   ├── <span class="hljs-keyword">private</span><br>│   │   ├── ca.key<br>│   │   ├── magekecheng.key<br>│   │   └── <span class="hljs-keyword">server</span>.key<br>│   ├── renewed<br>│   │   ├── certs_by_serial<br>│   │   ├── private_by_serial<br>│   │   └── reqs_by_serial<br>│   ├── reqs<br>│   │   ├── magekecheng.req<br>│   │   └── <span class="hljs-keyword">server</span>.req<br>│   ├── revoked<br>│   │   ├── certs_by_serial<br>│   │   ├── private_by_serial<br>│   │   └── reqs_by_serial<br>│   ├── safessl-easyrsa.cnf<br>│   ├── serial<br>│   └── serial.old<br>├── vars<br>└── x509-types<br>    ├── ca<br>    ├── <span class="hljs-keyword">client</span><br>    ├── code-signing<br>    ├── COMMON<br>    ├── email<br>    ├── kdc<br>    ├── <span class="hljs-keyword">server</span><br>    └── serverClient<br></code></pre></td></tr></table></figure><p>⑦给客户端颁发证书</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-meta">#一般用户的证书有效期为3-6个月，所以在颁发证书前，需要设置有效期</span><br>[root@openvpn-<span class="hljs-keyword">server</span> ~]<span class="hljs-meta"># cd /data/easy-rsa</span><br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># vim vars</span><br>set_var EASYRSA_CERT_EXPIRE     <span class="hljs-number">180</span>               <span class="hljs-meta">#时间有效期180天</span><br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># ./easyrsa sign client magekecheng</span><br>Certificate created at: /data/easy-rsa/pki/issued/magekecheng.crt <span class="hljs-meta">#客户的证书</span><br>[root@openvpn-<span class="hljs-keyword">server</span> easy-rsa]<span class="hljs-meta"># tree</span><br>.<br>├── easyrsa<br>├── openssl-easyrsa.cnf<br>├── pki<br>│   ├── ca.crt<br>│   ├── certs_by_serial<br>│   │   ├── <span class="hljs-number">746</span>A3EC66A04B10F5BEAABC519143A3F.pem<br>│   │   └── <span class="hljs-number">998</span>A52A40FE7B270749799A0A0F968A2.pem<br>│   ├── dh.pem<br>│   ├── <span class="hljs-keyword">index</span>.txt<br>│   ├── <span class="hljs-keyword">index</span>.txt.attr<br>│   ├── <span class="hljs-keyword">index</span>.txt.attr.old<br>│   ├── <span class="hljs-keyword">index</span>.txt.old<br>│   ├── issued<br>│   │   ├── magekecheng.crt                             <span class="hljs-meta">#客户端的证书</span><br>│   │   └── <span class="hljs-keyword">server</span>.crt<br>│   ├── openssl-easyrsa.cnf<br>│   ├── <span class="hljs-keyword">private</span><br>│   │   ├── ca.key<br>│   │   ├── magekecheng.key<br>│   │   └── <span class="hljs-keyword">server</span>.key<br>│   ├── renewed<br>│   │   ├── certs_by_serial<br>│   │   ├── private_by_serial<br>│   │   └── reqs_by_serial<br>│   ├── reqs<br>│   │   ├── magekecheng.req<br>│   │   └── <span class="hljs-keyword">server</span>.req<br>│   ├── revoked<br>│   │   ├── certs_by_serial<br>│   │   ├── private_by_serial<br>│   │   └── reqs_by_serial<br>│   ├── safessl-easyrsa.cnf<br>│   ├── serial<br>│   └── serial.old<br>├── vars<br>└── x509-types<br>    ├── ca<br>    ├── <span class="hljs-keyword">client</span><br>    ├── code-signing<br>    ├── COMMON<br>    ├── email<br>    ├── kdc<br>    ├── <span class="hljs-keyword">server</span><br>    └── serverClient<br></code></pre></td></tr></table></figure><p>⑧将CA和服务器证书相关文件复制到服务器相应的目录</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@openvpn-server easy-rsa]# mkdir <span class="hljs-regexp">/etc/</span>openvpn/certs<br>[root@openvpn-server easy-rsa]# cp pki<span class="hljs-regexp">/ca.crt pki/</span>dh.pem pki<span class="hljs-regexp">/issued/</span>server.crt pki<span class="hljs-regexp">/private/</span>server.key <span class="hljs-regexp">/etc/</span>openvpn<span class="hljs-regexp">/certs    #将四个文件拷贝到/</span>etc<span class="hljs-regexp">/openvpn/</span>certs<br>[root@openvpn-server easy-rsa]# ls <span class="hljs-regexp">/etc/</span>openvpn/certs<br>ca.crt  dh.pem  server.crt  server.key<br></code></pre></td></tr></table></figure><p>⑨将客户端私钥与证书相关文件复制到服务器相关的目录</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@openvpn-server easy-rsa]# mkdir <span class="hljs-regexp">/etc/</span>openvpn<span class="hljs-regexp">/client/m</span>agekecheng/<br>[root@openvpn-server easy-rsa]# cp pki<span class="hljs-regexp">/ca.crt pki/i</span>ssued<span class="hljs-regexp">/magekecheng.crt pki/</span><span class="hljs-keyword">private</span><span class="hljs-regexp">/magekecheng.key  /</span>etc<span class="hljs-regexp">/openvpn/</span>client<span class="hljs-regexp">/magekecheng/</span><br>#将三个文件拷贝到<span class="hljs-regexp">/etc/</span>openvpn<span class="hljs-regexp">/client/m</span>agekecheng/<br>[root@openvpn-server easy-rsa]# ls <span class="hljs-regexp">/etc/</span>openvpn<span class="hljs-regexp">/client/m</span>agekecheng/<br>ca.crt  magekecheng.crt  magekecheng.key<br></code></pre></td></tr></table></figure><h4 id="4、修改OpenVPN服务器配置文件"><a href="#4、修改OpenVPN服务器配置文件" class="headerlink" title="4、修改OpenVPN服务器配置文件"></a><strong>4、修改OpenVPN服务器配置文件</strong></h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@openvpn-server openvpn]<span class="hljs-comment"># vim /etc/openvpn/server.conf</span><br>port <span class="hljs-number">1194</span> <span class="hljs-comment">#注意阿里云openVPN设置有防火墙，需要在阿里云的安全组里添加允许1194端口访问，设置如下图</span><br>proto tcp <span class="hljs-comment">#此处也可是是udp，但tcp协议更安全稳定</span><br>dev tun   <span class="hljs-comment">#openVPN会自动生成一个网卡，设备名叫tun</span><br>ca <span class="hljs-regexp">/etc/</span>openvpn<span class="hljs-regexp">/certs/</span>ca.crt    <span class="hljs-comment">#CA证书的存放路径</span><br>cert <span class="hljs-regexp">/etc/</span>openvpn<span class="hljs-regexp">/certs/</span>server.crt <span class="hljs-comment">#服务器证书的存放路径</span><br>key <span class="hljs-regexp">/etc/</span>openvpn<span class="hljs-regexp">/certs/</span>server.key  <span class="hljs-comment">#私钥文件路径</span><br>dh <span class="hljs-regexp">/etc/</span>openvpn<span class="hljs-regexp">/certs/</span>dh.pem<br>server <span class="hljs-number">10.8</span>.<span class="hljs-number">0.0</span> <span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span>      <span class="hljs-comment">#这个是客户连通openVPN后，openVPN分配给客户的地址段，到时候客户端会分配一个10.8.0.X/24的地址，openVPN会给自己tun 10.8.0.1/24这个地址</span><br>push <span class="hljs-string">&quot;route 172.30.0.0 255.255.255.0&quot;</span>  <span class="hljs-comment">#推送路由到客户端，只要访问这个地址段，就需要走vpn</span><br>keepalive <span class="hljs-number">10</span> <span class="hljs-number">120</span><br>cipher AES-<span class="hljs-number">256</span>-CBC                     <span class="hljs-comment">#加密算法</span><br>compress lz4-v2                        <span class="hljs-comment">#压缩</span><br>push <span class="hljs-string">&quot;compress lz4-v2&quot;</span><br>max-clients <span class="hljs-number">2048</span>                       <span class="hljs-comment">#设置最大允许连接数为2048</span><br>user openvpn                           <span class="hljs-comment">#安装openVPN包时自动创建了openVPN用户和组</span><br>group openvpn<br>status <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/openvpn/</span>openvpn-status.log   <span class="hljs-comment">#日志存放位置，需创建目录</span><br>log-append  <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/openvpn/</span>openvpn.log<br>verb <span class="hljs-number">3</span><br>mute <span class="hljs-number">20</span><br>:wq<br>[root@openvpn-server openvpn]<span class="hljs-comment"># mkdir /var/log/openvpn</span><br>[root@openvpn-server ~]<span class="hljs-comment"># chown openvpn.openvpn /var/log/openvpn</span><br>[root@openvpn-server ~]<span class="hljs-comment"># ll -d /var/log/openvpn</span><br>drwxr-xr-x <span class="hljs-number">2</span> openvpn openvpn <span class="hljs-number">6</span> Oct <span class="hljs-number">27</span> <span class="hljs-number">12</span>:<span class="hljs-number">50</span> <span class="hljs-regexp">/var/</span>log/openvpn<br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20221027123428505.png" alt="image-20221027123428505"></a></p><h4 id="5、启动openvpn"><a href="#5、启动openvpn" class="headerlink" title="5、启动openvpn"></a><strong>5、启动openvpn</strong></h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#centos7及以前版本包含openvpn的server文件，但新版本没有，需要自己添加此文件</span><br>[root@openvpn-server ~]<span class="hljs-comment"># vim  /usr/lib/systemd/system/openvpn@.service  #新建并编辑</span><br>[Unit]<br>Description=OpenVPN Robust And Highly Flexible Tunneling Application On %I<br>After=network.target<br><br>[Service]<br>Type=notify<br>PrivateTmp=true<br>ExecStart=<span class="hljs-regexp">/usr/s</span>bin/openvpn --cd /etc/openvpn/ --config %i.conf<br><br>[Install]<br>WantedBy=multi-user.target<br>:w<span class="hljs-string">q</span><br><span class="hljs-string">[root@openvpn-server openvpn]</span><span class="hljs-comment"># systemctl daemon-reload</span><br>[root@openvpn-server openvpn]<span class="hljs-comment"># systemctl enable --now openvpn@server</span><br></code></pre></td></tr></table></figure><h4 id="6、准备OpenVPN客户端配置文件"><a href="#6、准备OpenVPN客户端配置文件" class="headerlink" title="6、准备OpenVPN客户端配置文件"></a><strong>6、准备OpenVPN客户端配置文件</strong></h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@openvpn-server openvpn]<span class="hljs-comment"># vim /etc/openvpn/client/magekecheng/client.ovpn</span><br>client<br>dev tun<br>proto tcp<br>remote <span class="hljs-number">47.92</span>.<span class="hljs-number">232.42</span>  <span class="hljs-number">1194</span>                 <span class="hljs-comment">#openvpn的公网地址或者FQDN</span><br>resolv-retry infinite<br>nobind<br><span class="hljs-comment">#persist-key</span><br><span class="hljs-comment">#persist-tun</span><br>ca ca.crt<br>cert magekecheng.crt <br>key magekecheng.key<br>remote-cert-tls server<br><span class="hljs-comment">#tls-auth ta.key 1</span><br>cipher AES-<span class="hljs-number">256</span>-CBC<br>verb <span class="hljs-number">3</span>                                  <span class="hljs-comment">#此值不能随意指定,否则无法通信，需与服务器端相同</span><br>compress lz4-v2                         <span class="hljs-comment">#此项在OpenVPN2.4.X版本使用,需要和服务器端保持一致,如不指定,默认使用</span><br>comp-lz压缩<br>:w<span class="hljs-string">q</span><br><span class="hljs-string">[root@openvpn-server openvpn]</span><span class="hljs-comment"># cd /etc/openvpn/client/magekecheng</span><br>[root@openvpn-server magekecheng]<span class="hljs-comment"># ls      </span><br>ca.crt  client.ovpn  magekecheng.crt  magekecheng.key<br>[root@openvpn-server magekecheng]<span class="hljs-comment"># zip /root/magekecheng.zip *    #将目录下的所有文件压缩到/root/magekecheng.zip</span><br>[root@openvpn-server magekecheng]<span class="hljs-comment"># yum -y install lrzsz   #安装软件包</span><br>[root@openvpn-server magekecheng]<span class="hljs-comment"># sz /root/magekecheng.zip   #将压缩包下载到电脑上</span><br></code></pre></td></tr></table></figure><h4 id="7、实现OpenVPN客户端"><a href="#7、实现OpenVPN客户端" class="headerlink" title="7、实现OpenVPN客户端"></a><strong>7、实现OpenVPN客户端</strong></h4><h5 id="7-1、Windows配置部署OpenVPN客户端"><a href="#7-1、Windows配置部署OpenVPN客户端" class="headerlink" title="7.1、Windows配置部署OpenVPN客户端"></a><strong>7.1、Windows配置部署OpenVPN客户端</strong></h5><p>官方客户端下载地址：</p><p><a href="https://openvpn.net/community-downloads/">https://openvpn.net/community-downloads/</a></p><p>openvpn客户端安装过程：</p><p><a href=""><img src="第六周作业/image-20221027141414474.png" alt="image-20221027141414474" style="zoom:50%;" /></a></p><p><a href=""><img src="第六周作业/image-20221027141534917.png" alt="image-20221027141534917" style="zoom:50%;" /></a></p><p><a href=""><img src="第六周作业/image-20221027141816078.png" alt="image-20221027141816078" style="zoom:50%;" /></a></p><p>将下载的压缩包解压到此目录下</p><p><a href=""><img src="第六周作业/image-20221027142041109.png" alt="image-20221027142041109" style="zoom:50%;" /></a></p><p><a href=""><img src="第六周作业/image-20221027145850212.png" alt="image-20221027145850212" style="zoom:50%;" /></a></p><p>连接成功后，电脑自动获取地址（10.8.0.6）</p><p><a href=""><img src="第六周作业/image-20221027150107527.png" alt="image-20221027150107527" style="zoom:50%;" /></a></p><p>此时openvpn服务器也获取一个地址</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs pf">[root@openvpn-server magekecheng]<span class="hljs-comment"># ip a</span><br><span class="hljs-number">2</span>: eth0: <span class="hljs-variable">&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">1500</span> qdisc fq_codel <span class="hljs-keyword">state</span> UP <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> qlen <span class="hljs-number">1000</span><br>    link/ether <span class="hljs-number">00</span>:<span class="hljs-number">16</span>:<span class="hljs-number">3</span>e:<span class="hljs-number">21</span>:bc:<span class="hljs-number">7</span>f brd ff:ff:ff:ff:ff:ff<br>    <span class="hljs-keyword">inet</span> <span class="hljs-number">172.30</span>.<span class="hljs-number">0.1</span>/<span class="hljs-number">24</span> brd <span class="hljs-number">172.30</span>.<span class="hljs-number">0.255</span> scope <span class="hljs-keyword">global</span> dynamic noprefixroute eth0<br>       valid_lft <span class="hljs-number">315339583</span>sec preferred_lft <span class="hljs-number">315339583</span>sec<br>    <span class="hljs-keyword">inet6</span> fe80::<span class="hljs-number">216</span>:<span class="hljs-number">3</span>eff:fe21:bc7f/<span class="hljs-number">64</span> scope link <br>       valid_lft forever preferred_lft forever<br><span class="hljs-number">3</span>: tun0: <span class="hljs-variable">&lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">1500</span> qdisc fq_codel <span class="hljs-keyword">state</span> UNKNOWN <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> qlen <span class="hljs-number">100</span><br>    link/<span class="hljs-keyword">none</span> <br>    <span class="hljs-keyword">inet</span> <span class="hljs-number">10.8</span>.<span class="hljs-number">0.1</span> peer <span class="hljs-number">10.8</span>.<span class="hljs-number">0.2</span>/<span class="hljs-number">32</span> scope <span class="hljs-keyword">global</span> tun0<br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure><p>此时电脑就可以直接连接openvpn了</p><p><a href=""><img src="第六周作业/image-20221027150556332.png" alt="image-20221027150556332" style="zoom:50%;" /></a></p><h4 id="8、实现访问VPN服务器的内网主机"><a href="#8、实现访问VPN服务器的内网主机" class="headerlink" title="8、实现访问VPN服务器的内网主机"></a><strong>8、实现访问VPN服务器的内网主机</strong></h4><p>但需要注意的是此时仍无法连接到openvpn后面的机器</p><p><a href=""><img src="第六周作业/image-20221027152041768.png" alt="image-20221027152041768" style="zoom:50%;" /></a></p><p>因为openvpn接收到请求后发现地址不是自己，就把请求扔掉了，所以需要设置防火墙</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">#在服务器开启ip_forward转发功能<br><span class="hljs-selector-attr">[root@openvpn-server magekecheng]</span><span class="hljs-selector-id">#echo</span> net<span class="hljs-selector-class">.ipv4</span><span class="hljs-selector-class">.ip_forward</span> = <span class="hljs-number">1</span> &gt;&gt; /etc/sysctl<span class="hljs-selector-class">.conf</span> <br><span class="hljs-selector-attr">[root@openvpn-server magekecheng]</span><span class="hljs-selector-id">#sysctl</span> -<span class="hljs-selector-tag">p</span><br>net<span class="hljs-selector-class">.ipv4</span><span class="hljs-selector-class">.ip_forward</span> = <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>此时仍是ping不同，但是后面的地址收到请求，也回应了</p><p><a href=""><img src="image-20221027152437962.png" alt="image-20221027152437962"></a></p><p>此时ping不通，是因为双方的ip不在一个网段，回应时走的路由器（网关172.30.0.253），但路由器找不到地址</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-string">[root@web01 ~]</span># route -n<br>Kernel IP routing table<br>Destination     Gateway         Genmask         Flags Metric Ref    Use Iface<br><span class="hljs-number">0.0.0.0</span>         <span class="hljs-number">172</span>.<span class="hljs-number">30</span>.<span class="hljs-number">0</span>.<span class="hljs-number">253</span>    <span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>         UG    <span class="hljs-number">100</span>    <span class="hljs-number">0</span>        <span class="hljs-number">0</span> eth0<br><span class="hljs-number">172.30.0.0</span>      <span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>         <span class="hljs-number">255</span>.<span class="hljs-number">255</span>.<span class="hljs-number">255</span>.<span class="hljs-number">0</span>   U     <span class="hljs-number">100</span>    <span class="hljs-number">0</span>        <span class="hljs-number">0</span> eth0<br></code></pre></td></tr></table></figure><p>解决此问题的方法：①在web01机器上添加到10.8.0.0/24网段的路由</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#在内网每个主机上添加路由（阿里云服务器不支持修改路由）</span><br>[root<span class="hljs-symbol">@web01</span> ~]<span class="hljs-meta">#route add -net 10.8.0.0/24 gw 172.30.0.1</span><br></code></pre></td></tr></table></figure><p>②在OpenVPN服务器配置iptables规则</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@openvpn-<span class="hljs-keyword">server</span> magekecheng]# iptables -t nat -A POSTROUTING -s <span class="hljs-number">10.8</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span> ! -d <span class="hljs-number">10.8</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span> -j SNAT <span class="hljs-comment">--to-source 172.30.0.1</span><br>[root@openvpn-<span class="hljs-keyword">server</span> magekecheng]# iptables -t nat -vnL   #查看添加的规则<br>Chain PREROUTING (<span class="hljs-keyword">policy</span> ACCEPT <span class="hljs-number">0</span> packets, <span class="hljs-number">0</span> bytes)<br> pkts bytes target   prot opt <span class="hljs-keyword">in</span>    <span class="hljs-keyword">out</span>   source       destination      <br>Chain <span class="hljs-keyword">INPUT</span> (<span class="hljs-keyword">policy</span> ACCEPT <span class="hljs-number">0</span> packets, <span class="hljs-number">0</span> bytes)<br> pkts bytes target   prot opt <span class="hljs-keyword">in</span>    <span class="hljs-keyword">out</span>   source       destination         <br>Chain POSTROUTING (<span class="hljs-keyword">policy</span> ACCEPT <span class="hljs-number">0</span> packets, <span class="hljs-number">0</span> bytes)<br> pkts bytes target   prot opt <span class="hljs-keyword">in</span>    <span class="hljs-keyword">out</span>   source       destination         <br>    <span class="hljs-number">0</span>     <span class="hljs-number">0</span> SNAT    <span class="hljs-keyword">all</span>  <span class="hljs-comment">--  *      *    10.8.0.0/24  !10.8.0.0/24   to:172.30.0.1</span><br>Chain OUTPUT (<span class="hljs-keyword">policy</span> ACCEPT <span class="hljs-number">0</span> packets, <span class="hljs-number">0</span> bytes)<br> pkts bytes target   prot opt <span class="hljs-keyword">in</span>    <span class="hljs-keyword">out</span>  source        destination  <br></code></pre></td></tr></table></figure><p>此时就可以ping通了，直接访问网页了</p><p><a href=""><img src="第六周作业/image-20221027154741748.png" alt="image-20221027154741748" style="zoom:50%;" /></a></p><p><a href=""><img src="image-20221027154850834.png" alt="image-20221027154850834"></a></p><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>练习</title>
    <link href="/2022/09/27/%E7%BB%83%E4%B9%A0/"/>
    <url>/2022/09/27/%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="1、"><a href="#1、" class="headerlink" title="1、"></a>1、</h3><h3 id="2、"><a href="#2、" class="headerlink" title="2、"></a>2、</h3><h3 id="3、"><a href="#3、" class="headerlink" title="3、"></a>3、</h3><h3 id="4、"><a href="#4、" class="headerlink" title="4、"></a>4、</h3><h3 id="10、公司内部搭建自己的DNS服务器用来上网"><a href="#10、公司内部搭建自己的DNS服务器用来上网" class="headerlink" title="10、公司内部搭建自己的DNS服务器用来上网"></a>10、公司内部搭建自己的DNS服务器用来上网</h3><figure class="highlight perl"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></div></td><td class="code"><pre><code class="hljs perl">两台机器，其中一台做DNS服务器<br>[root@Rocky8 ~]<span class="hljs-comment">#dnf -y install bind bind-utils           #安装DNS</span><br>[root@Rocky8 ~]<span class="hljs-comment">#systemctl status named                   #查看DNS服务是否启动</span><br>[root@Rocky8 ~]<span class="hljs-comment">#systemctl enable --now named             #设置DNS为开机启动，且立即启动</span><br>[root@Rocky8 ~]<span class="hljs-comment">#vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br>DNS1=<span class="hljs-number">127.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>                                           <span class="hljs-comment">#将自己的机器设置为DNS</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky8 network-scripts]</span><span class="hljs-comment">#nmcli connection reload</span><br>[root@Rocky8 network-scripts]<span class="hljs-comment">#nmcli connection up eth0   #通过两步命令保存生效</span><br><span class="hljs-comment">#此时已经将此机器设置为DNS服务器了</span><br><br>[root@Centos7 ~]<span class="hljs-comment">#yum -y install bind-utils               #在另一台机器上安装DNS客户端</span><br>[root@Centos7 ~]<span class="hljs-comment">#vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br>DNS1=<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">128</span>                                   <span class="hljs-comment">#访问公司的DNS网址，并将其他DNS删除</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Centos7 ~]</span><span class="hljs-comment">#systemctl restart network</span><br>[root@Centos7 ~]<span class="hljs-comment">#host www.baidu.com</span><br>;; connection timed out; <span class="hljs-keyword">no</span> servers could be reached    <span class="hljs-comment">#表示无法连接DNS服务器</span><br><span class="hljs-comment">#说明自己设置的DNS器有限制</span><br><br>[root@Rocky8 ~]<span class="hljs-comment">#ss -ntlu                  #显示只有127.0.0.1（本机地址）机器在监听</span><br>Netid  State  Recv-Q   Send-Q   Local Address:Port   Peer Address:Port  Process<br> udp  UNCONN    <span class="hljs-number">0</span>        <span class="hljs-number">0</span>         <span class="hljs-number">127.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>:<span class="hljs-number">53</span>             <span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>:*<br>[root@Rocky8 ~]<span class="hljs-comment">#vim /etc/named.conf</span><br><span class="hljs-keyword">listen</span>-on port <span class="hljs-number">53</span> &#123; localhost;  &#125;;          <span class="hljs-comment">#将127.0.0.1改为localhost，localhost表示本机所有IP；或者将此行用//注释掉；或者在127.0.0.1；后面添加其他允许访问的IP地址</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky8 ~]</span><span class="hljs-comment">#named-checkconf             #此命令可以检查语法错误</span><br><span class="hljs-comment">#更改完文件后重新加载文件，或者用命令systemctl restart named重新启动DNS</span><br>[root@Rocky8 ~]<span class="hljs-comment">#rndc reload</span><br>server reload successful                   <span class="hljs-comment">#表示加载成功</span><br>[root@Rocky8 ~]<span class="hljs-comment">#ss -ntlu                   #本机所有IP已添加</span><br>Netid  State  Recv-Q   Send-Q   Local Address:Port   Peer Address:Port  Process<br> udp  UNCONN    <span class="hljs-number">0</span>        <span class="hljs-number">0</span>         <span class="hljs-number">127.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>:<span class="hljs-number">53</span>           <span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>:*<br> udp  UNCONN    <span class="hljs-number">0</span>        <span class="hljs-number">0</span>         <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">128</span>:<span class="hljs-number">53</span>          <span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>:*<br>[root@Centos7 ~]<span class="hljs-comment">#host www.baidu.com</span><br>Host www.baidu.com.zhang.org <span class="hljs-keyword">not</span> found: <span class="hljs-number">5</span>(REFUSED)        <span class="hljs-comment">#访问被拒绝</span><br>[root@Rocky8 ~]<span class="hljs-comment">#vim /etc/named.conf</span><br>//   allow-query     &#123; localhost; &#125;;       <span class="hljs-comment">#此行说的是只允许本机访问，需让其他机器也可以访问，方法有三种：①加//将此行注释，所有机器都可以访问②将localhost更改为any，所有机器都允许③在localhost;添加允许访问的IP地址</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky8 ~]</span><span class="hljs-comment">#named-checkconf             #此命令可以检查语法错误</span><br>[root@Rocky8 ~]<span class="hljs-comment">#rndc reload</span><br>[root@Centos7 ~]<span class="hljs-comment">#host www.baidu.com         #此时访问成功，dig命令更详细</span><br>www.baidu.com is an alias <span class="hljs-keyword">for</span> www.a.shifen.com.<br>www.a.shifen.com has address <span class="hljs-number">220.181</span>.<span class="hljs-number">38.150</span><br>www.a.shifen.com has address <span class="hljs-number">220.181</span>.<span class="hljs-number">38.149</span><br><span class="hljs-comment">#此时公司内的机器可以通过公司内自己搭建的DNS访问网络了</span><br><br></code></pre></td></tr></table></figure><h3 id="11、公司内部机器互相访问（正向解析）"><a href="#11、公司内部机器互相访问（正向解析）" class="headerlink" title="11、公司内部机器互相访问（正向解析）"></a>11、公司内部机器互相访问（正向解析）</h3><p>假设：公司内部都使用的是magedu.org域名，</p><p>​                   其他机器分别是<a href="http://www.magedu.org/">www.magedu.org</a>           10.0.0.184      (是一个对外提供服务的网站)</p><p>​                                              k8s.magedu.org</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@Rocky ~]<span class="hljs-comment">#yum -y install httpd              #10.0.0.184机器安装http</span><br>[root@Rocky ~]<span class="hljs-comment">#systemctl enable --now httpd ;echo hello &gt; /var/www/html/index.html        #开机启动且立即启动，并在网页上输入内容hello</span><br><span class="hljs-comment">#此时已经可以在浏览器上直接通过IP地址访问网页了</span><br><span class="hljs-comment">#下一步希望可以直接通过域名www.magedu.org直接访问网页需要搭建DNS</span><br>[root@Rocky8 ~]<span class="hljs-comment">#cd /var/named        #在公司搭建DNS的机器上添加解析域名的数据库文件</span><br>[root@Rocky8 named]<span class="hljs-comment">#ll               #可以看见数据库文件权限是640，账号是root组是named</span><br>-rw-r-----<span class="hljs-number"> 1 </span>root  named<span class="hljs-number"> 2253 </span>4月 <span class="hljs-number"> 13 </span>05:31 named.ca<br>-rw-r-----<span class="hljs-number"> 1 </span>root  named <span class="hljs-number"> 152 </span>4月 <span class="hljs-number"> 13 </span>05:31 named.empty<br>-rw-r-----<span class="hljs-number"> 1 </span>root  named <span class="hljs-number"> 152 </span>4月 <span class="hljs-number"> 13 </span>05:31 named.localhost<br>-rw-r-----<span class="hljs-number"> 1 </span>root  named <span class="hljs-number"> 168 </span>4月 <span class="hljs-number"> 13 </span>05:31 named.loopback<br>[root@Rocky8 named]<span class="hljs-comment">#touch magedu.org.zone        #创建magedu.org所属文件数据库</span><br>[root@Rocky8 named]<span class="hljs-comment">#chmod 640 magedu.org.zone    #修改文件权限</span><br>[root@Rocky8 named]<span class="hljs-comment">#chgrp named magedu.org.zone  #修改文件所属组</span><br>[root@Rocky8 named]<span class="hljs-comment">#ll magedu.org.zone</span><br>-rw-r-----<span class="hljs-number"> 1 </span>root named<span class="hljs-number"> 0 </span>9月 <span class="hljs-number"> 28 </span>09:43 magedu.org.zone<br>[root@Rocky8 named]<span class="hljs-comment">#vim magedu.org.zone          #编写数据库文件</span><br>$TTL 1D                                          <span class="hljs-comment">#记录的缓存周期TTL  一天</span><br>@         IN    SOA   master  admin.magedu.org. (<span class="hljs-number"> 0 </span> 1D  10M  1D  6H  )<br>magedu.org.     NS    master     <span class="hljs-comment">#magedu.org.可省略，NS名称解析服务器</span><br>                NS    slave1     <span class="hljs-comment">#slave1表示从DNS服务器</span><br>master          A     10.0.0.128   <span class="hljs-comment">#A表示是IPV4，AAAA表示为IPV6</span><br>slave1          A     10.0.0.216                                                 www             A     10.0.0.184<br>k8s             A     10.0.0.217<br><span class="hljs-comment">#@表示当前的域名（magedu.org.）两者可以互换（使用@更便捷，如果域名更改了，文件内不需要更改）；</span><br><span class="hljs-comment">#SOA类型必须在第一行（TTL除外）；</span><br><span class="hljs-comment">#master表示主DNS服务器的名称（全名称是master.magedu.org.）；</span><br><span class="hljs-comment">#admin.magedu.org.是邮箱（admin@magedu.org.）；</span><br><span class="hljs-comment">#0表示的版本号，更改一次文件版本号需增加1（版本号发生变化，主服务器推送到从服务器。另外从服务器固定时间间隔检测发现版本号发生变化时，从服务器拉取数据）；</span><br><span class="hljs-comment">#1D表示每隔1天从服务器拉去一次数据；</span><br><span class="hljs-comment">#10M表示第一次拉取失败后，每隔10分钟从新拉取一次直至成功；</span><br><span class="hljs-comment">#1D表示过期时间，1天时间从服务器联系不上主服务器后，从服务器也不再提供服务避免数据错误（主服务器可能已经更新数据了）；</span><br><span class="hljs-comment">#6H表示错误数据的缓存时间（访问错误网址时，将此错误网址缓存下来，下次访问直接反馈，减少时间）。[root@Rocky8 etc]#named-checkzone magedu.org /var/named/magedu.org.zone</span><br>zone magedu.org/IN: loaded serial 0<br><span class="hljs-symbol">OK</span>                                       <span class="hljs-comment">#检查语法是否错误，没有错误</span><br></code></pre></td></tr></table></figure><p> 配置好解析数据库文件后，但DNS无法识别，需要再编辑DNS配置文件                                             </p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@Rocky8 ~]<span class="hljs-comment">#vim /etc/named.conf          #编辑DNS配置文件，增加magedu.org</span><br>zone <span class="hljs-string">&quot;magedu.org&quot;</span> IN &#123;                                                                             <br>      type master;<br>      file <span class="hljs-string">&quot;magedu.org.zone&quot;</span>;<br>&#125;;                    <span class="hljs-comment">#IN可以省略不写</span><br><span class="hljs-comment">#或者可以直接将zone写到其他文件里，不用写到named.conf</span><br>[root@Rocky8 ~]<span class="hljs-comment">#vim /etc/named.rfc1912.zones</span><br>zone <span class="hljs-string">&quot;magedu.org&quot;</span>  &#123;                                                                             <br>      type master;<br>      file <span class="hljs-string">&quot;magedu.org.zone&quot;</span>;<br>&#125;;<br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky8 ~]</span><span class="hljs-comment">#vim /etc/named.conf         #编辑配置文件</span><br><span class="hljs-keyword">listen</span>-on port <span class="hljs-number">53</span> &#123; localhost;  &#125;;          <span class="hljs-comment">#将127.0.0.1改为localhost，localhost表示本机所有IP；或者将此行用//注释掉；或者在127.0.0.1；后面添加其他允许访问的IP地址</span><br>//   allow-query     &#123; localhost; &#125;;       <span class="hljs-comment">#此行说的是只允许本机访问，需让其他机器也可以访问，方法有三种：①加//将此行注释，所有机器都可以访问②将localhost更改为any，所有机器都允许③在localhost;添加允许访问的IP地址</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky8 etc]</span><span class="hljs-comment">#named-checkconf             #检查DNS配置文件的语法是否错误</span><br>[root@Rocky8 etc]<span class="hljs-comment">#rndc reload</span><br>server reload successful                      <span class="hljs-comment">#重新加载数据，加载成功</span><br>[root@Centos7 ~]<span class="hljs-comment">#host www.magedu.org</span><br>www.magedu.org has address <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span>         <span class="hljs-comment">#此时其他机器就可以访问到了</span><br></code></pre></td></tr></table></figure><p>此时用浏览器访问<a href="http://www.magedu.org,无法访问/">www.magedu.org，无法访问</a></p><p><a href=""><img src="image-20220928111609509.png" alt="image-20220928111609509"></a></p><p>无法访问是因为windows的DNS没有指向10.0.0.128，所以不成功，需更改其DNS</p><p><a href=""><img src="image-20220928112113407.png" alt="image-20220928112113407"></a></p><p>此时可以查看是否可以访问</p><p>方法1直接浏览器访问</p><p>方法2使用管理员命令提示符查找：nslookup <a href="http://www.magedu.org/">www.magedu.org</a></p><p>如果访问不成功说明有其他DNS，需更改其他网络的DNS</p><p><a href=""><img src="image-20220928112950256.png" alt="image-20220928112950256"></a></p><h3 id="12、公司内部机器互相访问（反向解析）"><a href="#12、公司内部机器互相访问（反向解析）" class="headerlink" title="12、公司内部机器互相访问（反向解析）"></a>12、公司内部机器互相访问（反向解析）</h3><p>把IP地址解析成网址         10.0.0.184     –&gt;   <a href="http://www.magedu.org/">www.magedu.org</a></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">   <span class="hljs-number">10.0</span>.<span class="hljs-number">0.184</span>                 --&gt;   www<span class="hljs-selector-class">.magedu</span><span class="hljs-selector-class">.org</span><br>   <span class="hljs-number">10.0</span>.<span class="hljs-number">0.217</span>                 --&gt;   k8s<span class="hljs-selector-class">.magedu</span><span class="hljs-selector-class">.org</span><br>即 <span class="hljs-number">184.0</span>.<span class="hljs-number">0.10</span><span class="hljs-selector-class">.in-addr</span><span class="hljs-selector-class">.arpa</span>.   --&gt;   www<span class="hljs-selector-class">.magedu</span><span class="hljs-selector-class">.org</span><br>   <span class="hljs-number">217.0</span>.<span class="hljs-number">0.10</span><span class="hljs-selector-class">.in-addr</span><span class="hljs-selector-class">.arpa</span>.   --&gt;   k8s<span class="hljs-selector-class">.magedu</span>.org<br></code></pre></td></tr></table></figure><p>编辑配置文件和解析数据库</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@Rocky8 ~]<span class="hljs-comment">#vim /etc/named.rfc1912.zones         #编辑配置文件</span><br>zone <span class="hljs-string">&quot;0.0.10.in-addr.arpa&quot;</span> &#123;<br>        type master;<br>        file <span class="hljs-string">&quot;10.0.0.zone&quot;</span>;<br>&#125;;<br>:w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky8 ~]</span><span class="hljs-comment">#vim /etc/named.conf</span><br><span class="hljs-keyword">listen</span>-on port <span class="hljs-number">53</span> &#123; localhost;  &#125;;          <span class="hljs-comment">#将127.0.0.1改为localhost，localhost表示本机所有IP；或者将此行用//注释掉；或者在127.0.0.1；后面添加其他允许访问的IP地址</span><br>//   allow-query     &#123; localhost; &#125;;       <span class="hljs-comment">#此行说的是只允许本机访问，需让其他机器也可以访问，方法有三种：①加//将此行注释，所有机器都可以访问②将localhost更改为any，所有机器都允许③在localhost;添加允许访问的IP地址</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky8 ~]</span><span class="hljs-comment">#named-checkconf                      #检查语法错误</span><br>[root@Rocky8 ~]<span class="hljs-comment">#cd /var/named</span><br>[root@Rocky8 named]<span class="hljs-comment">#vim 10.0.0.zone                  #添加解析数据库</span><br>$TTL <span class="hljs-number">1</span>D<br>@         IN    SOA   master  admin.magedu.org ( <span class="hljs-number">3</span>  <span class="hljs-number">1</span>D  <span class="hljs-number">10</span>M  <span class="hljs-number">1</span>D  <span class="hljs-number">6</span>H  )<br>                NS    master<br>master          A     <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">128</span><br><span class="hljs-number">184</span>             PTR   www.magedu.org.<br><span class="hljs-number">217</span>             PTR   k8s.magedu.org.<br>:w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky8 named]</span><span class="hljs-comment">#chmod 640 10.0.0.zone            #修改权限</span><br>[root@Rocky8 named]<span class="hljs-comment">#chgrp named 10.0.0.zone          #修改所属组</span><br>[root@Rocky8 named]<span class="hljs-comment">#named-checkzone 0.0.10.in-addr.arpa /var/named/10.0.0.zone</span><br>zone <span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">10</span>.in-addr.arpa/IN: loaded serial <span class="hljs-number">3</span><br>OK                                                   <span class="hljs-comment">#检查语法是否有误，语法正确</span><br>[root@Rocky8 named]<span class="hljs-comment">#rndc reload</span><br>server reload successful                             <span class="hljs-comment">#重新加载数据，成功加载</span><br>[root@Centos7 ~]<span class="hljs-comment">#dig -t ptr 184.0.0.10.in-addr.arpa  #用其他机器访问成功</span><br>;; ANSWER SECTION:<br><span class="hljs-number">184.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">10</span>.in-addr.arpa. <span class="hljs-number">86400</span>INPTRwww.magedu.org.<br><span class="hljs-comment">#或者用以下两种命令访问</span><br>[root@Centos7 ~]<span class="hljs-comment">#dig -x 10.0.0.184                   #此命令更简洁</span><br>;; ANSWER SECTION:<br><span class="hljs-number">184.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">10</span>.in-addr.arpa. <span class="hljs-number">86400</span>INPTRwww.magedu.org.<br>[root@Centos7 ~]<span class="hljs-comment">#host 10.0.0.184                     #此命令更简洁</span><br><span class="hljs-number">184.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">10</span>.in-addr.arpa domain name pointer www.magedu.org.<br></code></pre></td></tr></table></figure><h3 id="13、搭建从DNS服务器"><a href="#13、搭建从DNS服务器" class="headerlink" title="13、搭建从DNS服务器"></a>13、搭建从DNS服务器</h3><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span>当从服务器<br>[root@Rocky ~]<span class="hljs-comment">#yum -y install bind                 #安装DNS服务器</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /etc/named.conf                 #编辑配置文件</span><br>//      <span class="hljs-keyword">listen</span>-on port <span class="hljs-number">53</span> &#123; <span class="hljs-number">127.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>; &#125;;<br><span class="hljs-regexp">//</span>      allow-query     &#123; localhost; &#125;;<br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky ~]</span><span class="hljs-comment">#vim /etc/named.rfc1912.zones        #配置文件里添加以下内容</span><br>zone <span class="hljs-string">&quot;magedu.org&quot;</span> &#123;<br>      type slave;<br>      master &#123;<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">128</span>;&#125;;<br>      file <span class="hljs-string">&quot;slaves/magedu.org.zone.slave&quot;</span>;<br>&#125;;                                                 <span class="hljs-comment">#有这个文件夹（从服务器）：slaves/</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky ~]</span><span class="hljs-comment">#named-checkconf</span><br>[root@Rocky ~]<span class="hljs-comment">#systemctl enable --now named    #启动服务，就把magedu.org.zone.slave文件复制过来了</span><br>[root@Rocky ~]<span class="hljs-comment">#ls /var/named/slaves/ -l</span><br>total <span class="hljs-number">4</span><br>-rw-r--r-- <span class="hljs-number">1</span> named named <span class="hljs-number">374</span> Sep <span class="hljs-number">28</span> <span class="hljs-number">18</span>:<span class="hljs-number">32</span> magedu.org.zone.slave<br></code></pre></td></tr></table></figure><p>此时我们可以从其他机器从此从服务器访问了</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@Centos7 ~]<span class="hljs-comment">#vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br>DNS2=<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span>                              <span class="hljs-comment">#添加此DNS</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Centos7 ~]</span><span class="hljs-comment">#systemctl restart network   #重新启动</span><br>[root@Rocky8 named]<span class="hljs-comment">#systemctl stop named     #先将主服务器关闭</span><br>[root@Centos7 ~]<span class="hljs-comment">#dig www.magedu.org</span><br>;; ANSWER SECTION:<br>www.magedu.org.<span class="hljs-number">86400</span>INA<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span><br>;; SERVER: <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span><span class="hljs-comment">#53(10.0.0.184)</span><br></code></pre></td></tr></table></figure><p>但是如果主服务器发生变化时，从服务器接收不到，需在主服务器进行以下设置</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@Rocky8 named]<span class="hljs-comment">#systemctl start named     #前面刚关闭了，需开启</span><br>[root@Rocky8 named]<span class="hljs-comment">#vim /var/named/magedu.org.zone</span><br>                NS    slave1<br>slave1          A     <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span>              <span class="hljs-comment">#在主服务器里面增加从服务器的地址（没有地址，主服务器不知道推送到哪）</span><br>www             A     <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">185</span>              <span class="hljs-comment">#将184改为185</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky8 named]</span><span class="hljs-comment">#named-checkzone magedu.org /var/named/magedu.org.zone</span><br>[root@Rocky8 named]<span class="hljs-comment">#rndc reload</span><br>[root@Centos7 ~]<span class="hljs-comment">#dig www.magedu.org @10.0.0.184</span><br>;; ANSWER SECTION:<br>www.magedu.org.<span class="hljs-number">86400</span>INA<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">185</span>     <span class="hljs-comment">#此时可以查到网址的IP地址已发生变化</span><br></code></pre></td></tr></table></figure><p>此时发现从服务器从主服务器拉取数据时不经过主服务器的允许，不安全（任何人都可以获取）。</p><p>而且根本不需要设置从节点就可以把数据获取，如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-attr">[root@Centos7 ~]</span><span class="hljs-selector-id">#dig</span> -t axfr magedu<span class="hljs-selector-class">.org</span><br>magedu<span class="hljs-selector-class">.org</span>.<span class="hljs-number">86400</span>INNSmaster<span class="hljs-selector-class">.magedu</span><span class="hljs-selector-class">.org</span>.<br>magedu<span class="hljs-selector-class">.org</span>.<span class="hljs-number">86400</span>INNSslave1<span class="hljs-selector-class">.magedu</span><span class="hljs-selector-class">.org</span>.<br>k8s<span class="hljs-selector-class">.magedu</span><span class="hljs-selector-class">.org</span>.<span class="hljs-number">86400</span>INA<span class="hljs-number">10.0</span>.<span class="hljs-number">0.217</span><br>master<span class="hljs-selector-class">.magedu</span><span class="hljs-selector-class">.org</span>.<span class="hljs-number">86400</span>INA<span class="hljs-number">10.0</span>.<span class="hljs-number">0.128</span><br>slave1<span class="hljs-selector-class">.magedu</span><span class="hljs-selector-class">.org</span>.<span class="hljs-number">86400</span>INA<span class="hljs-number">10.0</span>.<span class="hljs-number">0.184</span><br>www<span class="hljs-selector-class">.magedu</span><span class="hljs-selector-class">.org</span>.<span class="hljs-number">86400</span>INA<span class="hljs-number">10.0</span>.<span class="hljs-number">0.184</span><br></code></pre></td></tr></table></figure><p>为了安全需要在主服务器增加设置</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@Rocky8 ~]<span class="hljs-comment">#vim /etc/named.conf</span><br>//      allow-query     &#123; localhost; &#125;;<br>        allow-transfer  &#123;<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span>; &#125;;          <span class="hljs-comment">#增加此命令，表示只允许10.0.0.184获取数据</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky8 ~]</span><span class="hljs-comment">#named-checkconf</span><br>[root@Rocky8 ~]<span class="hljs-comment">#rndc reload</span><br>server reload successful<br>[root@Centos7 ~]<span class="hljs-comment">#dig -t axfr magedu.org</span><br>; &lt;&lt;&gt;&gt; DiG <span class="hljs-number">9.11</span>.<span class="hljs-number">4</span>-P2-RedHat-<span class="hljs-number">9.11</span>.<span class="hljs-number">4</span>-<span class="hljs-number">26</span>.P2.el7_9.<span class="hljs-number">9</span> &lt;&lt;&gt;&gt; -t axfr magedu.org<br>;; global options: +cmd<br>; Transfer failed.          <span class="hljs-comment">#其他机器已经无法在主服务器抓取了</span><br><br>[root@Centos7 ~]<span class="hljs-comment">#dig -t axfr magedu.org @10.0.0.184</span><br>magedu.org.<span class="hljs-number">86400</span>INNSmaster.magedu.org.<br>magedu.org.<span class="hljs-number">86400</span>INNSslave1.magedu.org.<br>k8s.magedu.org.<span class="hljs-number">86400</span>INA<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">217</span><br>master.magedu.org.<span class="hljs-number">86400</span>INA<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">128</span><br>slave1.magedu.org.<span class="hljs-number">86400</span>INA<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span><br>www.magedu.org.<span class="hljs-number">86400</span>INA<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span><br><span class="hljs-comment">#但其他机器可以从‘从服务器’抓取</span><br></code></pre></td></tr></table></figure><p>此时需要更改从服务器</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@Rocky ~]<span class="hljs-comment">#vim /etc/named.conf</span><br>//      allow-query     &#123; localhost; &#125;;<br>        allow-transfer  &#123;none; &#125;;                <span class="hljs-comment">#增加此命令，表示不允许任何人抓取数据</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky ~]</span><span class="hljs-comment">#named-checkconf</span><br>[root@Rocky ~]<span class="hljs-comment">#rndc reload</span><br>server reload successful<br><br>[root@Centos7 ~]<span class="hljs-comment">#dig -t axfr magedu.org @10.0.0.184</span><br>; &lt;&lt;&gt;&gt; DiG <span class="hljs-number">9.11</span>.<span class="hljs-number">4</span>-P2-RedHat-<span class="hljs-number">9.11</span>.<span class="hljs-number">4</span>-<span class="hljs-number">26</span>.P2.el7_9.<span class="hljs-number">9</span> &lt;&lt;&gt;&gt; -t axfr magedu.org @10.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span><br>;; global options: +cmd<br>; Transfer failed.<br><span class="hljs-comment">#从服务器也无法整体抓取数据</span><br><span class="hljs-comment">#如果知道完整的域名，还是可以获取IP地址的</span><br><br></code></pre></td></tr></table></figure><h3 id="14、泛域名解析（"><a href="#14、泛域名解析（" class="headerlink" title="14、泛域名解析（"></a>14、泛域名解析（</h3><p>比如客户输错网址，输入ww.magedu.org任何网页都打不开，无论是想访问<a href="http://www.magedu.org还是访问k8s.magedu.org,只要magedu.org输入没问题,我就强制让你访问www.magedu.org,此为泛域名解析./">www.magedu.org还是访问k8s.magedu.org，只要magedu.org输入没问题，我就强制让你访问www.magedu.org，此为泛域名解析。</a></p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@Rocky8 ~]<span class="hljs-comment">#cd /var/named/</span><br>[root@Rocky8 named]<span class="hljs-comment">#vim magedu.org.zone               #在DNS服务器端编辑数据库</span><br>*               A     <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span>                      <span class="hljs-comment">#增加此项，即可完成泛域名解析</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky8 named]</span><span class="hljs-comment">#rndc reload</span><br>server reload successful<br>[root@Centos7 ~]<span class="hljs-comment">#dig wwww.magedu.org</span><br>;; ANSWER SECTION:<br>wwww.magedu.org.<span class="hljs-number">86400</span>INA<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span><br></code></pre></td></tr></table></figure><p>有时候客户只输入magedu.org，此时也希望可以打开网站</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@Rocky8 named]<span class="hljs-comment">#vim magedu.org.zone               #在DNS服务器端编辑数据库</span><br>@               A     <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span>                      <span class="hljs-comment">#增加此项，即可完成泛域名解析</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky8 named]</span><span class="hljs-comment">#rndc reload</span><br>server reload successful<br>[root@Centos7 ~]<span class="hljs-comment">#dig magedu.org</span><br>;; ANSWER SECTION:<br>magedu.org.<span class="hljs-number">86400</span>INA<span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span><br></code></pre></td></tr></table></figure><p>15、子域委派</p><p>比如：本部是magedu.org.     访问本部网址：<a href="http://www.magedu.org/">www.magedu.org</a> .</p><p>要在深圳开分公司，需要派发子域可以设为sz.magedu.org.      访问分部网址：<a href="http://www.sz.magedu.org/">www.sz.magedu.org</a>.</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-comment">#首先在本部DNS设置解析数据库</span><br>[root@Rocky8 named]<span class="hljs-comment">#vim magedu.org.zone</span><br>sz              NS    slave2      <span class="hljs-comment">#sz.magedu.org.可省略为sz；slave2也可以写成其他名字</span><br>slave2          A     <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">216</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Rocky8 named]</span><span class="hljs-comment">#rndc reload</span><br>server reload successful<br><br><span class="hljs-comment">#然后设置分部的DNS</span><br>[root@Centos7 ~]<span class="hljs-comment">#yum -y install bind bind-utils        #安装DNS</span><br>[root@Centos7 ~]<span class="hljs-comment">#vim /etc/named.conf                   #编辑配置文件</span><br>//      <span class="hljs-keyword">listen</span>-on port <span class="hljs-number">53</span> &#123; <span class="hljs-number">127.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>; &#125;;<br><span class="hljs-regexp">//</span>      allow-query     &#123; localhost; &#125;;<br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Centos7 ~]</span><span class="hljs-comment">#vim /etc/named.rfc1912.zones         #编辑配置文件</span><br>zone <span class="hljs-string">&quot;sz.magedu.org&quot;</span> &#123;<br>       type master;<br>       file <span class="hljs-string">&quot;sz.magedu.org.zone&quot;</span>;<br>&#125;;                                               <span class="hljs-comment">#此DNS是分部的主DNS所以是master</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Centos7 ~]</span><span class="hljs-comment">#vim /var/named/sz.magedu.org.zone     #添加sz.mageu.org.zone数据库</span><br>$TTL <span class="hljs-number">1</span>D<br>@           IN   SOA  slave2  admin.sz.magedu.org. (  <span class="hljs-number">0</span>  <span class="hljs-number">1</span>H  <span class="hljs-number">10</span>M   <span class="hljs-number">1</span>D  <span class="hljs-number">2</span>H  )<br>                 NS   slave2<br>slave2           A    <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">216</span><br>www              A    <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">129</span><br>：w<span class="hljs-string">q</span><br><span class="hljs-string">[root@Centos7 ~]</span><span class="hljs-comment">#chmod 640 /var/named/sz.magedu.org.zone</span><br>[root@Centos7 ~]<span class="hljs-comment">#chgrp named /var/named/sz.magedu.org.zone</span><br><span class="hljs-comment">#配置完成后启动DNS服务</span><br>[root@Centos7 named]<span class="hljs-comment">#systemctl enable --now named</span><br><br></code></pre></td></tr></table></figure><h3 id="15、客户端是否有缓存"><a href="#15、客户端是否有缓存" class="headerlink" title="15、客户端是否有缓存"></a>15、客户端是否有缓存</h3><p>ubuntu客户端有缓存，</p><p>centos客户端没有缓存，centos需要单独安装缓存软件（如nscd软件）</p><h3 id="16、实现内网访问可以访问外网-反之禁止"><a href="#16、实现内网访问可以访问外网-反之禁止" class="headerlink" title="16、实现内网访问可以访问外网,反之禁止"></a>16、实现内网访问可以访问外网,反之禁止</h3><p>环境准备：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">外部网络：eth0 仅主机 192.168.10.216/24  GW：192.168.10.184<br>防火墙firewall：eth0 NAT模式 10.0.0.184/24<br>               eth1 仅主机  192.168.10.184/24<br>内部机器：eth0 NAT模式 10.0.0.217/24  GW:10.0.0.184<br><br>为了便于识别<br>[root<span class="hljs-meta">@Rocky</span> ~]<span class="hljs-comment">#hostnamectl set-hostname firewall</span><br>[root<span class="hljs-meta">@Rocky</span> ~]<span class="hljs-comment">#exit</span><br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#            #已经主机名改为firewall</span><br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#ip a</span><br>3: eth1: <span class="hljs-variable">&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt;</span> <br>    inet 192.168.10.131/24       <span class="hljs-comment">#IP地址不符，需更改</span><br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#nmcli connection</span><br>NAME                UUID                                  TYPE      DEVICE <br>eth0                d1dec401-b113-419c-af2b-e95046f315f5  ethernet  eth0   <br>Wired connection 2  99ed1792-006d-38f8-976b-1a356bd3efad  ethernet  eth1<br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#nmcli connection modify Wired\ connection\ 2 con-name eth1                          #更改名字为eth1</span><br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#nmcli connection modify eth1 ipv4.method manual ipv4.addresses 192.168.10.184/24    #更改IP地址</span><br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#nmcli connection reload</span><br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#nmcli connection up eth1     #两步命令加载生效</span><br><br>安装服务<br>[root<span class="hljs-meta">@centos</span> ~]<span class="hljs-comment">#yum -y install httpd      #192.168.10.216/24</span><br>[root<span class="hljs-meta">@Centos7</span> ~]<span class="hljs-comment">#hostname internet        #192.168.10.216/24</span><br>[root<span class="hljs-meta">@centos</span> ~]<span class="hljs-comment">#yum -y install httpd      #10.0.0.217/24</span><br>[root<span class="hljs-meta">@centos</span> ~]<span class="hljs-comment">#hostname lan              #10.0.0.217/24</span><br><br>[root<span class="hljs-meta">@internet</span> network-scripts]<span class="hljs-comment">#vim ifcfg-eth0</span><br>IPADDR=192.168.10.216<br>NETMASK=255.255.255.0<br>GATEWAY=192.168.10.184<br>[root<span class="hljs-meta">@Centos7</span> network-scripts]<span class="hljs-comment">#systemctl restart network</span><br></code></pre></td></tr></table></figure><p>准备实验</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@lan ~]<span class="hljs-comment">#ping 192.168.10.216        #发现ping不通</span><br>[root@firewall network-scripts]<span class="hljs-comment">#tcpdump -i eth0 -nn icmp   #发现防火墙收到包但没有回应</span><br>dropped privs to tcpdump<br>tcpdump: verbose output suppressed, <span class="hljs-keyword">use</span> -v <span class="hljs-keyword">or</span> -vv <span class="hljs-keyword">for</span> full protocol decode<br>listening on eth<span class="hljs-number">0</span>, <span class="hljs-keyword">link</span>-type EN10MB (Ethernet), capture size <span class="hljs-number">262144</span> bytes<br>09:<span class="hljs-number">16</span>:<span class="hljs-number">58.972265</span> IP <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">219</span> &gt; <span class="hljs-number">192.168</span>.<span class="hljs-number">10.216</span>: ICMP echo request, id <span class="hljs-number">6931</span>, seq <span class="hljs-number">206</span>, <span class="hljs-keyword">length</span> <span class="hljs-number">64</span><br>09:<span class="hljs-number">16</span>:<span class="hljs-number">59.972323</span> IP <span class="hljs-number">10.0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">219</span> &gt; <span class="hljs-number">192.168</span>.<span class="hljs-number">10.216</span>: ICMP echo request, id <span class="hljs-number">6931</span>, seq <span class="hljs-number">207</span>, <span class="hljs-keyword">length</span> <span class="hljs-number">64</span><br><br><span class="hljs-comment">#此时需要允许包通过，所以需要设置forward</span><br>[root@firewall ~]<span class="hljs-comment">#sysctl -a | grep ip_for</span><br>net.ipv4.ip_forward = <span class="hljs-number">0</span><br>[root@firewall ~]<span class="hljs-comment">#vim /etc/sysctl.conf</span><br>net.ipv4.ip_forward = <span class="hljs-number">1</span><br>[root@firewall ~]<span class="hljs-comment">#sysctl -p             #加载生效</span><br>net.ipv4.ip_forward = <span class="hljs-number">1</span><br><span class="hljs-comment">#此时已经可以ping通了</span><br><br><span class="hljs-comment">#但此时是双向可以ping，需要设置forward链的规则</span><br>[root@firewall ~]<span class="hljs-comment">#iptables -A FORWARD -j REJECT   #添加拒绝所有的访问，双方互不相通</span><br>[root@firewall ~]<span class="hljs-comment">#iptables -I FORWARD -s 10.0.0.0/24 ! -d 10.0.0.0/24 -m state --state NEW -j ACCEPT     #允许10.0.0.0/24网段给非此网段的发起请求（注意此时只是允许首次连接的发起请求允许通过，目标的回应不允许通过）</span><br>[root@firewall ~]<span class="hljs-comment">#iptables -I FORWARD -m state --state ESTABLISHED -j ACCEPT      #允许所有网段的二次响应的通过（即目标的回应允许通过）</span><br><span class="hljs-comment">#此时内部可以访问外部，但外部不能访问内部</span><br></code></pre></td></tr></table></figure><h3 id="17、内部大部分机器不允许外部访问，但各别机器允许访问"><a href="#17、内部大部分机器不允许外部访问，但各别机器允许访问" class="headerlink" title="17、内部大部分机器不允许外部访问，但各别机器允许访问"></a>17、内部大部分机器不允许外部访问，但各别机器允许访问</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">在上面的设置中，再添加一条规则即可<br>[root<span class="hljs-symbol">@firewall</span> ~]<span class="hljs-meta">#iptables -I FORWARD 3 ! -s 10.0.0.0/24 -d 10.0.0.129 -m state --state NEW -j ACCEPT</span><br><span class="hljs-meta">#即允许外部访问内部的10.0.0.129机器</span><br></code></pre></td></tr></table></figure><p><strong>需注意的是公司其实不采用此方法，因为公司内部的机器IP地址是私有IP地址，私有地址无法访问公有地址</strong></p><p><strong>私有IP地址：局域网使用，10.0.0.0/8    172.16.0.0/12    192.168.0.0/16</strong></p><p><strong>公有IP地址：互联网主机使用，全球唯一</strong></p><h3 id="18、为了实现内部私网地址与外部的公网地址互通"><a href="#18、为了实现内部私网地址与外部的公网地址互通" class="headerlink" title="18、为了实现内部私网地址与外部的公网地址互通"></a>18、为了实现内部私网地址与外部的公网地址互通</h3><p>此时采用的是NAT设置（只是用IP地址进行转换，因内部机器不是只有一台，回应无法识别，所以需要增加端口号的识别。端口号范围：0-65535）</p><p><a href=""><img src="image-20221008101309023.png" alt="image-20221008101309023"></a></p><p>环境准备</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">外部网络：eth0 仅主机 192.168.10.216/24<br>防火墙firewall：eth0 NAT模式 10.0.0.184/24<br>               eth1 仅主机  192.168.10.184/24<br>内部机器：eth0 NAT模式 10.0.0.217/24  GW:10.0.0.184<br><br>为了便于识别<br>[root<span class="hljs-meta">@Rocky</span> ~]<span class="hljs-comment">#hostnamectl set-hostname firewall</span><br>[root<span class="hljs-meta">@Rocky</span> ~]<span class="hljs-comment">#exit</span><br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#            #已经主机名改为firewall</span><br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#ip a</span><br>3: eth1: <span class="hljs-variable">&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt;</span> <br>    inet 192.168.10.131/24       <span class="hljs-comment">#IP地址不符，需更改</span><br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#nmcli connection</span><br>NAME                UUID                                  TYPE      DEVICE <br>eth0                d1dec401-b113-419c-af2b-e95046f315f5  ethernet  eth0   <br>Wired connection 2  99ed1792-006d-38f8-976b-1a356bd3efad  ethernet  eth1<br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#nmcli connection modify Wired\ connection\ 2 con-name eth1                          #更改名字为eth1</span><br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#nmcli connection modify eth1 ipv4.method manual ipv4.addresses 192.168.10.184/24    #更改IP地址</span><br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#nmcli connection reload</span><br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#nmcli connection up eth1     #两步命令加载生效</span><br><br>安装服务<br>[root<span class="hljs-meta">@centos</span> ~]<span class="hljs-comment">#yum -y install httpd      #192.168.10.216/24</span><br>[root<span class="hljs-meta">@Centos7</span> ~]<span class="hljs-comment">#hostname internet        #192.168.10.216/24</span><br>[root<span class="hljs-meta">@centos</span> ~]<span class="hljs-comment">#yum -y install httpd      #10.0.0.217/24</span><br>[root<span class="hljs-meta">@centos</span> ~]<span class="hljs-comment">#hostname lan              #10.0.0.217/24</span><br><br>[root<span class="hljs-meta">@internet</span> network-scripts]<span class="hljs-comment">#vim ifcfg-eth0   #不添加网关和子掩码</span><br>IPADDR=192.168.10.216<br>NETMASK=255.255.255.0<br>[root<span class="hljs-meta">@Centos7</span> network-scripts]<span class="hljs-comment">#systemctl restart network</span><br><br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#sysctl -a | grep ip_for</span><br>net.ipv4.ip_forward = 0<br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#vim /etc/sysctl.conf</span><br>net.ipv4.ip_forward = 1<br>[root<span class="hljs-meta">@firewall</span> ~]<span class="hljs-comment">#sysctl -p             #加载生效</span><br>net.ipv4.ip_forward = 1<br><span class="hljs-comment">#此时已经可以ping通了</span><br></code></pre></td></tr></table></figure><p>现在需要配置NAT表</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#设置SNAT</span><br>专线网络（需要开启ip_forward）<br>iptables -t nat -A POSTROUTING -s LocalNET ! -d LocalNet -j SNAT --<span class="hljs-keyword">to</span>-source<br>ExtIP<br>例如：[root<span class="hljs-symbol">@firewall</span> ~]<span class="hljs-meta">#iptables -t nat -A POSTROUTING -s 10.0.0.0/24 ! –d 10.0.0.0/24 -j SNAT --to-source 192.168.10.184    #添加此命令后就可以实现互通</span><br><br>拨号网络<br>iptables -t nat -A POSTROUTING -s LocalNET ! -d LocalNet -j MASQUERADE<br>例如：[root<span class="hljs-symbol">@firewall</span> ~]<span class="hljs-meta">#iptables -t nat -A POSTROUTING -s 10.0.0.0/24 ! -d 10.0.0.0/24 -j MASQUERADE   #添加此命令后就可以实现ping通外网</span><br><br><span class="hljs-meta">#可以查看自己所在的端口的公网地址</span><br>[root<span class="hljs-symbol">@firewall</span> ~]<span class="hljs-meta">#curl http://ipinfo.io/ip/</span><br><span class="hljs-number">106.117</span><span class="hljs-number">.126</span><span class="hljs-number">.159</span><br>[root<span class="hljs-symbol">@firewall</span> ~]<span class="hljs-meta">#curl http://ifconfig.me</span><br><span class="hljs-number">106.117</span><span class="hljs-number">.126</span><span class="hljs-number">.159</span><br>[root<span class="hljs-symbol">@firewall</span> ~]<span class="hljs-meta">#curl -L http://tool.lu/ip</span><br>当前IP: <span class="hljs-number">106.117</span><span class="hljs-number">.126</span><span class="hljs-number">.159</span><br>归属地: 中国 河北省 石家庄市<br><br><span class="hljs-meta">#设置DNAT</span><br>iptables -t nat -A PREROUTING -d ExtIP -p tcp|udp --dport PORT -j DNAT --<span class="hljs-keyword">to</span>-destination InterSeverIP[:PORT]<br>例如：iptables -t nat -A PREROUTING -d <span class="hljs-number">192.168</span><span class="hljs-number">.10</span><span class="hljs-number">.184</span> -p tcp --dport <span class="hljs-number">80</span> -j DNAT --<span class="hljs-keyword">to</span>-destination <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.217</span>:<span class="hljs-number">80</span><br><span class="hljs-meta">#此时外网访问就可以通过了（注意外网访问的依旧是公网地址，只不过防火墙通过转换把公网地址转换为了私有地址）</span><br><br><span class="hljs-meta">#如果私有地址中http的端口是8080而不是80时，如果管理防火墙的人员不能立即更改时，为了快速解决,可以自己在自己的机器上添加规则，此为REDIRECT 转发</span><br>例如：iptables -t nat -A PREROUTING -d <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.217</span> -p tcp --dport <span class="hljs-number">80</span> -j REDIRECT --<span class="hljs-keyword">to</span>-ports <span class="hljs-number">8080</span><br><span class="hljs-meta">#增加此规则后即可访问</span><br></code></pre></td></tr></table></figure><h3 id="19、搭建一个lamp-网站"><a href="#19、搭建一个lamp-网站" class="headerlink" title="19、搭建一个lamp 网站"></a>19、搭建一个lamp 网站</h3><p>lamp：表示linux  apache mysql php</p><p>(网上有开源的PHP项目，可以直接在网上下载一个wordpress)</p><h3 id="20、mysqldump备份还原实战案例"><a href="#20、mysqldump备份还原实战案例" class="headerlink" title="20、mysqldump备份还原实战案例"></a>20、mysqldump备份还原实战案例</h3><h3 id="21、mysql的高可用实现MHA实战案例（99-9-，基于主从复制）"><a href="#21、mysql的高可用实现MHA实战案例（99-9-，基于主从复制）" class="headerlink" title="21、mysql的高可用实现MHA实战案例（99.9%，基于主从复制）"></a>21、mysql的高可用实现MHA实战案例（99.9%，基于主从复制）</h3><h3 id="22、mysql的高可用，实战案例：Percona-XtraDB-Cluster（金融级99-999-，不需要主从复制，实现多主读写）"><a href="#22、mysql的高可用，实战案例：Percona-XtraDB-Cluster（金融级99-999-，不需要主从复制，实现多主读写）" class="headerlink" title="22、mysql的高可用，实战案例：Percona XtraDB Cluster（金融级99.999%，不需要主从复制，实现多主读写）"></a>22、mysql的高可用，实战案例：Percona XtraDB Cluster（金融级99.999%，不需要主从复制，实现多主读写）</h3><h3 id="23、实现将多个机器的日志都存储到一台mysql数据库中"><a href="#23、实现将多个机器的日志都存储到一台mysql数据库中" class="headerlink" title="23、实现将多个机器的日志都存储到一台mysql数据库中"></a>23、实现将多个机器的日志都存储到一台mysql数据库中</h3><h4 id="1-1、实现步骤"><a href="#1-1、实现步骤" class="headerlink" title="1.1、实现步骤"></a>1.1、实现步骤</h4><p>①利用网络日志功能将所有机器的日志数据传输到一台机器上</p><p>②利用rsyslog日志服务，将收集的日志记录与mysql数据库中</p><h4 id="1-2、环境准备"><a href="#1-2、环境准备" class="headerlink" title="1.2、环境准备"></a>1.2、环境准备</h4><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs armasm">三台主机<br>一台：正常机器（客户端），<span class="hljs-built_in">IP</span>：<span class="hljs-number">10</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">184</span><br>一台：rsyslog日志服务器，<span class="hljs-built_in">IP</span>：<span class="hljs-number">10</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">185</span><br>一台：mysql数据库服务器，<span class="hljs-built_in">IP</span>：<span class="hljs-number">10</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">186</span><br></code></pre></td></tr></table></figure><h4 id="1-3、实现步骤"><a href="#1-3、实现步骤" class="headerlink" title="1.3、实现步骤"></a>1.3、实现步骤</h4><h5 id="1-3-1、利用网络日志功能将10-0-0-184上的日志数据传输到10-0-0-185上"><a href="#1-3-1、利用网络日志功能将10-0-0-184上的日志数据传输到10-0-0-185上" class="headerlink" title="1.3.1、利用网络日志功能将10.0.0.184上的日志数据传输到10.0.0.185上"></a>1.3.1、利用网络日志功能将10.0.0.184上的日志数据传输到10.0.0.185上</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#在日志服务器上打开接受其他机器的远程端口</span><br>[root@rsyslog ~]<span class="hljs-comment">#vim /etc/rsyslog.conf</span><br><span class="hljs-comment">## MODULES ####</span><br>...省略...<br><span class="hljs-comment"># Provides UDP syslog reception</span><br><span class="hljs-comment"># for parameters see http://www.rsyslog.com/doc/imudp.html</span><br>module(load=<span class="hljs-string">&quot;imudp&quot;</span>) <span class="hljs-comment"># needs to be done just once     #局域网内一般使用UDP</span><br>input(<span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;imudp&quot;</span> port=<span class="hljs-string">&quot;514&quot;</span>)<br><br><span class="hljs-comment"># Provides TCP syslog reception</span><br><span class="hljs-comment"># for parameters see http://www.rsyslog.com/doc/imtcp.html</span><br>module(load=<span class="hljs-string">&quot;imtcp&quot;</span>) <span class="hljs-comment"># needs to be done just once     #跨局域网一般使用TCP</span><br>input(<span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;imtcp&quot;</span> port=<span class="hljs-string">&quot;514&quot;</span>)<br>:wq<br>[root@rsyslog ~]<span class="hljs-comment">#systemctl restart rsyslog           #重新启动服务</span><br>[root@rsyslog ~]<span class="hljs-comment">#ss -ntlu                #可看见UDP和TCP的514端口已开启</span><br>Netid  State   Recv-Q    Send-Q    Local Address:Port    Peer Address:Port  Process <br>udp   UNCONN   0          0          127.0.0.1:323        0.0.0.0:*                 <br>udp   UNCONN   0          0          0.0.0.0:514          0.0.0.0:*                 <br>udp   UNCONN   0          0          [::1]:323            [::]:*                    <br>udp   UNCONN   0          0          [::]:514             [::]:*                    <br>tcp   LISTEN   0          25         0.0.0.0:514          0.0.0.0:*                 <br>tcp   LISTEN   0          25         [::]:514             [::]:*   <br><br><span class="hljs-comment">#在客户端将日志发送到远程的TCP、UDP的日志服务器</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /etc/rsyslog.conf    #表示将所有日志级别在info及以上的都远程复制到10.0.0.185</span><br>*.info                              @@10.0.0.185:514     <span class="hljs-comment">#@@表示TCP</span><br>*.info                              @10.0.0.185:514      <span class="hljs-comment">#@表示UDP</span><br>:wq<br>[root@Rocky ~]<span class="hljs-comment">#systemctl restart rsyslog</span><br><br><span class="hljs-comment">#此时10.0.0.185就可以看到10.0.0.184的日志了</span><br><span class="hljs-comment">#用一台机器远程登录10.0.0.184，此时10.0.0.185就可以记录到登录信息</span><br>[root@Centos7 ~]<span class="hljs-comment">#ssh 10.0.0.184</span><br>[root@rsyslog ~]<span class="hljs-comment">#cat /var/log/secure       #可以看到远程登录信息</span><br>Nov  5 10:23:01 Rocky sshd[1908]: Accepted password <span class="hljs-keyword">for</span> root from 10.0.0.216 port 37884 ssh2<br>Nov  5 10:23:01 Rocky sshd[1908]: pam_unix(sshd:session): session opened <span class="hljs-keyword">for</span> user root by (uid=0)<br>Nov  5 10:23:01 Rocky sshd[1908]: Accepted password <span class="hljs-keyword">for</span> root from 10.0.0.216 port 37884 ssh2<br>Nov  5 10:23:01 Rocky sshd[1908]: pam_unix(sshd:session): session opened <span class="hljs-keyword">for</span> user root by (uid=0)<br></code></pre></td></tr></table></figure><h5 id="1-3-2、利用rsyslog日志服务，将收集的日志记录与mysql数据库中"><a href="#1-3-2、利用rsyslog日志服务，将收集的日志记录与mysql数据库中" class="headerlink" title="1.3.2、利用rsyslog日志服务，将收集的日志记录与mysql数据库中"></a>1.3.2、利用rsyslog日志服务，将收集的日志记录与mysql数据库中</h5><h6 id="1-3-2-1、在rsyslog服务器上安装连接mysql模块相关的程序包"><a href="#1-3-2-1、在rsyslog服务器上安装连接mysql模块相关的程序包" class="headerlink" title="1.3.2.1、在rsyslog服务器上安装连接mysql模块相关的程序包"></a>1.3.2.1、在rsyslog服务器上安装连接mysql模块相关的程序包</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@rsyslog ~]<span class="hljs-comment">#yum -y install rsyslog-mysql</span><br>[root@rsyslog ~]<span class="hljs-comment">#rpm -ql rsyslog-mysql</span><br>/usr/lib/.build-id<br>/usr/lib/.build-id/09<br>/usr/lib/.build-id/09/927b14f8ca6dfdeca2c2bbe1369b56e6470382<br>/usr/lib64/rsyslog/ommysql.so                         <span class="hljs-comment">#此模块是用来连接数据库的</span><br>/usr/share/doc/rsyslog/mysql-createDB.sql             <span class="hljs-comment">#一个脚本，是在数据库里用的</span><br><br>[root@rsyslog ~]<span class="hljs-comment">#cat /usr/share/doc/rsyslog/mysql-createDB.sql</span><br>CREATE DATABASE Syslog;                   <span class="hljs-comment">#创建数据库syslog</span><br><br><span class="hljs-comment">#将sql脚本复制到数据库服库上</span><br>[root@rsyslog ~]<span class="hljs-comment">#scp /usr/share/doc/rsyslog/mysql-createDB.sql 10.0.0.186:</span><br></code></pre></td></tr></table></figure><h6 id="1-3-2-2、准备mysql-server"><a href="#1-3-2-2、准备mysql-server" class="headerlink" title="1.3.2.2、准备mysql-server"></a>1.3.2.2、准备mysql-server</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@mysql ~]<span class="hljs-comment">#yum -y install mysql-server</span><br>[root@mysql ~]<span class="hljs-comment">#systemctl enable --now mysqld</span><br>[root@mysql ~]<span class="hljs-comment">#mysql</span><br>mysql&gt; create user rsyslog@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span> identified by <span class="hljs-string">&#x27;123456&#x27;</span>;<br>mysql&gt; grant all on Syslog.* to rsyslog@<span class="hljs-string">&#x27;10.0.0.%&#x27;</span>;<br>mysql&gt; <span class="hljs-built_in">source</span> /root/mysql-createDB.sql<br><br><span class="hljs-comment">#查看Syslog数据库已创建</span><br>mysql&gt; show databases;<br>+--------------------+<br>| Database           |<br>+--------------------+<br>| Syslog             |<br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| sys                |<br>+--------------------+<br><br><span class="hljs-comment">#数据库里的表也创建完成</span><br>mysql&gt; use Syslog<br>mysql&gt; show tables;<br>+------------------------+<br>| Tables_in_Syslog       |<br>+------------------------+<br>| SystemEvents           |<br>| SystemEventsProperties |<br>+------------------------+<br><br><span class="hljs-comment">#但此时两个表里没有内容</span><br></code></pre></td></tr></table></figure><h6 id="1-3-2-3、配置日志服务器将日志发送至指定数据库"><a href="#1-3-2-3、配置日志服务器将日志发送至指定数据库" class="headerlink" title="1.3.2.3、配置日志服务器将日志发送至指定数据库"></a>1.3.2.3、配置日志服务器将日志发送至指定数据库</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#配置rsyslog将日志保存到mysql中</span><br>[root@rsyslog ~]<span class="hljs-comment">#vim /etc/rsyslog.conf</span><br><span class="hljs-comment">####MODULES####</span><br><span class="hljs-comment">#在 MODULES 语言下面，如果是 CentOS 8 加下面行</span><br>module(load=<span class="hljs-string">&quot;ommysql&quot;</span>)<br><span class="hljs-comment">#在 MODULES 语言下面，如果是 CentOS 7，6 加下面行</span><br><span class="hljs-variable">$ModLoad</span> ommysql<br><br><span class="hljs-comment">#在RULES语句块加下面行的格式</span><br>*.info :ommysql:10.0.0.186,Syslog,rsyslog,123456<br><span class="hljs-comment">#                    模块名    数据库ip    数据库  用户     密码</span><br>:wq<br><br>[root@rsyslog ~]<span class="hljs-comment">#systemctl restart rsyslog</span><br></code></pre></td></tr></table></figure><h6 id="1-3-2-4、测试"><a href="#1-3-2-4、测试" class="headerlink" title="1.3.2.4、测试"></a>1.3.2.4、测试</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#客户端生成日志文件</span><br>[root@Rocky ~]<span class="hljs-comment">#logger &quot; I am zhang &quot;</span><br><br><span class="hljs-comment">#在数据库上可以查询到上面的测试日志</span><br>mysql&gt; select * from SystemEvents\G<br>*************************** 9. row ***************************<br>                ID: 9<br>        CustomerID: NULL<br>        ReceivedAt: 2022-11-05 11:09:07<br>DeviceReportedTime: 2022-11-05 11:09:07<br>          Facility: 1<br>          Priority: 5<br>          FromHost: Rocky<br>           Message:  I am zhang<br>        NTSeverity: NULL<br>        Importance: NULL<br>       EventSource: NULL<br>         EventUser: NULL<br>     EventCategory: NULL<br>           EventID: NULL<br>   EventBinaryData: NULL<br>      MaxAvailable: NULL<br>         CurrUsage: NULL<br>          MinUsage: NULL<br>          MaxUsage: NULL<br>        InfoUnitID: 1<br>         SysLogTag: root[1968]:<br>      EventLogType: NULL<br>   GenericFileName: NULL<br>          SystemID: NULL<br><br><span class="hljs-comment">#可以使用模糊搜索，直接找到具体位置</span><br>mysql&gt; select * from SystemEvents <span class="hljs-built_in">where</span> Message like <span class="hljs-string">&#x27;%am%&#x27;</span>\G<br></code></pre></td></tr></table></figure><h3 id="24、redis的编译安装"><a href="#24、redis的编译安装" class="headerlink" title="24、redis的编译安装"></a>24、redis的编译安装</h3><p>Redis 源码包官方下载链接：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>download.redis.io<span class="hljs-regexp">/releases/</span><br></code></pre></td></tr></table></figure><p>官方的安装方法：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>redis.io/download<br></code></pre></td></tr></table></figure><h4 id="1-1、编译安装"><a href="#1-1、编译安装" class="headerlink" title="1.1、编译安装"></a>1.1、编译安装</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#如果支持systemd需要安装下面包</span><br>[root@Rocky ~]<span class="hljs-comment">#yum -y install gcc jemalloc-devel systemd-devel</span><br>[root@ubuntu2004 ~]<span class="hljs-comment">#apt -y install make gcc libjemalloc-dev libsystemd-dev</span><br><br><span class="hljs-comment">#下载源码</span><br>[root@Rocky ~]<span class="hljs-comment">#wget http://download.redis.io/releases/redis-6.2.4.tar.gz</span><br>[root@Rocky ~]<span class="hljs-comment">#tar xf redis-6.2.7.tar.gz </span><br>[root@Rocky ~]<span class="hljs-comment">#ls</span><br>anaconda-ks.cfg  redis-6.2.7  redis-6.2.7.tar.gz<br><br><span class="hljs-comment">#编译安装</span><br>[root@Rocky ~]<span class="hljs-comment">#cd redis-6.2.7</span><br>[root@Rocky redis-6.2.7]<span class="hljs-comment">#mkdir /apps/redis -p    #创建软件安装路径</span><br>[root@Rocky redis-6.2.7]<span class="hljs-comment">#make -j 2 USE_SYSTEMD=yes PREFIX=/apps/redis install</span><br>[root@Rocky redis-6.2.7]<span class="hljs-comment">#tree /apps/redis       #查看已经编译生成文件了</span><br>/apps/redis<br>└── bin<br>    ├── redis-benchmark<br>    ├── redis-check-aof -&gt; redis-server<br>    ├── redis-check-rdb -&gt; redis-server<br>    ├── redis-cli<br>    ├── redis-sentinel -&gt; redis-server<br>    └── redis-server<br><br><span class="hljs-comment">#配置环境变量（为了访问时不用输入路径）</span><br>[root@Rocky redis-6.2.7]<span class="hljs-comment">#echo &#x27;PATH=/apps/redis/bin:$PATH&#x27; &gt; /etc/profile.d/redis.sh</span><br>[root@Rocky redis-6.2.7]<span class="hljs-comment">#. /etc/profile.d/redis.sh</span><br><br><span class="hljs-comment">#准备相关目录和配置文件</span><br>[root@Rocky redis-6.2.7]<span class="hljs-comment">#mkdir /apps/redis/&#123;etc,log,data,run&#125;</span><br>[root@Rocky redis-6.2.7]<span class="hljs-comment">#cp redis.conf /apps/redis/etc/</span><br><span class="hljs-comment">#此时就可以启动程序了</span><br><br><span class="hljs-comment">#但此时启动会有两个报警提示（不影响操作）</span><br><span class="hljs-comment"># WARNING（报警）: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span><br><span class="hljs-comment">#WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to take effect.</span><br>[root@Rocky redis-6.2.7]<span class="hljs-comment">#vim /etc/sysctl.conf</span><br>net.core.somaxconn = 511<br>vm.overcommit_memory = 1<br>:wq<br>[root@Rocky redis-6.2.7]<span class="hljs-comment">#sysctl -p                   #重新加载生效</span><br>net.core.somaxconn = 511<br>vm.overcommit_memory = 1<br><br><span class="hljs-comment">#此时输入命令redis-server /apps/redis/etc/redis.conf就可以启动，但此时是前台运行</span><br></code></pre></td></tr></table></figure><h4 id="1-2、创建Redis用户和设置数据目录权限"><a href="#1-2、创建Redis用户和设置数据目录权限" class="headerlink" title="1.2、创建Redis用户和设置数据目录权限"></a>1.2、创建Redis用户和设置数据目录权限</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky redis-6.2.7]<span class="hljs-comment">#useradd -s /sbin/nologin -r redis</span><br><span class="hljs-comment">#s:指定用户登入后所使用的shell类型  r：建立系统帐号</span><br><br><span class="hljs-comment">#设置目录权限</span><br>[root@Rocky redis-6.2.7]<span class="hljs-comment">#chown -R redis.redis /apps/redis/</span><br></code></pre></td></tr></table></figure><h4 id="1-3、创建Redis服务Service文件"><a href="#1-3、创建Redis服务Service文件" class="headerlink" title="1.3、创建Redis服务Service文件"></a>1.3、创建Redis服务Service文件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky redis-6.2.7]<span class="hljs-comment">#vim /lib/systemd/system/redis.service</span><br>[Unit]<br>Description=Redis persistent key-value database<br>After=network.target<br><br>[Service]<br>ExecStart=/apps/redis/bin/redis-server /apps/redis/etc/redis.conf --supervised<br>systemd<br>ExecStop=/bin/kill -s QUIT <span class="hljs-variable">$MAINPID</span><br>Type=notify <span class="hljs-comment">#如果支持systemd可以启用此行</span><br>User=redis<br>Group=redis<br>RuntimeDirectory=redis<br>RuntimeDirectoryMode=0755<br>LimitNOFILE=1000000   <span class="hljs-comment">#指定此值才支持更大的maxclients值</span><br><br>[Install]<br>WantedBy=multi-user.target<br>:wq<br>[root@Rocky redis-6.2.7]<span class="hljs-comment">#systemctl enable --now redis</span><br><br><span class="hljs-comment">#此时就可以后台运行了，但此时仍不能远程连接，</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /apps/redis/etc/redis.conf</span><br><span class="hljs-built_in">bind</span> 0.0.0.0  -::1                          <span class="hljs-comment">#将127.0.0.1改为0.0.0.0</span><br><span class="hljs-comment"># requirepass foobared                      #在此行下添加程序密码</span><br>requirepass 123456<br><span class="hljs-comment"># Note that you must specify a directory here, not a file name.</span><br><span class="hljs-built_in">dir</span> ./apps/redis/data/                     <span class="hljs-comment">#将数据存放位置改为/apps/redis/data/</span><br><span class="hljs-comment"># output for logging but daemonize, logs will be sent to /dev/null</span><br>logfile <span class="hljs-string">&quot;/apps/redis/log/redis-6379.log&quot;</span><br><span class="hljs-comment"># and should be used instead.</span><br>pidfile /apps/redis/run/redis_6379.pid  <span class="hljs-comment">#将/var/run/redis_6379.pid路径改为/apps/redis/run/redis_6379.pid</span><br>:wq<br>[root@Rocky ~]<span class="hljs-comment">#systemctl restart redis</span><br>[root@Rocky ~]<span class="hljs-comment">#ss -ntl</span><br>State     Recv-Q     Send-Q    Local Address:Port   Peer Address:Port       Process <br>LISTEN    0          128         0.0.0.0:22           0.0.0.0:*                     <br>LISTEN    0          511         0.0.0.0:6379         0.0.0.0:*                     <br>LISTEN    0          128         [::]:22              [::]:*                        <br>LISTEN    0          511         [::1]:6379           [::]:*                         <br>LISTEN    0          128         *:80                 *:*    <br></code></pre></td></tr></table></figure><h4 id="1-4、持久化"><a href="#1-4、持久化" class="headerlink" title="1.4、持久化"></a>1.4、持久化</h4><p>Redis支持两种数据持久化保存方法：<strong>RDB和AOF两种方法</strong></p><h5 id="1-4-1、实现RDB的方法"><a href="#1-4-1、实现RDB的方法" class="headerlink" title="1.4.1、实现RDB的方法"></a>1.4.1、实现RDB的方法</h5><p>①save: 同步,不推荐使用，使用主进程完成快照，因此会阻赛其它命令执行</p><p>②bgsave: 异步后台执行,不影响其它命令的执行，会开启独立的子进程，因此不会阻赛其它命令执行</p><p>③配置文件实现自动保存: 在配置文件中制定规则,自动执行bgsave</p><p>注意：RDB是以快照的形式自动备份（满足条件的情况下）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#redis-cli -a 123456</span><br>127.0.0.1:6379&gt; config get save<br>1) <span class="hljs-string">&quot;save&quot;</span><br>2) <span class="hljs-string">&quot;3600 1 300 100 60 10000&quot;</span><br><span class="hljs-comment">#3600秒发生过1次数据变化或者300秒发生过100次数据变化或者60秒发生过10000次变化，就进行快照备份</span><br></code></pre></td></tr></table></figure><h5 id="1-4-2、实现AOF的方法"><a href="#1-4-2、实现AOF的方法" class="headerlink" title="1.4.2、实现AOF的方法"></a>1.4.2、实现AOF的方法</h5><p>①在第一次启用AOF功能时，会做一次完全备份，后续将执行增量性备份，相当于完全数据备份+增量变化</p><p>②如果同时启用RDB和AOF,进行恢复时,默认AOF文件优先级高于RDB文件,即会使用AOF文件进行恢复</p><p>③在第一次开启AOF功能时,会自动备份所有数据到AOF文件中,后续只会记录数据的更新指令</p><p>注意: <strong>AOF模式默认是关闭的,第一次开启AOF后,并重启服务生效后,会因为AOF的优先级高于RDB,而AOF默认没有数据文件存在,从而导致所有数据丢失</strong></p><h6 id="1-4-2-1、在没有数据的情况下开启AOF"><a href="#1-4-2-1、在没有数据的情况下开启AOF" class="headerlink" title="1.4.2.1、在没有数据的情况下开启AOF"></a>1.4.2.1、在没有数据的情况下开启AOF</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#直接修改配置文件</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /apps/redis/etc/redis.conf</span><br>appendonly <span class="hljs-built_in">yes</span>                      <span class="hljs-comment">#将no改为yes</span><br>:wq<br>[root@Rocky ~]<span class="hljs-comment">#systemctl restart redis</span><br></code></pre></td></tr></table></figure><h6 id="1-4-2-2、在有RDB数据的情况下"><a href="#1-4-2-2、在有RDB数据的情况下" class="headerlink" title="1.4.2.2、在有RDB数据的情况下"></a>1.4.2.2、在有RDB数据的情况下</h6><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#首先临时启动AOF</span><br>[root@Rocky ~]<span class="hljs-comment">#redis-cli -a 123456</span><br>127.0.0.1:6379&gt; config <span class="hljs-built_in">set</span> appendonly <span class="hljs-built_in">yes</span>    <span class="hljs-comment">#自动触发AOF重写,会自动备份所有数据到AOF文件</span><br><span class="hljs-comment">#等数据备份完成后，在更改配置文件</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /apps/redis/etc/redis.conf</span><br>appendonly <span class="hljs-built_in">yes</span>                      <span class="hljs-comment">#将no改为yes</span><br></code></pre></td></tr></table></figure><h3 id="25、redis实现主从复制"><a href="#25、redis实现主从复制" class="headerlink" title="25、redis实现主从复制"></a>25、redis实现主从复制</h3><p>①Redis Server 默认为 master节点，如果要配置为从节点,需要指定master服务器的IP,端口及连接密码</p><p>②在从节点执行 REPLICAOF MASTER_IP PORT 指令可以启用主从同步复制功能,早期版本使用 SLAVEOF </p><p>指令</p><p><strong>#以下操作均在从节点操作</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky ~]<span class="hljs-comment">#redis-cli -a 123456</span><br>127.0.0.1:6379&gt; REPLICAOF MASTER_IP PORT <span class="hljs-comment">#新版推荐使用</span><br>127.0.0.1:6379&gt; SLAVEOF MasterIP Port   <span class="hljs-comment">#旧版使用，将被淘汰</span><br>127.0.0.1:6379&gt; CONFIG SET masterauth &lt;masterpass&gt;<br><br>例如：<br>[root@Rocky ~]<span class="hljs-comment">#redis-cli -a 123456</span><br>127.0.0.1:6379&gt; replicaof 10.0.0.184 6379    <span class="hljs-comment">#将此机设置为10.0.0.184（主服务器）的从服务器</span><br>127.0.0.1:6379&gt; config <span class="hljs-built_in">set</span> masterauth 123456 <span class="hljs-comment">#必须指定主服务器的登录密码</span><br><br><span class="hljs-comment">#为了永久生效，需更改配置文件</span><br>[root@Rocky ~]<span class="hljs-comment">#vim /apps/redis/etc/redis.conf</span><br><span class="hljs-comment"># replicaof &lt;masterip&gt; &lt;masterport&gt;</span><br>replicaof 10.0.0.184 6379<br>masterauth 123456<br>:wq<br><br><span class="hljs-comment">#此时就实现了主从复制</span><br></code></pre></td></tr></table></figure><h3 id="26、实现哨兵（sentinel）架构"><a href="#26、实现哨兵（sentinel）架构" class="headerlink" title="26、实现哨兵（sentinel）架构"></a>26、实现哨兵（sentinel）架构</h3><p><a href=""><img src="image-20221110184631270.png" alt="image-20221110184631270"></a></p><p><strong>环境配置：</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">master</span>：<span class="hljs-number">10.0.0.184</span><br><span class="hljs-attribute">slave1</span>：<span class="hljs-number">10.0.0.185</span><br><span class="hljs-attribute">slave2</span>：<span class="hljs-number">10.0.0.216</span><br></code></pre></td></tr></table></figure><h4 id="1-1、先实现主从复制"><a href="#1-1、先实现主从复制" class="headerlink" title="1.1、先实现主从复制"></a>1.1、先实现主从复制</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#主节点设置，便于后期转为从节点</span><br>[root@master ~]<span class="hljs-comment">#vim /apps/redis/etc/redis.conf</span><br>masterauth 123456<br>:wq<br>[root@master ~]<span class="hljs-comment">#systemctl restart redis</span><br><br><span class="hljs-comment">#从节点设置</span><br>[root@slave1 ~]<span class="hljs-comment">#vim /apps/redis/etc/redis.conf</span><br><span class="hljs-comment"># replicaof &lt;masterip&gt; &lt;masterport&gt;</span><br>replicaof 10.0.0.184 6379<br>masterauth 123456<br>:wq<br>[root@slave1 ~]<span class="hljs-comment">#systemctl restart redis</span><br>[root@slave2 ~]<span class="hljs-comment">#vim /apps/redis/etc/redis.conf</span><br><span class="hljs-comment"># replicaof &lt;masterip&gt; &lt;masterport&gt;</span><br>replicaof 10.0.0.184 6379<br>masterauth 123456<br>:wq<br>[root@slave2 ~]<span class="hljs-comment">#systemctl restart redis</span><br></code></pre></td></tr></table></figure><h4 id="1-2、编辑哨兵（sentinel）配置"><a href="#1-2、编辑哨兵（sentinel）配置" class="headerlink" title="1.2、编辑哨兵（sentinel）配置"></a>1.2、编辑哨兵（sentinel）配置</h4><p>①Sentinel实际上是一个特殊的redis服务器,有些redis指令支持,但很多指令并不支持.默认监听在26379/tcp端口.</p><p>②哨兵服务可以和Redis服务器分开部署在不同主机，但为了节约成本一般会部署在一起</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#如果是编译安装，在源码目录有sentinel.conf（解压缩文件夹下），复制到安装目录即可，</span><br>[root@master ~]<span class="hljs-comment">#cp redis-6.2.7/sentinel.conf  /apps/redis/etc/</span><br>[root@master ~]<span class="hljs-comment">#chown redis. /apps/redis/etc/*</span><br>[root@master ~]<span class="hljs-comment">#ll /apps/redis/etc</span><br>total 108<br>-rw-r--r-- 1 redis redis 93939 Nov 10 19:00 redis.conf<br>-rw-r--r-- 1 redis redis 13768 Nov 10 19:14 sentinel.conf<br>[root@master ~]<span class="hljs-comment">#vim /apps/redis/etc/sentinel.conf</span><br><span class="hljs-built_in">bind</span> 0.0.0.0                               <span class="hljs-comment">#添加此项</span><br>daemonize <span class="hljs-built_in">yes</span>                              <span class="hljs-comment">#后台运行，将no改为yes</span><br>pidfile /apps/redis/run/sentinel.pid<br>logfile <span class="hljs-string">&quot;/apps/redis/log/sentinel.log&quot;</span><br>sentinel monitor mymaster 10.0.0.184 6379 2 <span class="hljs-comment">#将127.0.0.1改为主节点ip地址10.0.0.184</span><br><span class="hljs-comment">#mymaster是集群的名称，此行指定当前mymaster集群中master服务器的地址和端口</span><br><span class="hljs-comment">#2为法定人数限制(quorum)，即有几个sentinel认为master down了就进行故障转移，一般此值是所有sentinel节点(一般总数是&gt;=3的 奇数,如:3,5,7等)的一半以上的整数值，比如，总数是3，即3/2=1.5，取整为2,是master的ODOWN客观下线的依据</span><br>sentinel auth-pass mymaster 123456          <span class="hljs-comment">#添加此项</span><br><span class="hljs-comment">#mymaster集群中master的密码，注意此行要在上面行的下面</span><br>sentinel down-after-milliseconds mymaster 3000 <span class="hljs-comment">#将30000毫秒（30秒）改为3秒</span><br><span class="hljs-comment">#判断mymaster集群中所有节点的主观下线(SDOWN)的时间，此项为优化，可不设置</span><br>:wq<br><br><br>[root@slave1 ~]<span class="hljs-comment">#cp /usr/local/src/redis-6.2.7/sentinel.conf  /apps/redis/etc/     #此机器解压到了/usr/local/src/下</span><br>[root@slave1 ~]<span class="hljs-comment">#chown redis. /apps/redis/etc/*</span><br>[root@slave1 ~]<span class="hljs-comment">#ll /apps/redis/etc</span><br>total 108<br>-rw-r--r-- 1 redis redis 93960 Nov 10 18:55 redis.conf<br>-rw-r--r-- 1 redis redis 13768 Nov 10 19:33 sentinel.conf<br>[root@slave1 ~]<span class="hljs-comment">#vim /apps/redis/etc/sentinel.conf</span><br><span class="hljs-built_in">bind</span> 0.0.0.0                              <br>daemonize <span class="hljs-built_in">yes</span>                              <br>pidfile /apps/redis/run/sentinel.pid<br>logfile <span class="hljs-string">&quot;/apps/redis/log/sentinel.log&quot;</span><br>sentinel monitor mymaster 10.0.0.184 6379 2<br>sentinel auth-pass mymaster 123456         <br>sentinel down-after-milliseconds mymaster 3000<br>:wq<br><br>[root@slave2 ~]<span class="hljs-comment">#cp /usr/local/src/redis-6.2.7/sentinel.conf  /apps/redis/etc/</span><br>[root@slave2 ~]<span class="hljs-comment">#chown redis. /apps/redis/etc/*</span><br>[root@slave2 ~]<span class="hljs-comment">#ll /apps/redis/etc</span><br>total 108<br>-rw-r--r-- 1 redis redis 93960 Nov 10 18:56 redis.conf<br>-rw-r--r-- 1 redis redis 13768 Nov 10 19:41 sentinel.conf<br>[root@slave2 ~]<span class="hljs-comment">#vim /apps/redis/etc/sentinel.conf</span><br><span class="hljs-built_in">bind</span> 0.0.0.0                              <br>daemonize <span class="hljs-built_in">yes</span>                              <br>pidfile /apps/redis/run/sentinel.pid<br>logfile <span class="hljs-string">&quot;/apps/redis/log/sentinel.log&quot;</span><br>sentinel monitor mymaster 10.0.0.184 6379 2<br>sentinel auth-pass mymaster 123456         <br>sentinel down-after-milliseconds mymaster 3000<br>:wq<br></code></pre></td></tr></table></figure><h4 id="1-3、哨兵（sentinel）的启动"><a href="#1-3、哨兵（sentinel）的启动" class="headerlink" title="1.3、哨兵（sentinel）的启动"></a>1.3、哨兵（sentinel）的启动</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#由于是编译安装，没有service文件，所以无法systemctl启动</span><br><span class="hljs-comment">#可以使用以下命令启动，但此命令不能开机启动</span><br>[root@master ~]<span class="hljs-comment">#/apps/redis/bin/redis-sentinel /apps/redis/etc/sentinel.conf</span><br><br><span class="hljs-comment">#为了开机也能启动，可以自己编辑service文件，在所有节点生成新的service文件</span><br>[root@master ~]<span class="hljs-comment">#vim /lib/systemd/system/redis-sentinel.service</span><br>[Unit]<br>Description=Redis Sentinel<br>After=network.target<br><br>[Service]<br>ExecStart=/apps/redis/bin/redis-sentinel /apps/redis/etc/sentinel.conf --supervised systemd<br>ExecStop=/bin/kill -s QUIT <span class="hljs-variable">$MAINPID</span><br>Type=notify<br>User=redis<br>Group=redis<br>RuntimeDirectory=redis<br>RuntimeDirectoryMode=0755<br><br>[Install]<br>WantedBy=multi-user.target<br>:wq<br>[root@master ~]<span class="hljs-comment">#scp /lib/systemd/system/redis-sentinel.service 10.0.0.185:/lib/systemd/system/</span><br>[root@master ~]<span class="hljs-comment">#scp /lib/systemd/system/redis-sentinel.service 10.0.0.216:/lib/systemd/system/</span><br>[root@master ~]<span class="hljs-comment">#systemctl enable --now redis-sentinel.service</span><br>[root@slave1 ~]<span class="hljs-comment">#systemctl enable --now redis-sentinel.service</span><br>[root@slave2 ~]<span class="hljs-comment">#systemctl enable --now redis-sentinel.service</span><br></code></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第五周作业</title>
    <link href="/2022/09/20/%E7%AC%AC%E4%BA%94%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/09/20/%E7%AC%AC%E4%BA%94%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="一、SUDO-PAM配置规范说明"><a href="#一、SUDO-PAM配置规范说明" class="headerlink" title="一、SUDO,PAM配置规范说明"></a>一、SUDO,PAM配置规范说明</h3><p>解析：</p><p><strong>1、sudo配置规范说明</strong></p><p>①sudo能够授权指定用户在指定主机上运行某些命令</p><p>②root用户授权给一些普通用户特殊权限，需要在/etc/sudoers文件中按照规则进行授权，如果面对多种权限多用户情况下需要具体分类，可以在/etc/sudoers.d/文件夹下单独按照规则编写多个文件</p><p>③/etc/sudoers的权限为440</p><p>④进入/etc/sudoers进行编辑</p><p>​    sudo授权规则格式：   </p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">        用户    登陆主机=(代表用户)   命令<br>        user     host =(runas)    command    <span class="hljs-comment">#runas如果不指定，默认为root；可以有多个主机和命令，主机和命令以,隔开；command的路径可以由which command查找</span><br>范例：   root      ALL =(ALL)      ALL        <span class="hljs-comment">#root用户可以在任何主机上代表所有用户执行所有命令</span><br>        zhang <span class="hljs-number">10.0</span>.<span class="hljs-number">0.128</span>,<span class="hljs-number">10.0</span>.<span class="hljs-number">0.129</span>=   <span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/ls,/</span>sbin/ifconfig  <span class="hljs-comment">#zhang用户可以在10.0.0.128,10.0.0.129这两个主机上代表root用户执行ls命令和ifconfig命令</span><br></code></pre></td></tr></table></figure><p>  sudoers的别名</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">User和runas: <br>      username<br>      <span class="hljs-comment">#uid</span><br>      %group_name<br>      %<span class="hljs-comment">#gid</span><br>      user_<span class="hljs-keyword">alias</span>|runas_<span class="hljs-keyword">alias</span><br>host:<br>      ip或hostname<br>      network<span class="hljs-params">(/netmask)</span><br>      host_<span class="hljs-keyword">alias</span><br><span class="hljs-keyword">command</span>:<br>      <span class="hljs-keyword">command</span> name<br>      directory<br>      sudoedit<br>      Cmnd_Alias<br></code></pre></td></tr></table></figure><p>别名格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[A-Z]</span>(<span class="hljs-selector-attr">[A-Z]</span><span class="hljs-selector-attr">[0-9]</span>_)*              #由字母、数字、下划线组成<br></code></pre></td></tr></table></figure><p><strong>2、PAM配置规范说明</strong></p><p>①PAM：Pluggable Authentication Modules，插件式的验证模块，Sun公司于1995 年开发的一种与认证相关的通用框架机制。PAM 只关注如何为服务验证用户的 API，通过提供一些动态链接库和一套统一的API，将系统提供的服务和该服务的认证方式分开，使得系统管理员可以灵活地根据需要给不同的服务配置不同的认证方式而无需更改服务程序一种认证框架，自身不做认证</p><p>②PAM工作原理：</p><p>   PAM认证一般遵循这样的顺序：Service(服务)→PAM(配置文件)→pam_*.so</p><p>   PAM认证首先要确定那一项服务，然后加载相应的PAM的配置文件(位于/etc/pam.d下)，最后调用认证文件(位于/lib64/security下)进行安全认证</p><p>③PAM模块的配置文件存放在/etc/security/中；PAM 模块文件存放在/lib/security或者 /lib64/security/ 中；各个软件的 PAM 配置文件存放在 /etc/pam.d/ 中</p><p>④PAM配置文件格式：工作类别   控制模式   模块路径  模块参数</p><h3 id="二、chrony搭建私有ntp服务"><a href="#二、chrony搭建私有ntp服务" class="headerlink" title="二、chrony搭建私有ntp服务"></a>二、chrony搭建私有ntp服务</h3><p>解析：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@Rocky8</span> ~]<span class="hljs-meta">#yum -y install chrony           #安装chrony</span><br>[root<span class="hljs-symbol">@Rocky8</span> ~]<span class="hljs-meta">#vim  /etc/chrony.conf</span><br><span class="hljs-meta">#pool 2.rhel.pool.ntp.org iburst                #加#注释此行，它是一个国外提供校时的虚拟集群，反应误差比国内的大，最好更换为国内NTP服务器网址</span><br>server ntp.aliyun.com           iburst          <span class="hljs-meta">#添加阿里云ntp网址</span><br>server time1.cloud.tencent.com  iburst          <span class="hljs-meta">#添加腾讯ntp网址</span><br>：wq                                            <span class="hljs-meta">#保存退出</span><br>[root<span class="hljs-symbol">@Rocky8</span> ~]<span class="hljs-meta">#systemctl restart chronyd       #启动服务</span><br>[root<span class="hljs-symbol">@Rocky8</span> ~]<span class="hljs-meta">#ss -ntlu                        #323端口已启动（127.0.0.1表示只有本机时间同步）</span><br>Netid  State   Recv-Q  <span class="hljs-built_in">Send</span>-Q   <span class="hljs-keyword">Local</span> Address:Port   Peer Address:Port    Process  udp    UNCONN    <span class="hljs-number">0</span>       <span class="hljs-number">0</span>         <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">323</span>        <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:*                 <br>[root<span class="hljs-symbol">@Rocky8</span> ~]<span class="hljs-meta">#chronyc sources -v              #查看是否已同步</span><br><span class="hljs-meta">#此时本机已经可以和设置的网址网络时间同步了</span><br><br><br><span class="hljs-meta">#下一步将此机设置为局域网内的服务器，将局域网内的其他机器时间向此机器同步</span><br>[root<span class="hljs-symbol">@Rocky8</span> ~]<span class="hljs-meta">#vim  /etc/chrony.conf</span><br><span class="hljs-meta"># Allow NTP client access from local network.</span><br><span class="hljs-meta">#allow 192.168.0.0/16</span><br>allow <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">0</span>                          <span class="hljs-meta">#在上面两条的下方添加此网段，表示此网段的所有机器都可以和我同步时间（0.0.0.0/0表示所有网段）</span><br>：wq                                            <span class="hljs-meta">#保存退出</span><br>[root<span class="hljs-symbol">@Rocky8</span> ~]<span class="hljs-meta">#systemctl restart chronyd       #启动服务</span><br>[root<span class="hljs-symbol">@Rocky8</span> ~]<span class="hljs-meta">#ss -ntlu                        #123端口已启动（123是ntp协议同步的标准端口号，0.0.0.0表示所有网段都可以和我同步）</span><br>Netid  State   Recv-Q  <span class="hljs-built_in">Send</span>-Q   <span class="hljs-keyword">Local</span> Address:Port   Peer Address:Port    Process  udp    UNCONN    <span class="hljs-number">0</span>       <span class="hljs-number">0</span>         <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:<span class="hljs-number">123</span>        <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:*   <br>[root<span class="hljs-symbol">@Centos7</span> ~]<span class="hljs-meta">#ntpdate 10.0.0.128              #使用另一台主机同步时间，显示成功</span><br><span class="hljs-number">23</span> Sep <span class="hljs-number">16</span>:<span class="hljs-number">04</span>:<span class="hljs-number">02</span> ntpdate[<span class="hljs-number">2291</span>]: adjust time server <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.128</span> offset <span class="hljs-number">0.027979</span> sec<br><br><span class="hljs-meta">#下一步设置客户端配置（局域网内其他机器），以确保永久同步</span><br>[root<span class="hljs-symbol">@Centos7</span> ~]<span class="hljs-meta">#yum -y install chrony         #安装chrony</span><br>[root<span class="hljs-symbol">@Centos7</span> ~]<span class="hljs-meta">#vim /etc/chrony.conf</span><br>server <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.128</span>    iburst                    <span class="hljs-meta">#添加自己设置的ntp服务器</span><br><span class="hljs-meta">#server 0.centos.pool.ntp.org iburst</span><br><span class="hljs-meta">#server 1.centos.pool.ntp.org iburst</span><br><span class="hljs-meta">#server 2.centos.pool.ntp.org iburst</span><br><span class="hljs-meta">#server 3.centos.pool.ntp.org iburst           #将配置文件中的原4条设置注释掉</span><br>：wq                                           <span class="hljs-meta">#保存退出</span><br>[root<span class="hljs-symbol">@Centos7</span> ~]<span class="hljs-meta">#systemctl restart chronyd     #重启服务</span><br>[root<span class="hljs-symbol">@Centos7</span> ~]<span class="hljs-meta">#chronyc sources -v            #确认是否同步，已同步</span><br>^* <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.128</span>        <span class="hljs-number">3</span>   <span class="hljs-number">6</span>    <span class="hljs-number">37</span>    <span class="hljs-number">13</span>    +<span class="hljs-number">19</span>ns[  +<span class="hljs-number">85</span>us] +/-   <span class="hljs-number">18</span>ms<br><br><span class="hljs-meta">#当设置的服务器与网络断开时，仍为局域网内的其他客户端提供服务，需进行如下设置</span><br>[root<span class="hljs-symbol">@Rocky8</span> ~]<span class="hljs-meta">#vim /etc/chrony.conf</span><br><span class="hljs-keyword">local</span> stratum <span class="hljs-number">10</span>                               <span class="hljs-meta">#将#删除</span><br>：wq                                           <span class="hljs-meta">#保存退出</span><br>[root<span class="hljs-symbol">@Rocky8</span> ~]<span class="hljs-meta">#systemctl restart chronyd     #重启服务</span><br><br><span class="hljs-meta">#设置开机启动</span><br>[root<span class="hljs-symbol">@Rocky8</span> ~]<span class="hljs-meta">#systemctl enable --now chronyd</span><br>[root<span class="hljs-symbol">@Centos7</span> ~]<span class="hljs-meta">#systemctl enable --now chronyd</span><br></code></pre></td></tr></table></figure><h3 id="三、说明CDN原理"><a href="#三、说明CDN原理" class="headerlink" title="三、说明CDN原理"></a>三、说明CDN原理</h3><p>解析：</p><p>①用户向浏览器输入<a href="http://www.a.com这个域名,浏览器第一次发现本地没有dns缓存,则向网站的dns服/">www.a.com这个域名，浏览器第一次发现本地没有dns缓存，则向网站的DNS服</a></p><p>务器请求</p><p>②网站的DNS域名解析器设置了CNAME，指向了<a href="http://www.a.tbcdn.com,请求指向了cdn网络中的智能/">www.a.tbcdn.com,请求指向了CDN网络中的智能</a></p><p>DNS负载均衡系统</p><p>③智能DNS负载均衡系统解析域名，把对用户响应速度最快的IP节点返回给用户；</p><p>④用户向该IP节点（CDN服务器）发出请求</p><p>⑤由于是第一次访问，CDN服务器会通过Cache内部专用DNS解析得到此域名的原web站点IP，向原</p><p>站点服务器发起请求，并在CDN服务器上缓存内容</p><p>⑥请求结果发给用户</p><h3 id="四、搭建智能DNS，实现不同地域客户端解析到不同主机"><a href="#四、搭建智能DNS，实现不同地域客户端解析到不同主机" class="headerlink" title="四、搭建智能DNS，实现不同地域客户端解析到不同主机"></a>四、搭建智能DNS，实现不同地域客户端解析到不同主机</h3><p>解析：</p><p><strong>1、安装软件</strong></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">yum -y <span class="hljs-keyword">install </span><span class="hljs-keyword">bind </span> <span class="hljs-keyword">bind-utils </span>         <span class="hljs-comment">#安装bind工具</span><br>systemctl enable --now named             <span class="hljs-comment">#设置DNS为开机启动</span><br></code></pre></td></tr></table></figure><p><strong>2、配置两台主机</strong></p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs dns">实现区域就近原则访问<br>网址：www.magedu.org    IP地址：<span class="hljs-number">2.2.2.2</span>/<span class="hljs-number">24</span>（北京）  <span class="hljs-number">3.3.3.3</span>/<span class="hljs-number">24</span>（上海）<br>其中一台主机设置为服务器，一台设置为客户端<br>服务器设置：<br><br>当网段为<span class="hljs-number">10.0.0.0</span>/<span class="hljs-number">24</span>访问时地址为<span class="hljs-number">2.2.2.2</span>/<span class="hljs-number">24</span>；当网段为<span class="hljs-number">192.168.10.0</span>/<span class="hljs-number">24</span>访问网址时为<span class="hljs-number">3.3.3.3</span>/<span class="hljs-number">24</span><br>客户端设置：<br>北京：<span class="hljs-number">10.0.0.216</span><br>上海：<span class="hljs-number">192.168.10.216</span><br></code></pre></td></tr></table></figure><p><strong>3、 创建区域数据库文件</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@Rocky8 named]<span class="hljs-comment">#vim /var/named/magedu.org.zone.shanghai</span><br>$TTL <span class="hljs-number">1</span>D<br>@   <span class="hljs-keyword">IN</span> SOA <span class="hljs-keyword">master</span> <span class="hljs-title">admin</span>.magedu.org. (<br>                    <span class="hljs-number">2019042214</span> ; serial<br>                   <span class="hljs-number">1</span>D ; refresh<br>                   <span class="hljs-number">1H</span> ; retry<br>                   <span class="hljs-number">1</span>W ; expire<br>                   <span class="hljs-number">3H</span> )   ; minimum<br>           NS   <span class="hljs-keyword">master</span><br><span class="hljs-title">master</span>     A    <span class="hljs-number">10.0</span>.<span class="hljs-number">0.8</span><br>www        A    <span class="hljs-number">3.3</span>.<span class="hljs-number">3.3</span><br>：wq                                                   <span class="hljs-comment">#保存退出</span><br>[root@Rocky8 named]<span class="hljs-comment">#vim magedu.org.zone.beijing</span><br>$TTL <span class="hljs-number">1</span>D<br>@   <span class="hljs-keyword">IN</span> SOA <span class="hljs-keyword">master</span> <span class="hljs-title">admin</span>.magedu.org. (<br>                    <span class="hljs-number">2019042214</span> ; serial<br>                   <span class="hljs-number">1</span>D ; refresh<br>                   <span class="hljs-number">1H</span> ; retry<br>                   <span class="hljs-number">1</span>W ; expire<br>                   <span class="hljs-number">3H</span> )   ; minimum<br>           NS   <span class="hljs-keyword">master</span><br><span class="hljs-title">master</span>     A    <span class="hljs-number">10.0</span>.<span class="hljs-number">0.8</span><br>www        A    <span class="hljs-number">2.2</span>.<span class="hljs-number">2.2</span><br>:wq                                                   <span class="hljs-comment">#保存退出</span><br><br>[root@Rocky8 named]<span class="hljs-comment">#chgrp named /var/named/magedu.org.zone.shanghai   #更改所属组</span><br>[root@Rocky8 named]<span class="hljs-comment">#chgrp named /var/named/magedu.org.zone.beijing    #更改所属组</span><br>[root@Rocky8 named]<span class="hljs-comment">#chmod 640 /var/named/magedu.org.zone.shanghai     #更改权限</span><br>[root@Rocky8 named]<span class="hljs-comment">#chmod 640 /var/named/magedu.org.zone.beijing      #更改权限</span><br></code></pre></td></tr></table></figure><p><strong>4、实现区域配置文件</strong></p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">[root@Rocky8 etc]<span class="hljs-comment">#vim named.rfc1912.zones.shanghai</span><br>zone <span class="hljs-string">&quot;.&quot;</span> IN &#123;<br>   type hint;<br>   file <span class="hljs-string">&quot;named.ca&quot;</span>;<br>&#125;;                                                 <span class="hljs-comment">#从/etc/named.conf文件里移动至此</span><br>zone <span class="hljs-string">&quot;magedu.org&quot;</span> &#123;<br>   type master;<br>   file <span class="hljs-string">&quot;magedu.org.zone.shanghai&quot;</span>;<br>&#125;;<br>：wq                                                    <span class="hljs-comment">#保存</span><br>[root@Rocky8 etc]<span class="hljs-comment">#vim named.rfc1912.zones.beijing</span><br>zone <span class="hljs-string">&quot;.&quot;</span> IN &#123;<br>   type hint;<br>   file <span class="hljs-string">&quot;named.ca&quot;</span>;<br>&#125;;                                                <span class="hljs-comment">#从/etc/named.conf文件里移动至此</span><br>zone <span class="hljs-string">&quot;magedu.org&quot;</span> &#123;<br>   type master;<br>   file <span class="hljs-string">&quot;magedu.org.zone.beijing&quot;</span>;<br>&#125;;<br>：wq                                                    <span class="hljs-comment">#保存</span><br>[root@Rocky8 etc]<span class="hljs-comment">#chgrp named /etc/named.rfc1912.zones.shanghai  #更改所属组</span><br>[root@Rocky8 etc]<span class="hljs-comment">#chgrp named /etc/named.rfc1912.zones.beijing   #更改所属组</span><br>[root@Rocky8 etc]<span class="hljs-comment">#chmod 640 /etc/named.rfc1912.zones.shanghai    #更改权限</span><br>[root@Rocky8 etc]<span class="hljs-comment">#chmod 640 /etc/named.rfc1912.zones.beijing     #更改权限</span><br></code></pre></td></tr></table></figure><p><strong>5、服务端配置文件实现 view</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php">[root@Rocky8 etc]<span class="hljs-comment">#vim /etc/named.conf</span><br>acl beijingnet &#123;<br>    <span class="hljs-number">10.0</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">24</span>;<br>&#125;;                                          <span class="hljs-comment">#添加此命令</span><br>acl shanghainet &#123;<br>    <span class="hljs-number">192.168</span>.<span class="hljs-number">10.0</span>/<span class="hljs-number">24</span>;<br>&#125;;                                          <span class="hljs-comment">#添加此命令</span><br><span class="hljs-comment">#注释掉下面两行</span><br><span class="hljs-comment">// listen-on port 53 &#123; 127.0.0.1; &#125;;</span><br><span class="hljs-comment">// allow-query     &#123; localhost; &#125;;</span><br><br><span class="hljs-comment">#添加view</span><br>view beijingview &#123;<br>   <span class="hljs-keyword">match</span>-clients &#123; beijingnet;&#125;;<br>   <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;/etc/named.rfc1912.zones.beijing&quot;</span>;                                                                                              <br>&#125;;<br>view shanghaiview &#123;<br>   <span class="hljs-keyword">match</span>-clients &#123; shanghainet;&#125;;<br>   <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;/etc/named.rfc1912.zones.shanghai&quot;</span>;<br>&#125;;<br><br><span class="hljs-comment">#删除下面这条命令</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;/etc/named.rfc1912.zones&quot;</span>;   <br></code></pre></td></tr></table></figure><h3 id="五、解释DNS解析流程"><a href="#五、解释DNS解析流程" class="headerlink" title="五、解释DNS解析流程"></a>五、解释DNS解析流程</h3><p>解析：</p><p><strong>1、工作原理流程图</strong></p><p><a href=""><img src="image-20220922103828108.png" alt="image-20220922103828108"></a></p><p><strong>2、查询请求的经过流程</strong></p><p>Client –&gt;hosts文件 –&gt; Client DNS Service Local Cache –&gt; DNS Server (recursion递 </p><p>归) –&gt; DNS Server Cache –&gt;DNS iteration(迭代) –&gt; 根–&gt; 顶级域名DNS–&gt;二级域名DNS… </p><p><strong>3、解析流程</strong></p><p>①客户端在浏览器中输入网址<a href="http://www.magedu.com查找时,首先会在客户端主机里面查找本地缓存及hosts文件是否有此网址对应ip,如果有即可正常登录(首次查询时没有相关记录)/">www.magedu.com查找时，首先会在客户端主机里面查找本地缓存及hosts文件是否有此网址对应IP，如果有即可正常登录（首次查询时没有相关记录）</a></p><p>②当本地缓存与hosts文件没有对应的IP地址时，客户端会向客户端所在地址的DNS服务器（即Local DNS）发出请求，如果Local DNS的本地缓存有对应的IP地址，就会将IP地址回复至客户端，如果没有对应缓存会向其他服务器发起请求</p><p>③首先向.根服务器发起请求，根服务器没有对应的IP地址，但缓存中有.com的地址，将.com的地址反馈给Local DNS，让它去咨询.com域名服务器</p><p>④收到.com的地址后，向.com域名服务器发起请求，.com域名服务器没有对应的IP地址，但缓存中有magedu.com的地址，将magedu.com的地址反馈给Local DNS，让它去咨询magedu.com域名服务器</p><p>⑤收到magedu.com的地址后，向magedu.com域名服务器发起请求，magedu.com域名服务器缓存中有<a href="http://www.magedu.com的ip地址,并将地址反馈给local/">www.magedu.com的IP地址，并将地址反馈给Local</a> DNS</p><p>⑥Local DNS收到对应IP地址后，将IP地址反馈给客户端，并将此地址放到本地缓存里，以便下次使用</p><p><strong>4、DNS查询类型</strong></p><p>①递归查询：是指DNS服务器在收到用户发起的请求时，必须向用户返回一个准确的查询结果。如果DNS服务器本地没有存储与之对应的信息，则该服务器需要询问其他服务器，并将返回的查询结构提交给用户。</p><p>一般客户机和本地DNS服务器之间属于递归查询，即当客户机向DNS服务器发出请求后,若DNS服务器本身不能解析，则会向另外的DNS服务器发出查询请求，得到最终的肯定或否定的结果后转交给客户机。此查询的源和目标保持不变,为了查询结果只需要发起一次查询</p><p>递归算法:客户端向LocalDNS发起域名查询–&gt;localDNS不知道域名对应的IP–&gt;但它知道谁知道-&gt;他</p><p>代为帮客户端去查找–&gt;最后再返回最终结果</p><p>②迭代查询：是指DNS服务器在收到用户发起的请求时，并不直接回复查询结果，而是告诉另一台DNS服务器的地址，用户再向这台DNS服务器提交请求，这样依次反复，直到返回查询结果。</p><p>一般情况下(有例外)本地的DNS服务器向其它DNS服务器的查询属于迭代查询,如：若对方不能返回权威的结果，则它会向下一个DNS服务器(参考前一个DNS服务器返回的结果)再次发起进行查询，直到返回查询的结果为止。此查询的源不变,但查询的目标不断变化,为查询结果一般需要发起多次查询</p><p>迭代算法︰客户端向LocalDNS发起域名查询–&gt;localDNS不知道域名对应的IP–&gt;但它知道谁知道并</p><p>推荐客户端应该找谁–&gt;客户端自己去找它</p><p>③DNS缓存：是将解析数据存储在靠近发起请求的客户端的位置，也可以说DNS数据是可以缓存在任意</p><p>位置，最终目的是以此减少递归查询过程，可以更快的让用户获得请求结果。</p><h3 id="六、iptables-5表5链解释"><a href="#六、iptables-5表5链解释" class="headerlink" title="六、iptables 5表5链解释"></a>六、iptables 5表5链解释</h3><p>解析：</p><p><strong>1、iptables由五个表table和五个链chain以及一些规则组成</strong></p><p><a href=""><img src="image-20220922112259513.png" alt="image-20220922112259513"></a></p><p><strong>2、5个链chain</strong></p><p>组成：INPUT        OUTPUT       FORWARD         PREROUTING       POSTROUTING</p><p><a href=""><img src="image-20220922154020965.png" alt="image-20220922154020965"></a></p><p><strong>3、5个表table</strong></p><p>①组成：<strong>filter</strong>：过滤规则表，根据预定义的规则过滤符合条件的数据包,默认表</p><p>​               <strong>nat</strong>：network address translation 地址转换规则表</p><p>​               <strong>mangle</strong>：修改数据标记位规则表</p><p>​               <strong>raw</strong>：关闭启用的连接跟踪机制，加快封包穿越防火墙速度</p><p>​              <strong>security</strong>：用于强制访问控制（MAC）网络规则，由Linux安全模块（如SELinux）实现</p><p>②优先级：security –&gt;raw–&gt;mangle–&gt;nat–&gt;filter</p><h3 id="七、iptables-firewalld-nftable-实现主机防火墙。5000-6000端口仅192-168-0-0-24网段内的主机访问"><a href="#七、iptables-firewalld-nftable-实现主机防火墙。5000-6000端口仅192-168-0-0-24网段内的主机访问" class="headerlink" title="七、iptables/firewalld/nftable 实现主机防火墙。5000-6000端口仅192.168.0.0/24网段内的主机访问"></a>七、iptables/firewalld/nftable 实现主机防火墙。5000-6000端口仅192.168.0.0/24网段内的主机访问</h3><p>解析：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@Rocky ~]</span><span class="hljs-selector-id">#systemctl</span> disable <span class="hljs-attr">--now</span> firewalld<span class="hljs-selector-class">.service</span>  #启用iptables需要关闭firewalld<br><span class="hljs-selector-attr">[root@Rocky ~]</span><span class="hljs-selector-id">#iptables</span> -t <span class="hljs-attribute">filter</span> -<span class="hljs-selector-tag">A</span> <span class="hljs-selector-tag">INPUT</span> -<span class="hljs-selector-tag">p</span> tcp ! -s <span class="hljs-number">192.168</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">24</span> <span class="hljs-attr">--dport</span> <span class="hljs-number">5000</span>:<span class="hljs-number">6000</span> -j DROP<br></code></pre></td></tr></table></figure><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig">[<span class="hljs-string">root</span>@<span class="hljs-string">Rocky</span> ~]<span class="hljs-comment">#systemctl start firewalld.service  #需要开启firewalld</span><br><span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--permanent</span> <span class="hljs-built_in">--zone=vnc</span> <span class="hljs-built_in">--add-rich-rule=&#x27;rule</span> <span class="hljs-string">family</span>=<span class="hljs-string">ipv4</span> <span class="hljs-string">source</span> <br><span class="hljs-string">address</span>=<span class="hljs-string">192</span>.<span class="hljs-string">168</span>.<span class="hljs-string">0</span>.<span class="hljs-string">0</span>/<span class="hljs-string">24</span> <span class="hljs-string">port</span> <span class="hljs-string">port</span>=<span class="hljs-string">5000-6000</span> <span class="hljs-string">protocol</span>=<span class="hljs-string">tcp</span> <span class="hljs-string">accept</span><span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@Rocky ~]#systemctl <span class="hljs-keyword">disable</span> <span class="hljs-comment">--now firewalld.service  #启用nft需要关闭firewalld</span><br>[root@Rocky ~]#nft <span class="hljs-keyword">add</span> <span class="hljs-keyword">table</span> <span class="hljs-type">inet</span> test_table     #添加使用簇为<span class="hljs-type">inet</span>的test_table表<br>[root@Rocky ~]#nft <span class="hljs-keyword">add</span> chain <span class="hljs-type">inet</span> test_table test_filter_input_chain &#123; <span class="hljs-keyword">type</span> <span class="hljs-keyword">filter</span> hook <span class="hljs-keyword">input</span> priority <span class="hljs-number">0</span> \; &#125;                #在test_table表里添加test_filter_input_chain链，此链类型设置等同于<span class="hljs-keyword">filter</span>表里的<span class="hljs-keyword">input</span>链<br>[root@Rocky ~]#nft <span class="hljs-keyword">insert</span> <span class="hljs-keyword">rule</span> <span class="hljs-type">inet</span> test_table test_filter_input_chain <span class="hljs-keyword">index</span> <span class="hljs-number">0</span> ip saddr <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>/<span class="hljs-number">24</span> tcp dport <span class="hljs-number">5000</span>:<span class="hljs-number">6000</span> accept<br>[root@Rocky ~]#nft <span class="hljs-keyword">add</span> <span class="hljs-keyword">rule</span> <span class="hljs-type">inet</span> test_table test_filter_input_chain tcp dport <span class="hljs-number">5000</span>:<span class="hljs-number">6000</span> reject<br></code></pre></td></tr></table></figure><h3 id="八、mysql的各发行版有哪些"><a href="#八、mysql的各发行版有哪些" class="headerlink" title="八、mysql的各发行版有哪些"></a>八、mysql的各发行版有哪些</h3><p>解析：</p><p><strong>MySQL</strong>：5.1 –&gt; 5.5 –&gt; 5.6 –&gt; 5.7 –&gt;8.0</p><p><strong>MariaDB</strong>：5.1 –&gt;5.5 –&gt;10.0–&gt; 10.1 –&gt; 10.2 –&gt; 10.3 –&gt; 10.4 –&gt; 10.5</p><h3 id="九、mysql索引的作用"><a href="#九、mysql索引的作用" class="headerlink" title="九、mysql索引的作用"></a>九、mysql索引的作用</h3><p>解析：</p><p><strong>索引的作用</strong>：是排序的快速查找的特殊数据结构，定义作为查找条件的字段上，又称为键key，索引通过存储引擎实现</p><p><strong>优点：</strong></p><p>索引可以降低服务需要扫描的数据量，减少了IO次数</p><p>索引可以帮助服务器避免排序和使用临时表</p><p>索引可以帮助将随机I/O转为顺序 I/O</p><p><strong>缺点：</strong></p><p>占用额外空间，影响插入速度</p><h3 id="十、mysql-btree索引的原理"><a href="#十、mysql-btree索引的原理" class="headerlink" title="十、mysql btree索引的原理"></a>十、mysql btree索引的原理</h3><p>解析：</p><p>1、由于存储介质的特性，磁盘本身存取比主存慢很多，再加上磁盘I/O存在机械运动耗费，因此磁盘I/O的时间消耗是巨大的. 为了提高磁盘与主存的交互效率, 首要的手段就是减少磁盘 I/O 次数. 为了达到这个目的，磁盘往往不是严格按需读取，而是每次都会预读，即使只需要一个字节，磁盘也会从这个位置开始，顺序向后读取一定长度的数据放入内存. 这样做的理论依据是局部性原理：当一个数据被用到时，其附近的数据通常也会马上被使用</p><p>2、索引一般以文件形式存储在磁盘上, 为了提高性能, 每次又要把部分数据读入内存来处理,这就意味着索引检索需要磁盘I/O操作</p><p>3、其中btree索引结构更加合适</p><p>①所有叶节点保存了所有父节点关键字记录的指针,所有数据地址都必须到叶节点才能获取,故每次查询数据I/O次数相同(因为都需要到叶节点,而叶节点都在同一层),查询效率稳定<br>②B+ 树所有叶节点通过指针连接到一起, 范围查询效率更高<br>③B+ 树内节点不存储 data, 则同一个页的空间可以容纳更多的关键字, 一次性读入内存可供检索的关键字也更多. 这样在数据量足够大的情况下, B+ 树拥有比 B 树更小的树高,也就可以减少 I/O 次数,提高性能</p><h3 id="十一、mysql安全加固"><a href="#十一、mysql安全加固" class="headerlink" title="十一、mysql安全加固"></a>十一、mysql安全加固</h3><p>解析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">1、设置root账号的密码（系统自带的root账号密码是空的）<br>2、删除不带用户名的空账号（否则任何人都可以登录数据库，新版本里没有空账号了）<br>3、禁止root远程登录（新版本里没有root远程登录了）<br>4、删除<span class="hljs-built_in">test</span>数据库（老版本里有，<span class="hljs-built_in">test</span>数据库任何人都可以访问）<br>直接执行系统自带的脚本加固<br>[root@centos ~]<span class="hljs-comment">#mysql_secure_installation           #将上面3个问题解决了</span><br>Set root password? [Y/n] Y                          <span class="hljs-comment">#Y同意增加密码</span><br>New password:                                       <span class="hljs-comment">#添加root密码               Remove anonymous users? [Y/n] Y                     #是否删除空账号，Y删除</span><br> ... Success!<br>Disallow root login remotely? [Y/n] y               <span class="hljs-comment">#是否禁止root远程登录，Y禁止</span><br> ... Success!                      <br>Remove <span class="hljs-built_in">test</span> database and access to it? [Y/n] y      <span class="hljs-comment">#是否删除test数据库，y删除</span><br> - Dropping <span class="hljs-built_in">test</span> database...<br> ... Success!<br> - Removing privileges on <span class="hljs-built_in">test</span> database...<br> ... Success!<br><br></code></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第四周作业</title>
    <link href="/2022/08/28/%E7%AC%AC%E5%9B%9B%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/08/28/%E7%AC%AC%E5%9B%9B%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><h1 id="作业："><a href="#作业：" class="headerlink" title="作业："></a>作业：</h1><h3 id="1、自定义写出10个定时任务的示例："><a href="#1、自定义写出10个定时任务的示例：" class="headerlink" title="1、自定义写出10个定时任务的示例："></a>1、自定义写出10个定时任务的示例：</h3><h5 id="①比如每周三凌晨三点执行data命令-②要求尽量的覆盖各种场景"><a href="#①比如每周三凌晨三点执行data命令-②要求尽量的覆盖各种场景" class="headerlink" title="①比如每周三凌晨三点执行data命令        ②要求尽量的覆盖各种场景"></a>①比如每周三凌晨三点执行data命令        ②要求尽量的覆盖各种场景</h5><p>解析：</p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">crontab -e             <span class="hljs-comment">#编辑定时任务</span><br><br>HELL=<span class="hljs-regexp">/bin/</span>bash         <br>PATH=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/sbin:/u</span>sr<span class="hljs-regexp">/local/</span>bin:<span class="hljs-regexp">/usr/</span>sbin:<span class="hljs-regexp">/usr/</span>bin:<span class="hljs-regexp">/root/</span>bin         <span class="hljs-comment">#系统默认的路径</span><br>MAILTO=root            <br><br><span class="hljs-number">0</span> <span class="hljs-number">3</span> * * <span class="hljs-number">3</span> cp -a <span class="hljs-regexp">/apps/</span>data   /backup     <span class="hljs-comment">#每周三3点整复制data内的文件到backup目录下</span><br><span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> * * systemctl restart httpd        <span class="hljs-comment">#每月1号1点整重新启动http服务</span><br><span class="hljs-number">30</span> <span class="hljs-number">1</span> * * <span class="hljs-number">1</span>-<span class="hljs-number">5</span> cp -a <span class="hljs-regexp">/etc   /</span>backup/etcbak-`date -d -<span class="hljs-number">1</span>day`   <br><span class="hljs-comment">#每周的工作日1:30，将/etc备份至/backup目录中，保存的文件名称格式为“etcbak-yyyy-mm-ddHH.tar.xz”，其中日期是前一天的时间</span><br>* *<span class="hljs-regexp">/2 * * *  cat /</span>proc<span class="hljs-regexp">/meminfo | grep -e &quot;^S&quot; &quot;^M&quot;  &gt;&gt; /</span>tmp/meminfo.txt<br><span class="hljs-comment">#每两小时取出当前系统/proc/meminfo文件中以S或M开头的信息追加至/tmp/meminfo.txt文件中</span><br>*<span class="hljs-regexp">/10 * * * 1-5 /</span>check_disk.sh          <span class="hljs-comment">#工作日每10分钟检查一次磁盘，如果超过80%，则报警发送至邮箱</span><br><br><br>vim check_disk.sh<br><br><span class="hljs-comment">#!/bin/bash</span><br>warning=<span class="hljs-number">80</span><br>used=`df | awk -F<span class="hljs-string">&quot;[ %]+&quot;</span> <span class="hljs-string">&#x27;&#123;print $5&#125;&#x27;</span> | sort -rn | head -<span class="hljs-number">1</span>`<br>[ <span class="hljs-variable">$used</span> -gt <span class="hljs-variable">$warning</span> ] &amp;&amp; echo Disk will be full ! |mail -s worning youxiang@qq.com<br><br><br><br></code></pre></td></tr></table></figure><h3 id="2、图文并茂说明Linux进程和内存概念"><a href="#2、图文并茂说明Linux进程和内存概念" class="headerlink" title="2、图文并茂说明Linux进程和内存概念"></a>2、图文并茂说明Linux进程和内存概念</h3><p>解析：</p><p><a href=""><img src="image-20220911212407275.png" alt="image-20220911212407275"></a></p><p><strong>①进程</strong></p><p>进程：运行中的程序的一个副本，是被载入内存的一个指令集合，是资源分配的单位。</p><p>进程是一个具有一定独立功能的程序在一个数据集上的一次动态执行的过程，是操作系统进行资源分配和调度 的一个独立单位，是应用程序运行的载体。进程是一种抽象的概念，从来没有统一的标准定义。</p><p>进程的组成：进程一般由程序、数据集合和进程控制块三部分组成。</p><p>程序用于描述进程要完成的功能，是控制进程执行的指令集； 数据集合是程序在执行时所需要的数据和工作区； 程序控制块(Program Control Block，简称PCB)，包含进程的描述信息和控制信息，是进程存在的唯一 标志。</p><p>进程具有的特征：</p><p>动态性：进程是程序的一次执行过程，是临时的，有生命期的，是动态产生，动态消亡的；</p><p>并发性：任何进程都可以同其他进程一起并发执行；</p><p>独立性：进程是系统进行资源分配和调度的一个独立单位；</p><p>结构性：进程由程序、数据和进程控制块三部分组成。</p><p><strong>②内存</strong></p><p>内存：是运行进程的空间，CPU待处理的数据和运行的程序暂时存储的空间。</p><h3 id="3、图文并茂说明Linux启动流程"><a href="#3、图文并茂说明Linux启动流程" class="headerlink" title="3、图文并茂说明Linux启动流程"></a>3、图文并茂说明Linux启动流程</h3><p>解析：</p><p><a href=""><img src="image-20220911212506097.png" alt="image-20220911212506097"></a></p><p><strong>CentOS6启动流程</strong></p><p>（1） 加载BIOS的硬件信息，获取第一个启动设备</p><p>（2） 读取第一个启动设备MBR的引导加载程序(grub)的启动信息</p><p>（3） 加载核心操作系统的核心信息，核心开始解压缩，并尝试驱动所有的硬件设备</p><p>（4） 核心执行init程序，并获取默认的运行信息</p><p>（5）init程序执行/etc/rc.d/rc.sysinit文件，重新挂载根文件系统</p><p>（6）启动核心的外挂模块</p><p>（7）init执行运行的各个批处理文件(scripts)</p><p>（8） init执行/etc/rc.d/rc.local</p><p>（9）执行/bin/login程序，等待用户登录</p><p>（10）登录之后开始以Shell控制主机 </p><p><strong>CentOS7以后启动流程</strong>　</p><p>（1） UEFi或BIOS初始化，运行POST开机自检</p><p>（2） 选择启动设备</p><p>（3） 引导装载程序, centos7是grub2,加载装载程序的配置文件：</p><p>　　/etc/grub.d/</p><p>　　/etc/default/grub</p><p>　　/boot/grub2/grub.cfg</p><p>（4） 加载initramfs驱动模块</p><p>（5） 加载内核选项</p><p>（6）内核初始化，centos7使用systemd代替init</p><p>（7） 执行initrd.target所有单元，包括挂载/etc/fstab</p><p>（8） 从initramfs根文件系统切换到磁盘根目录</p><p>（9） systemd执行默认target配置，配置文件/etc/systemd/system/default.target</p><p>（10）systemd执行sysinit.target初始化系统及basic.target准备操作系统</p><p>（11） systemd启动multi-user.target下的本机与服务器服务</p><p>（12） systemd执行multi-user.target下的/etc/rc.d/rc.local</p><p>（13） Systemd执行multi-user.target下的getty.target及登录服务</p><p>（14）systemd执行graphical需要的服务</p><h3 id="4、自定义一个systemd服务定时去其他服务器上检查-tmp-下文件的个数，如果发现数量有变化就记录变化情况到文件中。"><a href="#4、自定义一个systemd服务定时去其他服务器上检查-tmp-下文件的个数，如果发现数量有变化就记录变化情况到文件中。" class="headerlink" title="4、自定义一个systemd服务定时去其他服务器上检查/tmp/下文件的个数，如果发现数量有变化就记录变化情况到文件中。"></a>4、自定义一个systemd服务定时去其他服务器上检查/tmp/下文件的个数，如果发现数量有变化就记录变化情况到文件中。</h3><p>解析：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs routeros">vim /lib/systemd/system/chaxun.service<br><br>[Unit]<br><span class="hljs-attribute">Description</span>=chaxun<br><br>[Service]<br><span class="hljs-attribute">TimeoutStartSec</span>=0<br><span class="hljs-attribute">Execstart</span>=/bin/sh -c <span class="hljs-string">&quot;ssh root@10.0.0.132 find /tmp/ -mtime 2|wc -l &gt;&gt; log.txt&quot;</span><br><span class="hljs-attribute">ExecStop</span>=/bin/kill sh<br><br>[Install]<br><span class="hljs-attribute">Wantedby</span>=multi-user.target<br><br><br><br><br>生效<br>systemctl daemon-reload<br>systemctl <span class="hljs-built_in">enable</span> --now chaxun.service<br></code></pre></td></tr></table></figure><h3 id="5、写Linux内核编译安装博客"><a href="#5、写Linux内核编译安装博客" class="headerlink" title="5、写Linux内核编译安装博客"></a>5、写Linux内核编译安装博客</h3><p>解析：</p><p><strong>①提前准备安装软件包</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">yum -<span class="hljs-keyword">y</span> install gcc <span class="hljs-keyword">make</span> ncurses-devel flex bison openssl-devel elfutils-libelf-devel <span class="hljs-keyword">perl</span> <span class="hljs-keyword">perl</span>-devel<br></code></pre></td></tr></table></figure><p><strong>②从官网下载最新版本的内核（<a href="http://www.kernel.org/">www.kernel.org</a>)</strong></p><p><a href=""><img src="image-20220911161947066.png" alt="image-20220911161947066"></a></p><p><strong>③修改配置</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cd</span> /usr/local/src<br><span class="hljs-attribute">tar</span> xf linux-<span class="hljs-number">5</span>.<span class="hljs-number">19</span>.<span class="hljs-number">8</span>.tar.xz         #解压<br><span class="hljs-attribute">cd</span> linux-<span class="hljs-number">5</span>.<span class="hljs-number">19</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">cp</span> /boot/config-<span class="hljs-number">4</span>.<span class="hljs-number">18</span>.<span class="hljs-number">0</span>-<span class="hljs-number">372</span>.<span class="hljs-number">9</span>.<span class="hljs-number">1</span>.el8.x86_64 ./.config    #将现有版本的内核编译config配置文件拷贝到新版本里，快捷方便，在原有的文件里更改<br><span class="hljs-attribute">vim</span> .config<br><span class="hljs-comment"># CONFIG_MODULE_SIG=y              #注释此行</span><br><span class="hljs-attribute">CONFIG_SYSTEM_TRUSTED_KEYS</span>=<span class="hljs-string">&quot;&quot;</span>      #修改此行<br><span class="hljs-comment"># CONFIG_DEBUG_INFO_BTF=y          #linux-5.8.5版本后需要注释此行</span><br><br><br></code></pre></td></tr></table></figure><p><strong>④配置选项</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">make menuconfig</span><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20220911182550204.png" alt="image-20220911182550204"></a></p><p>在这里可以选择启用或者禁用一些模块。不知道该如何选择的话，默认退出即可</p><p><strong>⑤编译安装</strong></p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-built_in">make</span> -j <span class="hljs-number">2</span>      <span class="hljs-meta">#j 2是2个CPU同时运行，如果CPU有更多可以选择更大的数字   编译内核</span><br><span class="hljs-built_in">make</span> modules_install    <span class="hljs-meta">#安装内核模块</span><br><span class="hljs-built_in">make</span> install            <span class="hljs-meta">#安装内核核心文件</span><br><br><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20220911205446461.png" alt="image-20220911205446461"></a></p><p>⑥重新启动</p><p><a href=""><img src="image-20220911205908277.png" alt="image-20220911205908277"></a></p><h3 id="6、总结5个自我觉得比较有用的awk的使用场景，比如在什么情况下用awk处理文本效率最高，发散题，至少写1个。"><a href="#6、总结5个自我觉得比较有用的awk的使用场景，比如在什么情况下用awk处理文本效率最高，发散题，至少写1个。" class="headerlink" title="6、总结5个自我觉得比较有用的awk的使用场景，比如在什么情况下用awk处理文本效率最高，发散题，至少写1个。"></a>6、总结5个自我觉得比较有用的awk的使用场景，比如在什么情况下用awk处理文本效率最高，发散题，至少写1个。</h3><p>解析：</p><p>取分区利用率或者IP地址时，命令最少</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><br><span class="hljs-attribute">df</span> | awk <span class="hljs-string">&#x27;NR&gt;=2&#123;print <span class="hljs-variable">$1</span>,<span class="hljs-variable">$5</span>&#125;&#x27;</span>    <span class="hljs-comment">#一条命令取出第二行到最后一行的分区及利用率</span><br>ip a | awk -F<span class="hljs-string">&quot;[ /]+&quot;</span> <span class="hljs-string">&#x27;NR==9&#123;print <span class="hljs-variable">$3</span>&#125;&#x27;</span>  <span class="hljs-comment">#以前的命令还需要tr将多个空格合并</span><br><br></code></pre></td></tr></table></figure><h1 id=""><a href="#" class="headerlink" title=""></a></h1><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第三周作业</title>
    <link href="/2022/08/15/%E7%AC%AC%E4%B8%89%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/08/15/%E7%AC%AC%E4%B8%89%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><h4 id="1、yum私有仓库的实现及博客输出"><a href="#1、yum私有仓库的实现及博客输出" class="headerlink" title="1、yum私有仓库的实现及博客输出"></a>1、yum私有仓库的实现及博客输出</h4><h6 id="解析："><a href="#解析：" class="headerlink" title="解析："></a>解析：</h6><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/etc/yum</span>.repos.d/            <span class="hljs-comment">#切换到此目录下</span><br>vim base.repo                   <span class="hljs-comment">#新建Baseos、APPStream、epel仓库</span><br>[Baseos]<br>name=Baseos<br>baseurl=file:<span class="hljs-regexp">//</span><span class="hljs-regexp">/misc/</span>cd/BaseOS<br>        https:<span class="hljs-regexp">//mi</span>rrors.nju.edu.cn<span class="hljs-regexp">/rocky/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/BaseOS/</span>x86_64<span class="hljs-regexp">/os/</span><br>gpgcheck=<span class="hljs-number">1</span><br>gpgkey=file:<span class="hljs-regexp">//</span><span class="hljs-regexp">/etc/</span>pki<span class="hljs-regexp">/rpm-gpg/</span>RPM-GPG-KEY-rockyofficial<br><br><br>[AppStream]<br>name=AppStream<br>baseurl=file:<span class="hljs-regexp">//</span><span class="hljs-regexp">/misc/</span>cd/AppStream<br>        https:<span class="hljs-regexp">//mi</span>rrors.nju.edu.cn<span class="hljs-regexp">/rocky/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/AppStream/</span>x86_64<span class="hljs-regexp">/os/</span>                                <br>gpgcheck=<span class="hljs-number">1</span><br>gpgkey=file:<span class="hljs-regexp">//</span><span class="hljs-regexp">/etc/</span>pki<span class="hljs-regexp">/rpm-gpg/</span>RPM-GPG-KEY-rockyofficial<br><br>[epel]<br>name=epel repo<br>baseurl=https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/epel/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/Everything/</span>x86_64/<br>        https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/epel/</span><span class="hljs-variable">$releasever</span><span class="hljs-regexp">/Everything/</span>x86_64/<br>gpgcheck=<span class="hljs-number">0</span> <br>：wq                            <span class="hljs-comment">#保存退出</span><br><br>yum -y install httpd || systemctl enable --now httpd           <span class="hljs-comment">#安装httpd并启动服务</span><br>dnf reposync --repoid=epel  --download-metadata -p <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>   <span class="hljs-comment">#下载epel源</span><br>reposync -r epel -p <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span><br>createrepo <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>epel/建立源数据                           <span class="hljs-comment">#centos7没有dnf命令需要两步执行下载epel源</span><br><br>完成yum源私有<br><br></code></pre></td></tr></table></figure><p><a href=""><img src="image-20220815222653087.png" alt="image-20220815222653087"></a></p><h4 id="2、画图-TCP协议和三次握手及四次挥手"><a href="#2、画图-TCP协议和三次握手及四次挥手" class="headerlink" title="2、画图 TCP协议和三次握手及四次挥手"></a>2、画图 TCP协议和三次握手及四次挥手</h4><h6 id="解析：-1"><a href="#解析：-1" class="headerlink" title="解析："></a>解析：</h6><p>TCP协议：</p><p><a href=""><img src="image-20220815222721039.png" alt="image-20220815222721039"></a></p><p>三次握手：</p><p><a href=""><img src="image-20220815222739258.png" alt="image-20220815222739258"></a></p><p>四次挥手：</p><p><a href=""><img src="image-20220815222756489.png" alt="image-20220815222756489"></a></p><h4 id="3、静态配置网卡IP，centos-ubuntu实现"><a href="#3、静态配置网卡IP，centos-ubuntu实现" class="headerlink" title="3、静态配置网卡IP，centos/ubuntu实现"></a>3、静态配置网卡IP，centos/ubuntu实现</h4><h6 id="解析：-2"><a href="#解析：-2" class="headerlink" title="解析："></a>解析：</h6><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">centos</span><br>ip a                        <span class="hljs-comment">#命令确认网卡名(ens33)</span><br>vim /etc/sysconfig/network-scripts/ifcfg-ens33   <span class="hljs-comment">#进入并编辑IP设置</span><br>BOOTPROTO=<span class="hljs-string">&quot;satic&quot;</span>           <span class="hljs-comment">#将&quot;dhcp&quot;动态开关更改为&quot;satic&quot;静态开关</span><br>IPADDR=<span class="hljs-number">10.0.0.146</span>           <span class="hljs-comment">#添加IP地址</span><br>NETMASK=<span class="hljs-number">255.255.255.0</span>       <span class="hljs-comment">#添加子网掩码</span><br>GATEWAY=<span class="hljs-number">10.0.0.2</span>            <span class="hljs-comment">#添加网管IP</span><br>DNS1=<span class="hljs-number">114.114.114.114</span>        <br>DNS2=<span class="hljs-number">8.8.8.8</span>                <span class="hljs-comment">#添加物理主机</span><br>:wq                         <span class="hljs-comment">#保存退出</span><br>reboot                      <span class="hljs-comment">#重启</span><br><span class="hljs-comment">#如果更改后有静态IP，且也获取动态IP，说明network与NetworkManager服务冲突</span><br>systemctl stop NetworkManager.service        <span class="hljs-comment">#停止NetworkManager服务</span><br>systemctl disable NetworkManager.service     <span class="hljs-comment">#禁止启动NetworkManager</span><br>systemctl restart network                    <span class="hljs-comment">#重启网络</span><br><br>ubuntu<br>ip a                       <span class="hljs-comment">#命令确认网卡名(ens33)</span><br>ls /etc/netplan            <span class="hljs-comment">#查看IP文件所在的位置（00-installer-config.yaml）</span><br>vim /etc/netplan/<span class="hljs-number">00</span>-installer-config.yaml       <span class="hljs-comment">#进入并编辑IP设置</span><br>dhcp4: <span class="hljs-literal">no</span>                  <span class="hljs-comment">#将true改为no</span><br>addresses:[<span class="hljs-number">10.0.0.129</span>/<span class="hljs-number">24</span>]   <span class="hljs-comment">#添加本机IP地址</span><br>GATEWAY=<span class="hljs-number">10.0.0.2</span>           <span class="hljs-comment">#添加网管IP</span><br>nameservers:<br>   addresses:[<span class="hljs-number">8.8.8.8</span>,<span class="hljs-number">114.114.114.114</span>]<br>:wq                        <span class="hljs-comment">#保存退出</span><br>netplan apply              <span class="hljs-comment">#重启</span><br><br></code></pre></td></tr></table></figure><h3 id="脚本题"><a href="#脚本题" class="headerlink" title="脚本题"></a>脚本题</h3><ol><li>实现免密登陆脚本, expect登陆远程主机，将生成的密钥写入到目标主机, expect测试远程登陆。<br> 1）通过shift读取脚本参数<br> 2）通过select来选择功能.例如功能有</li></ol><ul><li>安装mysql</li><li>安装apache</li><li>免密钥登陆主机<br>当前我们只实现免密钥登陆主机<br>3）通过函数封装每个功能<br>4）将免密钥登陆的过程可以重复进行, while 循环实现重复，需要有退出过程。当用户输入exit时，退出免密钥功能。<br>5）支持输入一批主机免密钥，使用数组 实现</li></ul><h6 id="解析：-3"><a href="#解析：-3" class="headerlink" title="解析："></a>解析：</h6><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs perl"><br><span class="hljs-comment">#!/bin/bash</span><br>ssh() &#123;<br>        <span class="hljs-keyword">while</span> true;<span class="hljs-keyword">do</span><br>                <span class="hljs-keyword">read</span> -p <span class="hljs-string">&quot;Enter your ip and password&quot;</span> ip password<br>                        <span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;$ip&quot;</span> = <span class="hljs-string">&quot;exit&quot;</span> ];then<br>                                <span class="hljs-keyword">exit</span><br>                        fi<br>expect &lt;&lt; EOF<br>set timeout <span class="hljs-number">15</span><br>spawn ssh-keygen -t rsa<br>expect &#123;<br>        <span class="hljs-string">&quot;/root/.ssh/id_rsa)&quot;</span>&#123; <span class="hljs-keyword">send</span> <span class="hljs-string">&quot;\n&quot;</span>;exp_continue&#125;<br>        <span class="hljs-string">&quot;(y/n)?&quot;</span>&#123; <span class="hljs-keyword">send</span> <span class="hljs-string">&quot;y\n&quot;</span>;exp_continue&#125;<br>        <span class="hljs-string">&quot;passphrase):&quot;</span>&#123; <span class="hljs-keyword">send</span> <span class="hljs-string">&quot;\n&quot;</span>;exp_continue&#125;<br>        <span class="hljs-string">&quot;again:&quot;</span>&#123; <span class="hljs-keyword">send</span> <span class="hljs-string">&quot;\n&quot;</span>;exp_continue&#125;<br>&#125;<br>spawn ssh-copy-id root@$ip<br>expect &#123;<br>        <span class="hljs-string">&quot;yes/no&quot;</span>&#123; <span class="hljs-keyword">send</span> <span class="hljs-string">&quot;yes\n&quot;</span>;exp_continue &#125;<br>        <span class="hljs-string">&quot;password&quot;</span>&#123; <span class="hljs-keyword">send</span> <span class="hljs-string">&quot;$password\n&quot;</span>&#125;<br> &#125;<br>expect <span class="hljs-keyword">eof</span><br>EOF<br>done<br> &#125;<br><br><br>PS3=<span class="hljs-string">&quot;Please select a function(1-5)&quot;</span><br><span class="hljs-keyword">select</span> MENU in 安装sql 安装apache 免密钥登录主机 输入一批主机免密钥 退出;<span class="hljs-keyword">do</span><br>case $REPLY in<br><span class="hljs-number">1</span>)<br>        echo <span class="hljs-string">&quot;安装sql&quot;</span>;;<br><span class="hljs-number">2</span>)<br>        echo <span class="hljs-string">&quot;安装apache&quot;</span>;;<br><span class="hljs-number">3</span>)<br>        ssh;;<br><span class="hljs-number">4</span>)<br>        echo <span class="hljs-string">&quot;输入一批主机免密钥&quot;</span>;;<br><span class="hljs-number">5</span>)<br>        echo <span class="hljs-string">&quot;exit&quot;</span><br>        <span class="hljs-keyword">break</span>;;<br>esac<br>done<br><br><br><br><br><br><br></code></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第一周作业</title>
    <link href="/2022/07/03/%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/07/03/%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><h1 id="一、开源许可的区别"><a href="#一、开源许可的区别" class="headerlink" title="一、开源许可的区别"></a>一、开源许可的区别</h1><p><a href=""><img src="image-20220701103613401.png" alt="image-20220701103613401"></a></p><h2 id="1、BSD许可证"><a href="#1、BSD许可证" class="headerlink" title="1、BSD许可证"></a>1、BSD许可证</h2><p>BSD 代码鼓励代码共享，但需要尊重代码作者的著作权。BSD由于允许使用者修改和重新发布代码，也允许使用或在BSD代码上开发商业软件发布和销售，因此是对商业集成很友好的协议。</p><h2 id="2、MIT许可证"><a href="#2、MIT许可证" class="headerlink" title="2、MIT许可证"></a>2、MIT许可证</h2><p>MIT是和BSD一样宽范的许可协议。你必须在你的发行版里包含原许可协议的声明，无论你是以二进制发布的还是以源代码发布的。作者只想保留版权，而无任何其他了限制，较BSD协议宽松。</p><p>一般使用 MIT 授权的项目，需在源文件头部增加以下内容：</p><p>Copyright [yyyy] [name of copyright owner]. All rights reserved.</p><p>//[yyyy] 表示该源文件创建的年份。紧随其后的是 [name of copyright owner]，即版权所有者。如果为个人项目，就写个人名称；若为团队项目，则宜写团队名称。</p><h2 id="3、Apache许可证"><a href="#3、Apache许可证" class="headerlink" title="3、Apache许可证"></a>3、Apache许可证</h2><p>Apache Licence是著名的非盈利开源组织Apache采用的协议。该协议和BSD类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布（作为开源或商业软件）。需要满足的条件也和BSD类似：</p><p>需要给代码的用户一份Apache Licence；<br>如果你修改了代码，需要再被修改的文件中说明。<br>在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。<br>如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache Licence。你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改。<br>Apache Licence也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布/销售。</p><p>该许可证要求在所有的源文件中的头部放置以下内容才能算协议对该文件有效：</p><p>Copyright [yyyy] [name of copyright owner]</p><p>//[yyyy] 表示该源文件创建的年份。紧随其后的是 [name of copyright owner]，即版权所有者。如果为个人项目，就写个人名称；若为团队项目，则宜写团队名称。</p><h2 id="4、GPL许可证"><a href="#4、GPL许可证" class="headerlink" title="4、GPL许可证"></a>4、GPL许可证</h2><p>GPL许可证的核心含义是：允许任何人观看、修改，并散播程序软件里的原始程序码，条件是如果你要发布修改后的版本就要连源代码一起公布，不允许修改后和衍生的代码做为闭源的商业软件发布和销售。</p><p>GPL协议的主要内容是只要在一个软件中使用（”使用”指类库引用，修改后的代码或者衍生代码）GPL 协议的产品，则该软件产品必须也采用GPL协议，即必须也是开源和免费。这就是所谓的”传染性”。GPL协议的产品作为一个单独的产品使用没有任何问题，还可以享受免费的优势。</p><h2 id="5、LGPL许可证"><a href="#5、LGPL许可证" class="headerlink" title="5、LGPL许可证"></a>5、LGPL许可证</h2><p>LGPL 允许以动态链接使用开源库。采用LGPL的代码，一般情况下它本身就是一个第三方库（LGPL最早的名字就是Library GPL），这时候开发人员仅仅用到了它的功能，而没有对库本身进行任何修改，那么开发人员也不必公布自己的商业源代码。但是如果修改LGPL协议的代码或者衍生，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须开源，并且采用LGPL协议。</p><h2 id="6、Mozilla许可证"><a href="#6、Mozilla许可证" class="headerlink" title="6、Mozilla许可证"></a>6、Mozilla许可证</h2><p>Mozilla公共许可证(英语:Mozilla Public License,简称MPL)  允许免费重发布、免费修改，但要求修改后的代码版权归软件的发起者。要求所有再发布者都得有一个专门的文件就对源代码程序修改的时间和修改的方式有描述。允许一个企业在自己已有的源代码库上加一个接口，除了接口程序的源代码以MPL 许可证的形式对外许可外，源代码库中的源代码就可以不用MPL许可证的方式强制对外许可。</p><h1 id="二、centos、rocky、ubuntu系统安装过程"><a href="#二、centos、rocky、ubuntu系统安装过程" class="headerlink" title="二、centos、rocky、ubuntu系统安装过程"></a>二、centos、rocky、ubuntu系统安装过程</h1><h2 id="1、centos安装过程"><a href="#1、centos安装过程" class="headerlink" title="1、centos安装过程"></a>1、centos安装过程</h2><p>①阿里云镜像站下载centos7（下载地址<a href="http://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/">centos-7.9.2009-isos-x86_64安装包下载_开源镜像站-阿里云 (aliyun.com)</a></p><p><a href=""><img src="image-20220701103849188.png" alt="image-20220701103849188"></a></p><p>②创建新的虚拟机</p><p><a href=""><img src="image-20220701104214104.png" alt="image-20220701104214104"></a></p><p><a href=""><img src="image-20220701104241200.png" alt="image-20220701104241200"></a></p><p><a href=""><img src="image-20220701104328742.png" alt="image-20220701104328742"></a></p><p><a href=""><img src="image-20220701104403465.png" alt="image-20220701104403465"></a></p><p><a href=""><img src="image-20220701104448052.png" alt="image-20220701104448052"></a></p><p><a href=""><img src="image-20220701104524464.png" alt="image-20220701104524464"></a> ③安装centos系统</p><p>选择第二项检测安装包并安装    第一项为直接安装</p><p><a href=""><img src="image-20220701104746584.png" alt="image-20220701104746584"></a></p><p>quit：退出   continue：继续</p><p><a href=""><img src="image-20220701104830508.png" alt="image-20220701104830508"></a></p><p>选择时区：亚洲</p><p><a href=""><img src="image-20220701104905861.png" alt="image-20220701104905861"></a></p><p>最小化安装（不选择安装图形）</p><p><a href=""><img src="image-20220701104939128.png" alt="image-20220701104939128"></a></p><p>安装分区：维持原状</p><p><a href=""><img src="image-20220701105018316.png" alt="image-20220701105018316"></a></p><p> 网络：点击启用             更改域名 </p><p><a href=""><img src="image-20220701105053083.png" alt="image-20220701105053083"></a></p><p>  设置root密码</p><p><a href=""><img src="image-20220701105139134.png" alt="image-20220701105139134"></a></p><p>设置普通用户账号和密码</p><p><a href=""><img src="image-20220701105231450.png" alt="image-20220701105231450"></a></p><p> 快照备份init</p><p> <a href=""><img src="image-20220701105306722.png" alt="image-20220701105306722"></a> </p><h2 id="2、rocky安装过程"><a href="#2、rocky安装过程" class="headerlink" title="2、rocky安装过程"></a>2、rocky安装过程</h2><p>①下载地址<a href="https://rockylinux.org/download">Downloads | Rocky Linux</a></p><p>②同centos安装步骤相同</p><h2 id="3、Ubuntu安装过程"><a href="#3、Ubuntu安装过程" class="headerlink" title="3、Ubuntu安装过程"></a>3、Ubuntu安装过程</h2><p>①下载地址<a href="https://rockylinux.org/download"><a href="https://cn.ubuntu.com/download/server/step1">获取Ubuntu服务器版 | Ubuntu</a></a></p><p>阿里云下载地址<a href="https://mirrors.aliyun.com/ubuntu-releases/">ubuntu-releases安装包下载_开源镜像站-阿里云 (aliyun.com)</a></p><p>②创建虚拟机同centos相同</p><p>③安装系统</p><p><a href=""><img src="image-20220701105427959.png" alt="image-20220701105427959"></a></p><p>不更新</p><p><a href=""><img src="image-20220701105459283.png" alt="image-20220701105459283"></a></p><p>地址由官网更改为阿里云地址</p><p><a href=""><img src="image-20220701105531440.png" alt="image-20220701105531440"></a></p><p><img src="image-20220701105600914.png" alt="image-20220701105600914"></p><p>设置普通用户账号与密码</p><p><a href=""><img src="image-20220701105629215.png" alt="image-20220701105629215"></a></p><p> 按空格键选中远程连接</p><p><a href=""><img src="image-20220701105701743.png" alt="image-20220701105701743"></a></p><p> <a href=""><img src="image-20220701105819361.png" alt="image-20220701105819361"></a></p><h1 id="三、Linux总结"><a href="#三、Linux总结" class="headerlink" title="三、Linux总结"></a>三、Linux总结</h1><h2 id="1、获取相关命令"><a href="#1、获取相关命令" class="headerlink" title="1、获取相关命令"></a>1、获取相关命令</h2><p>man -k ‘process’|grep’(1|8)’</p><h2 id="2、获取命令的man文档"><a href="#2、获取命令的man文档" class="headerlink" title="2、获取命令的man文档"></a>2、获取命令的man文档</h2><p>man 7 man</p><h2 id="3、man的组成及解释"><a href="#3、man的组成及解释" class="headerlink" title="3、man的组成及解释"></a>3、man的组成及解释</h2><p>①man分9部分：用户命令、系统调用、C库调用、设备文件及特殊文件、配置文件格式、游戏、杂项、管理类的命令、Linux内核API</p><p>②man的解释：</p><p>Name: man页面描述的命令名<br>Synopsis:  语法<br>Configuration: 设备配置详情<br>Description: 程序的作用描述<br>Options:  命令行选项描述<br>Exit Status: 命令退出状态码相关<br>Return Value: man页面是 2和3相关的，库进行调用之后返回啥？<br>Errors:  错误相关<br>Environment: 程序可以接受哪些环境变量<br>Files:  程序会使用哪些配置文件<br>Attributes:  命令的相关属性<br>Versions:  程序某些库显著改变相关的版本<br>Notes: 一些备注<br>Bugs: 已知bug，提交bug<br>Examples: 命令使用示例<br>Authors:  编写，维护命令的作者们<br>See also: 命令相关的命令</p><p>[] 可以选的<br>&lt;&gt; 必选内容<br>[[] &lt;&gt;]   使用括号中的内容时，选项可以省略，值不能省略。如果有多个此类形式，就需要参数。如果此形式在命令紧随其后，我们可以省略选项<br>一般运行一个命令，可以忽略所有[]中的内容</p><h2 id="4、根据语法写简要操作"><a href="#4、根据语法写简要操作" class="headerlink" title="4、根据语法写简要操作"></a>4、根据语法写简要操作</h2><h1 id="四、解释fstab字符的含义"><a href="#四、解释fstab字符的含义" class="headerlink" title="四、解释fstab字符的含义"></a>四、解释fstab字符的含义</h1><p> <a href=""><img src="image-20220701105937639.png" alt="image-20220701105937639"></a></p><p>①<code>&lt;file system&gt;</code>- 要挂载的分区或存储设备</p><p>②<code>&lt;mount point&gt;</code>-<code>&lt;file system&gt;</code>的挂载位置</p><p>③<code>&lt;type&gt;</code>-要挂载设备或是分区的文件系统类型，支持许多种不同的文件系统：ext2, ext3, ext4, reiserfs, xfs, jfs, smbfs, iso9660, vfat, ntfs, swap 及 auto。 设置成auto类型，mount 命令会猜测使用的文件系统类型，对 CDROM 和 DVD 等移动设备是非常有用的。</p><p>④<code>&lt;options&gt;</code>-指定挂载的选项，默认为defaults，其他可用选项包括acl、noauto、ro等</p><p>⑤<code>&lt;dump&gt;</code>-表示该挂载后的文件系统能否被dump备份命令作用。0表示不能；1表示备份</p><p>⑥<code>&lt;pass&gt;</code>-表示开机过程中是否校检扇区。0表示不校检；1表示优先校检（一般为根目录）；2表示在1级别校检完成后再校检</p><h1 id="五、简要说明FHS结构"><a href="#五、简要说明FHS结构" class="headerlink" title="五、简要说明FHS结构"></a>五、简要说明FHS结构</h1><p>①Filesystem Hierarchy Standard（文件系统目录标准）的缩写，多数Linux版本采用这种文件组织形式，类似于Windows操作系统中c盘的文件目录，FHS采用<strong>树形</strong>结构组织文件。</p><p>②FHS ：文件系统层级结构</p><p>/：根目录，所有的目录、文件、设备都在/之下，/就是Linux文件系统的组织者，也是最上级的领导者。</p><p>/bin 可执行文件，binary，用户命令</p><p>/boot 系统启动相关的文件</p><p>/dev device、设备文件因为在这个目录中包含了所有linux系统中使用的外部设备。它实际上是一个访问这些外部设备的端口。</p><p>/etc 配置文件，纯文本文件的配置文件要用到的网络配置文件，文件系统，x系统配置文件，设备配置信息，设置用户信息等都在这个目录下。</p><p>/home 家目录，root用户的家目录不在/home目录</p><p>/lib library，库文件和内核模块文件,这个目录是用来存放系统动态连接共享库的。</p><p>/mnt 挂载点目录，通常挂载其他文件系统,这个目录一般是用于存放挂载储存设备的挂载目录的，</p><div class="code-wrapper"><pre><code class="hljs">    比如有cdrom等目录。可以参看/etc/fstab的定义    什么是挂载点？光盘放进光驱后，必须要将设备关联到当前文件系统树上的某个节点上，    才能进行访问，把某个设备和当前文件系统上某个目录进行关联的这个过程，叫做挂载。</code></pre></div><p>/root root用户的家目录，在生产环境中不允许用root用户登录</p><p>/run 进程相关的数据</p><p>/sbin 管理员命令</p><p>/srv 系统服务相关数据 系统启动服务时候可以访问的数据库目录</p><p>/tmp temp,临时文件目录</p><p>/usr 系统核心所在目录 、系统资源所在</p><p>/var 可以理解为vary的缩写，/var下有/var/log 这是用来存放系统日志的目录。</p><h1 id="六、总结文件管理、用户管理、组用户、权限管理相关命令"><a href="#六、总结文件管理、用户管理、组用户、权限管理相关命令" class="headerlink" title="六、总结文件管理、用户管理、组用户、权限管理相关命令"></a>六、总结文件管理、用户管理、组用户、权限管理相关命令</h1><h2 id="1、文件管理相关命令"><a href="#1、文件管理相关命令" class="headerlink" title="1、文件管理相关命令"></a>1、文件管理相关命令</h2><p>cd:切换目录   ls：查看当前目录的内容    touch：创建文件夹     cp：复制文件     mv：移动文件   rm：删除文件    mkdir：创建目录   </p><h2 id="2、用户管理命令"><a href="#2、用户管理命令" class="headerlink" title="2、用户管理命令"></a>2、用户管理命令</h2><p>useradd：创建新用户       usermod：修改用户属性              userdel：删除用户     passwd：修改用户密码    su：切换用户   id：查看用户的UID、GID信息</p><h2 id="3、组用户命令"><a href="#3、组用户命令" class="headerlink" title="3、组用户命令"></a>3、组用户命令</h2><p>groupadd：创建组      groupmod:  修改组属性        groupdel:删除组用户</p><h2 id="4、文件权限管理命令"><a href="#4、文件权限管理命令" class="headerlink" title="4、文件权限管理命令"></a>4、文件权限管理命令</h2><p>chown：修改文件属性，修改文件组属性       chgrp：只修改文件的属组    chmod：修改文件权限</p><p>owner   属主，u                group   属组，g                       other    其他，o</p><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第二周作业</title>
    <link href="/2022/07/01/%E7%AC%AC%E4%BA%8C%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2022/07/01/%E7%AC%AC%E4%BA%8C%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p><strong>题目：完成一个shell脚本，脚本的作用。</strong></p><ol><li><p>运行脚本可以显示出本机的ip地址</p></li><li><p>如果ip地址中有3这个数字，那么就打印出当前的系统时间</p></li><li><p>如果ip地址中不含3这个数字，就批量建立用户magedu_00, magedu_01, … magedu_100并<br>且所有用户同属于magedu组（把一个用户添加到一个组里，例如用户zhang，添加到magedu组，可以<br>使用命令：usermod -aG magedu zhang；在一个文件a.txt里输入内容zhang，可以用命令：<br>echo zhang  &gt;&gt;  a.txt）</p></li><li><p>打印出/etc/passwd这个文件中可以登陆的用户（非/usr/sbin/nologin）</p></li><li><p>yum安装nginx服务，并且启动该服务</p></li><li><p>一个脚本完成</p></li></ol><p><strong>解答：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>ifconfig eth0 | sed -rn &#x27;2s/(.*inet )([0-9].*)(  netmask.*)/\2/p&#x27;<br>IP=$(ifconfig eth0 | sed -rn &#x27;2s/(.*inet )([0-9].*)(  netmask.*)/\2/p&#x27;)<br>if echo $IP | grep &#x27;3&#x27;;then<br>    echo $(data +%F%n%T)<br>else<br>    groupadd magedu<br>    for Number in &#123;1..100&#125;;do<br>        useradd magedu_$Number -g magedu<br>    done<br>fi<br><br>cat /etc/passwd |grep -v /sbin/nologin<br><br>yum -y install nginx<br>systemctl start nginx.service <br><br></code></pre></td></tr></table></figure><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>shell</category>
      
    </categories>
    
    
    <tags>
      
      <tag>script</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>免费搞网站-gitpages</title>
    <link href="/2022/05/12/%E5%85%8D%E8%B4%B9%E6%90%9E%E7%BD%91%E7%AB%99-gitpages/"/>
    <url>/2022/05/12/%E5%85%8D%E8%B4%B9%E6%90%9E%E7%BD%91%E7%AB%99-gitpages/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>完全免费的git网站搭建, 参考 <a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><p>实现的目标: 本地写markdown, 推送github即可以看 github.io 域名查看网页。</p><p>实现的工具</p><ul><li><code>nodejs</code>           hexo生成网站</li><li><code>codeup.aliyun.com</code>    保存自己的博客代码</li><li><code>github.com</code>   静态页面展示 </li><li><code>vscode</code>   开发工具</li></ul><span id="more"></span><h1 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h1><p>参考  <a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a> 确保访问OK</p><p>slcnx.github.io 仓库名</p><p>准备index.html</p><figure class="highlight xml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>主页<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  hello world<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="20220512214701-16524035403072.png" alt="image-20220512214700115"></p><p><img src="20220512214623.png" alt="image-20220512214617755"></p><h1 id="docker推送github"><a href="#docker推送github" class="headerlink" title="docker推送github"></a>docker推送github</h1><p>新建临时目录，vscode打开, 准备以下文件</p><p>id_rsa_2048 <strong>需要linux生成或xshell生成，不可以自己生成</strong></p><p>id_rsa_2048的公钥加入到以上仓库中</p><p><img src="20220512225649.png" alt="image-20220512225647448"></p><p>Dockerfile</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">FROM</span> node:latest<br><br><br>WORKDIR /data/git <br><br><span class="hljs-built_in">ADD</span> id_rsa_2048 /root/.ssh/<br><span class="hljs-built_in">RUN</span>  chmod 600 /root/.ssh/id_rsa_2048 <br><br><span class="hljs-built_in">ADD</span> . ./<br><br><span class="hljs-comment"># 生成网页</span><br><span class="hljs-comment">#RUN npm run build </span><br><br><br><span class="hljs-comment"># 上传到GIT</span><br><br><span class="hljs-built_in">RUN</span> install -dv /data/page/ &amp;&amp; cp -a index.html /data/page/<br><br><br>WORKDIR /data/page/<br>ENV <span class="hljs-attribute">GIT_SSH_COMMAND</span>=<span class="hljs-string">&#x27;ssh -i /root/.ssh/id_rsa_2048  -o IdentitiesOnly=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no&#x27;</span><br><span class="hljs-built_in">RUN</span> git<span class="hljs-built_in"> config </span>--global init.defaultBranch main &amp;&amp; git<span class="hljs-built_in"> config </span>--global user.email <span class="hljs-string">&#x27;2192383945@qq.com&#x27;</span> &amp;&amp; git<span class="hljs-built_in"> config </span>--global user.name <span class="hljs-string">&#x27;songliangcheng&#x27;</span>  &amp;&amp; \<br>    git<span class="hljs-built_in"> config </span>--global pull.rebase <span class="hljs-literal">true</span> &amp;&amp; \<br>    git init &amp;&amp; \<br>    git remote <span class="hljs-built_in">add</span> origin git@github.com:slcnx/slcnx.github.io.git &amp;&amp; git <span class="hljs-built_in">add</span> -A &amp;&amp; git commit -m init &amp;&amp; git push --force origin main <br></code></pre></td></tr></table></figure><p>index.html</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>主页<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    cat<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">D:\vscode_projects\myblog&gt;docker build -t <span class="hljs-built_in">test</span> .<br></code></pre></td></tr></table></figure><p><img src="20220512223352.png" alt="image-20220512223351323"></p><h1 id="本地生成hexo仓库"><a href="#本地生成hexo仓库" class="headerlink" title="本地生成hexo仓库"></a>本地生成hexo仓库</h1><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g<br><br><span class="hljs-comment"># 当前目录为项目根</span><br>hexo init test1blog<br><span class="hljs-built_in">cd</span> test1blog<br><br><span class="hljs-comment"># 内容</span><br>$ <span class="hljs-built_in">ls</span><br>_config.landscape.yml  node_modules/  package-lock.json  <span class="hljs-built_in">source</span>/<br>_config.yml            package.json   scaffolds/         themes/<br></code></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p><img src="20220512224452.png" alt="image-20220512224451207"></p><h2 id="发布到github"><a href="#发布到github" class="headerlink" title="发布到github"></a>发布到github</h2><p>在以上目录 <code>test1blog</code> 中生成以下文件</p><ol><li><p><code>.dockerignore</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">node_modules/<br></code></pre></td></tr></table></figure></li><li><p><code>Dockerfile</code></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> node:latest<br><br><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /data/git </span><br><br><span class="hljs-keyword">ADD</span><span class="language-bash"> id_rsa_2048 /root/.ssh/</span><br><span class="hljs-keyword">RUN</span><span class="language-bash">  <span class="hljs-built_in">chmod</span> 600 /root/.ssh/id_rsa_2048 </span><br><br><span class="hljs-keyword">ADD</span><span class="language-bash"> . ./</span><br><br><span class="hljs-comment"># 生成网页</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> npm install &amp;&amp; npm run build </span><br><br><span class="hljs-comment"># 上传到GIT</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> install -dv /data/page/ &amp;&amp; <span class="hljs-built_in">cp</span> -a public /data/page/</span><br><br><span class="hljs-keyword">ARG</span> GITHUB<br><span class="hljs-keyword">ARG</span> GUSER <br><span class="hljs-keyword">ARG</span> EMAIL <br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /data/page/public/</span><br><span class="hljs-keyword">ENV</span> GIT_SSH_COMMAND=<span class="hljs-string">&#x27;ssh -i /root/.ssh/id_rsa_2048  -o IdentitiesOnly=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no&#x27;</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> git config --global init.defaultBranch main &amp;&amp; git config --global user.email <span class="hljs-variable">$EMAIL</span>  &amp;&amp; git config --global user.name <span class="hljs-variable">$GUSER</span>  &amp;&amp; \</span><br><span class="language-bash">    git config --global pull.rebase <span class="hljs-literal">true</span> &amp;&amp; \</span><br><span class="language-bash">    git init &amp;&amp; \</span><br><span class="language-bash">    git remote add origin <span class="hljs-variable">$GITHUB</span> &amp;&amp; git add -A &amp;&amp; git commit -m init &amp;&amp; git push --force origin main </span><br></code></pre></td></tr></table></figure></li><li><p><code>id_rsa_2048</code> 以上与github互通的密钥</p></li><li><p>发布</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">docker build <span class="hljs-attr">--build-arg</span> GITHUB=git@github<span class="hljs-selector-class">.com</span>:slcnx/slcnx<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.git</span> <span class="hljs-attr">--build-arg</span> EMAIL=<span class="hljs-string">&#x27;2192383945@qq.com&#x27;</span> <span class="hljs-attr">--build-arg</span> GUSER=<span class="hljs-string">&#x27;songliangcheng&#x27;</span> ./<br></code></pre></td></tr></table></figure></li></ol><p><img src="20220512225143.png" alt="image-20220512225141348"></p><h1 id="codeup一键发布"><a href="#codeup一键发布" class="headerlink" title="codeup一键发布"></a>codeup一键发布</h1><h2 id="添加codeup仓库"><a href="#添加codeup仓库" class="headerlink" title="添加codeup仓库"></a>添加codeup仓库</h2><p>将当前仓库加入到自己的codeup中</p><p><img src="20220512230442.png" alt="image-20220512230441057"></p><p>复制https地址 <a href="https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git">https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git</a></p><h2 id="初始化代码"><a href="#初始化代码" class="headerlink" title="初始化代码"></a>初始化代码</h2><p>将上面test1blog中，初始化，添加代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global init.defaultBranch main<br>git init<br>git remote add origin https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git<br></code></pre></td></tr></table></figure><p>添加文件 <code>.gitignore</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Logs</span><br>logs<br>*.<span class="hljs-built_in">log</span><br>npm-debug.log*<br>yarn-debug.log*<br>yarn-error.log*<br>lerna-debug.log*<br>.pnpm-debug.log*<br><br><span class="hljs-comment"># Diagnostic reports (https://nodejs.org/api/report.html)</span><br>report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json<br><br><span class="hljs-comment"># Runtime data</span><br>pids<br>*.pid<br>*.seed<br>*.pid.lock<br><br><span class="hljs-comment"># Directory for instrumented libs generated by jscoverage/JSCover</span><br>lib-cov<br><br><span class="hljs-comment"># Coverage directory used by tools like istanbul</span><br>coverage<br>*.lcov<br><br><span class="hljs-comment"># nyc test coverage</span><br>.nyc_output<br><br><span class="hljs-comment"># Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)</span><br>.grunt<br><br><span class="hljs-comment"># Bower dependency directory (https://bower.io/)</span><br>bower_components<br><br><span class="hljs-comment"># node-waf configuration</span><br>.lock-wscript<br><br><span class="hljs-comment"># Compiled binary addons (https://nodejs.org/api/addons.html)</span><br>build/Release<br><br><span class="hljs-comment"># Dependency directories</span><br>node_modules/<br>jspm_packages/<br><br><span class="hljs-comment"># Snowpack dependency directory (https://snowpack.dev/)</span><br>web_modules/<br><br><span class="hljs-comment"># TypeScript cache</span><br>*.tsbuildinfo<br><br><span class="hljs-comment"># Optional npm cache directory</span><br>.npm<br><br><span class="hljs-comment"># Optional eslint cache</span><br>.eslintcache<br><br><span class="hljs-comment"># Optional stylelint cache</span><br>.stylelintcache<br><br><span class="hljs-comment"># Microbundle cache</span><br>.rpt2_cache/<br>.rts2_cache_cjs/<br>.rts2_cache_es/<br>.rts2_cache_umd/<br><br><span class="hljs-comment"># Optional REPL history</span><br>.node_repl_history<br><br><span class="hljs-comment"># Output of &#x27;npm pack&#x27;</span><br>*.tgz<br><br><span class="hljs-comment"># Yarn Integrity file</span><br>.yarn-integrity<br><br><span class="hljs-comment"># dotenv environment variable files</span><br>.<span class="hljs-built_in">env</span><br>.env.development.local<br>.env.test.local<br>.env.production.local<br>.env.local<br><br><span class="hljs-comment"># parcel-bundler cache (https://parceljs.org/)</span><br>.cache<br>.parcel-cache<br><br><span class="hljs-comment"># Next.js build output</span><br>.next<br>out<br><br><span class="hljs-comment"># Nuxt.js build / generate output</span><br>.nuxt<br>dist<br><br><span class="hljs-comment"># Gatsby files</span><br>.cache/<br><span class="hljs-comment"># Comment in the public line in if your project uses Gatsby and not Next.js</span><br><span class="hljs-comment"># https://nextjs.org/blog/next-9-1#public-directory-support</span><br><span class="hljs-comment"># public</span><br><br><span class="hljs-comment"># vuepress build output</span><br>.vuepress/dist<br><br><span class="hljs-comment"># vuepress v2.x temp and cache directory</span><br>.temp<br>.cache<br><br><span class="hljs-comment"># Docusaurus cache and generated files</span><br>.docusaurus<br><br><span class="hljs-comment"># Serverless directories</span><br>.serverless/<br><br><span class="hljs-comment"># FuseBox cache</span><br>.fusebox/<br><br><span class="hljs-comment"># DynamoDB Local files</span><br>.dynamodb/<br><br><span class="hljs-comment"># TernJS port file</span><br>.tern-port<br><br><span class="hljs-comment"># Stores VSCode versions used for testing VSCode extensions</span><br>.vscode-test<br><br><span class="hljs-comment"># yarn v2</span><br>.yarn/cache<br>.yarn/unplugged<br>.yarn/build-state.yml<br>.yarn/install-state.gz<br>.pnp.*<br><br><br><span class="hljs-comment"># 静态文件</span><br>public <br></code></pre></td></tr></table></figure><h2 id="推送aliyun"><a href="#推送aliyun" class="headerlink" title="推送aliyun"></a>推送aliyun</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 状态</span><br>$ git status<br>hint: core.useBuiltinFSMonitor will be deprecated soon; use core.fsmonitor instead<br>hint: Disable this message with <span class="hljs-string">&quot;git config advice.useCoreFSMonitorConfig false&quot;</span><br>On branch main<br><br>No commits yet<br><br>Untracked files:<br>  (use <span class="hljs-string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="hljs-keyword">in</span> what will be committed)<br>        .dockerignore<br>        .github/<br>        .gitignore<br>        .npmignore<br>        Dockerfile<br>        _config.landscape.yml<br>        _config.yml<br>        db.json<br>        id_rsa_2048<br>        package-lock.json<br>        package.json<br>        scaffolds/<br>        <span class="hljs-built_in">source</span>/<br>        themes/<br>        <br><span class="hljs-comment"># 生成标志</span><br>$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;1111&#x27;</span> &gt;&gt; <span class="hljs-built_in">source</span>/_posts/hello-world.md<br><br><span class="hljs-comment"># 推送</span><br>git add . <br>git commit -m init<br><br>$ git push origin main<br>Enumerating objects: 122, <span class="hljs-keyword">done</span>.<br>Counting objects: 100% (122/122), <span class="hljs-keyword">done</span>.<br>Delta compression using up to 8 threads<br>Compressing objects: 100% (110/110), <span class="hljs-keyword">done</span>.<br>Writing objects: 100% (122/122), 580.00 KiB | 7.34 MiB/s, <span class="hljs-keyword">done</span>.<br>Total 122 (delta 0), reused 0 (delta 0), pack-reused 0<br>To https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git<br> * [new branch]      main -&gt; main<br><br></code></pre></td></tr></table></figure><h2 id="aliyun验证"><a href="#aliyun验证" class="headerlink" title="aliyun验证"></a>aliyun验证</h2><p><img src="20220512231059.png" alt="image-20220512231058218"></p><h2 id="添加流水线"><a href="#添加流水线" class="headerlink" title="添加流水线"></a>添加流水线</h2><p><img src="20220512231120.png" alt="image-20220512231118465"></p><p><img src="20220512231146.png" alt="image-20220512231145367"></p><p><img src="20220513000840.png" alt="image-20220513000838863"></p><p><img src="20220512231255.png" alt="image-20220512231253578"></p><p><img src="20220512231628.png" alt="image-20220512231626849"></p><p>删除kubernetes发布</p><p>保存并运行</p><p><img src="20220512231324.png" alt="image-20220512231322519"></p><h2 id="查看运行日志"><a href="#查看运行日志" class="headerlink" title="查看运行日志"></a>查看运行日志</h2><p><img src="20220512232021.png" alt="image-20220512232019242"></p><h2 id="查看github进度"><a href="#查看github进度" class="headerlink" title="查看github进度"></a>查看github进度</h2><p><img src="20220512232122.png" alt="image-20220512232121239"></p><h2 id="查看页面"><a href="#查看页面" class="headerlink" title="查看页面"></a>查看页面</h2><p>当进度为</p><p><img src="20220512232141.png" alt="image-20220512232140087"></p><p><img src="20220512232151.png" alt="image-20220512232150142"></p><h1 id="开发方式"><a href="#开发方式" class="headerlink" title="开发方式"></a>开发方式</h1><h2 id="准备vscode"><a href="#准备vscode" class="headerlink" title="准备vscode"></a>准备vscode</h2><p>在vscode中加载 codeup的仓库</p><p>安装插件 typora  <strong>安装后需要重启vscode</strong></p><p><img src="20220512231737.png" alt="image-20220512231735959"></p><h2 id="本地开发"><a href="#本地开发" class="headerlink" title="本地开发"></a>本地开发</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># clone 代码</span><br><br><span class="hljs-comment"># 安装依赖</span><br>npm install<br><br><span class="hljs-comment"># 运行服务</span><br>npx hexo server<br></code></pre></td></tr></table></figure><blockquote><p><code>npx command</code> 相当于加载了<code>$(npm bin)</code> 目录到环境变量, 后面的命令可以执行</p></blockquote><p>通过本地调试出合理的界面, 推送aliyun, 就可以一键发布</p><h2 id="本地添加文章"><a href="#本地添加文章" class="headerlink" title="本地添加文章"></a>本地添加文章</h2><p>脚本 <code>addarticle.sh</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">echo -ne <span class="hljs-string">&quot;Enter a \033[1;31mtitle\033[0m for your blog: &quot;</span>; read title<br>[ $? -ne <span class="hljs-number">0</span> ] &amp;&amp; echo <span class="hljs-string">&#x27;exit&#x27;</span> &amp;&amp; sleep <span class="hljs-number">3</span> &amp;&amp; <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span><br>[ -z <span class="hljs-string">&quot;$title&quot;</span> ] &amp;&amp; echo title must be exists. &amp;&amp; sleep <span class="hljs-number">3</span> &amp;&amp; <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span><br>npx hexo new <span class="hljs-string">&quot;$title&quot;</span><br><br>start $(readlink -f .)<span class="hljs-regexp">/source/</span>_posts<br></code></pre></td></tr></table></figure><p>生成文章, 运行脚本</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">第1个文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-05-12 23:27:58</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h2 id="个性化页面展示"><a href="#个性化页面展示" class="headerlink" title="个性化页面展示"></a>个性化页面展示</h2><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><ul><li><code>hexo站点配置</code></li><li><code>fluid</code>主题配置</li><li><code>阅读量</code></li><li><code>评论功能</code></li></ul><p>例如修改标题 <code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-string">&quot;5-12 23:30&quot;</span><br><span class="hljs-comment"># ...</span><br><br><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 处理typora相对路径</span><br>npm install hexo-typora-asset --registry https://registry.npmjs.org --save<br></code></pre></td></tr></table></figure><p>typora中的配置</p><p><img src="image-20220513092438970.png" alt="image-20220513092438970"></p><p>重启 <code>npx hexo server</code></p><p><img src="20220512233119.png" alt="image-20220512233117729"></p><h2 id="文章默认页面-可选"><a href="#文章默认页面-可选" class="headerlink" title="文章默认页面(可选)"></a>文章默认页面(可选)</h2><p><a href="https://hexo.io/docs/writing#Scaffolds">https://hexo.io/docs/writing#Scaffolds</a></p><p>当我们写大量的文章,发现主页不应该显示所有内容,需要readmore, readmore之前有1小段简介</p><p>如下, 上面的nginx文章会<code>显示标题,简介,readmore</code>, 而下面的hello world就显示所有, 这两者区别在于</p><p>后者,默认</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">第1个文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-05-12 23:27:58</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>前者</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">第1个文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-05-12 23:27:58</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">hello</span><br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">nginx</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-comment"># 背景</span><br><br><span class="hljs-string">这篇讲解如何编译安装nginx,</span> <span class="hljs-string">优化nginx</span><br><br><span class="hljs-string">&lt;!--more--&gt;</span><br></code></pre></td></tr></table></figure><p><img src="20220512234116.png" alt="image-20220512234114962"></p><p>要实现每个文章创建均生成nginx这样的模板, 编辑 <code>scaffolds/post.md</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> &#123;&#123; <span class="hljs-string">title</span> &#125;&#125;<br><span class="hljs-attr">date:</span> &#123;&#123; <span class="hljs-string">date</span> &#125;&#125;<br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-comment"># 背景</span><br><br><span class="hljs-string">&lt;!--more--&gt;</span><br></code></pre></td></tr></table></figure><p>现在运行脚本 <code>addarticle.sh</code> 添加<strong>第2个文章</strong></p><p>网页已经达到效果</p><p><img src="20220512234553.png" alt="image-20220512234551537"></p><h2 id="准备一个主题-fluid"><a href="#准备一个主题-fluid" class="headerlink" title="准备一个主题 fluid"></a>准备一个主题 fluid</h2><blockquote><p>使用此主题后, 不需要前面的文章默认页面, 每个页面不需要加<code>&lt;!--more--&gt;</code> 主题会自动抽取前多少个字符,作为描述的.</p></blockquote><p>Fluid主题 <a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ git submodule add https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/fluid-dev/</span>hexo-theme-fluid.git themes/fluid<br></code></pre></td></tr></table></figure><p>编辑 <code>_config.yml</code></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean"># Extensions<br>## Plugins: https:<span class="hljs-comment">//hexo.io/plugins/</span><br>## Themes: https:<span class="hljs-comment">//hexo.io/themes/</span><br>theme: fluid<br></code></pre></td></tr></table></figure><p>重启 <code>npx hexo server</code></p><p><img src="20220512235039.png" alt="image-20220512235038001"></p><p>配置主题 <code>fluid</code> 需要准备一个文件 <code>_config.主题名.yml</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp themes<span class="hljs-regexp">/fluid/</span>_config.yml _config.fluid.yml<br></code></pre></td></tr></table></figure><p>测试配置是否生效,修改 <code>_config.fluid.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 首页副标题的独立设置</span><br><span class="hljs-comment"># Independent config of home page subtitle</span><br><span class="hljs-attr">slogan:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 为空则按 hexo config.subtitle 显示</span><br>  <span class="hljs-comment"># If empty, text based on `subtitle` in hexo config</span><br>  <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;Hello 05-12 .... &quot;</span><br></code></pre></td></tr></table></figure><p>重启 <code>npx hexo server</code></p><p><img src="20220512235647.png" alt="image-20220512235645718"></p><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p>准备脚本 <code>push.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>git config --<span class="hljs-built_in">local</span> pull.rebase <span class="hljs-literal">true</span><br>git add .<br>git commit -m <span class="hljs-string">&quot;笔记本-`date +%F_%T`&quot;</span><br><br><br>git push origin main<br><br>git pull origin main<br>[ $? -ne 0 ] &amp;&amp; <span class="hljs-built_in">exit</span> -1<br><br>git push origin main<br><br><span class="hljs-comment"># test</span><br>start $(<span class="hljs-built_in">readlink</span> -f .)/source/_posts<br></code></pre></td></tr></table></figure><p><a href="https://slcnx.github.io/">https://slcnx.github.io/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
